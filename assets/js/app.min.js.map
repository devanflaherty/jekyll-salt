{"version":3,"sources":["app.js","motion-ui.js","_is-device.js","header.js","what-input.js","foundation.core.js","foundation.util.box.js","foundation.util.keyboard.js","foundation.util.mediaQuery.js","foundation.util.motion.js","foundation.util.nest.js","foundation.util.timerAndImageLoader.js","foundation.util.touch.js","foundation.util.triggers.js","foundation.abide.js","foundation.accordion.js","foundation.accordionMenu.js","foundation.drilldown.js","foundation.dropdown.js","foundation.dropdownMenu.js","foundation.equalizer.js","foundation.interchange.js","foundation.magellan.js","foundation.offcanvas.js","foundation.orbit.js","foundation.responsiveMenu.js","foundation.responsiveToggle.js","foundation.reveal.js","foundation.slider.js","foundation.sticky.js","foundation.tabs.js","foundation.toggler.js","foundation.tooltip.js","connect-reveal.js","mobile-nav.js","scroll-down.js","showcase-single.js","_init.js","head.js","process.js","showcase.js"],"names":["_classCallCheck","instance","Constructor","TypeError","animate","isIn","element","animation","cb","finish","hide","reset","apply","style","transitionDuration","removeClass","initClass","activeClass","$","eq","length","endEvent","show","initClasses","activeClasses","addClass","css","requestAnimationFrame","offsetWidth","one","isiPhone","navigator","platform","indexOf","isiPad","resizeDiv","vph","window","height","whatInput","eventBuffer","event","clearTimer","setInput","buffer","timer","setTimeout","bufferedEvent","clearTimeout","eventKey","key","value","inputMap","type","pointerType","currentInput","activeElement","document","nodeName","toLowerCase","body","hasAttribute","formInputs","ignoreMap","switchInput","logKeys","string","setAttribute","inputTypes","push","keyCode","which","pointerMap","activeKeys","keyMap","unLogKeys","arrayPos","splice","bindEvents","PointerEvent","addEventListener","MSPointerEvent","mouseWheel","detectWheel","createElement","undefined","onmousewheel","keydown","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","9","13","16","27","32","37","38","39","40","2","3","4","Array","prototype","ask","keys","types","set","_typeof","Symbol","iterator","obj","constructor","functionName","fn","Function","name","funcNameRegex","results","exec","toString","trim","parseValue","str","isNaN","parseFloat","hyphenate","replace","FOUNDATION_VERSION","Foundation","version","_plugins","_uuids","rtl","attr","plugin","className","attrName","this","registerPlugin","pluginName","uuid","GetYoDigits","$element","data","trigger","unregisterPlugin","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","_this","fns","object","plgs","forEach","p","foundation","Object","err","console","error","namespace","Math","round","pow","random","slice","reflow","elem","i","$elem","find","addBack","$el","opts","warn","split","e","opt","map","el","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","t","triggerHandler","util","throttle","func","delay","context","args","arguments","method","$meta","$noJS","appendTo","head","MediaQuery","call","plugClass","ReferenceError","Date","now","getTime","vendors","vp","cancelAnimationFrame","test","userAgent","lastTime","callback","nextTime","max","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","jQuery","ImNotTouchingYou","parent","lrOnly","tbOnly","top","bottom","left","right","eleDims","GetDimensions","parDims","offset","width","windowDims","allDirs","Error","rect","getBoundingClientRect","parRect","parentNode","winRect","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","anchor","position","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","commands","Keyboard","parseKey","String","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","extend","returnValue","handled","unhandled","findFocusable","filter","is","register","componentName","trapFocus","$focusable","$firstFocusable","$lastFocusable","on","target","preventDefault","focus","releaseFocus","off","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","hasOwnProperty","isArray","queries","current","namedQueries","self","extractedStyles","_getCurrentSize","_watcher","atLeast","size","query","get","matchMedia","matches","matched","newSize","currentSize","styleMedia","media","script","getElementsByTagName","info","id","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","Move","duration","move","ts","prog","anim","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","children","aria-haspopup","aria-label","aria-expanded","data-submenu","aria-hidden","Burn","Timer","options","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","complete","readyState","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","dir","x","touches","pageX","dx","pageY","startPosX","elapsedTime","startTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","init","enabled","documentElement","special","swipe","setup","noop","addTouch","handleTouch","simulatedEvent","changedTouches","first","eventTypes","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","mutateListener","closemeListener","yetiBoxes","plugNames","listeners","join","pluginId","not","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","attributeName","closest","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","stopPropagation","fadeOut","IHearYou","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Abide","defaults","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","validateOnBlur","isGood","checked","$error","siblings","formErrorSelector","$label","$els","_this3","labels","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","groupName","$labels","findRadioLabels","$formErrors","removeRadioErrorClasses","_this4","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","dependentElements","acc","noError","pattern","inputText","valid","patterns","RegExp","$group","required","_this5","clear","v","$form","removeErrorClasses","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","Accordion","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","idx","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","down","$tabContent","toggle","next","$a","multiExpand","previous","prev","hasClass","up","firstTime","$currentActive","slideDown","slideSpeed","$aunts","allowAllClosed","slideUp","stop","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","parents","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","add","$menus","Drilldown","TAB","SHIFT_TAB","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_registerEvents","_keyboardEvents","$link","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","backButtonPosition","append","backButton","prepend","_back","$wrapper","wrapper","animateHeight","_getMaxDims","max-width","min-height","_show","closeOnClick","$body","contains","_hideAll","_resize","scrollTop","_bindHandler","_scrollTop","$scrollTopElement","scrollTopElement","scrollPos","parseInt","scrollTopOffset","animationDuration","animationEasing","_hide","autoHeight","parentSubMenu","blur","result","oneHeight","numOfElems","unwrap","remove","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","parentClass","$parent","positionClass","getPositionClass","counter","usedPositions","data-resize","verticalPosition","match","horizontalPosition","classChanged","direction","newWidth","parentHOffset","$parentDims","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","bodyData","whatinput","timeout","hoverDelay","hoverPane","autoFocus","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","handleClickFn","hasSub","hasClicked","clickOpen","forceFollow","closeOnClickInside","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","_isVertical","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","onResizeMeBound","_onResizeMe","onPostEqualizedBound","_onPostEqualized","tooSmall","imgs","equalizeOn","_checkMQ","_reflow",".zf.equalizer","mutateme.zf.trigger","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","heights","len","offsetHeight","lastElTopOffset","groups","group","elOffsetTop","j","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","background-image","response","html","landscape","portrait","retina","Magellan","$targets","$links","data-scroll","$active","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","easing","deepLinking","location","hash","scrollToLoc","calcPoints","_updateActive","scrollme.zf.trigger","arrival","getAttribute","loc","barOffset","curIdx","winPos","isDown","curVisible","history","pushState","OffCanvas","$lastTrigger","$triggers","contentOverlay","overlay","overlayPosition","$overlay","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","forceTo","scrollTo","contentScroll","_stopScrolling","Orbit","_reset","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","temp","display","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","_updateBullets","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","last","dirIn","dirOut","infiniteWrap","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","input","animationIn","animationOut","_update","_updateMqHandler","toggleMenu","hideFor","iPhoneSniff","androidSniff","mobileSniff","Reveal","cached","mq","isMobile","fullScreen","_makeOverlay","deepLink","outerWidth","outerHeight","margin","_updatePosition","_handleState","addRevealOpenClasses","originalScrollPos","visibility","multipleOpened","afterAnimation","focusableElements","showDelay","_extraHandlers","closeOnEsc","finishUp","hideDelay","resetOnClose","replaceState","title","href","btmOffsetPct","percent","frac","num","absPosition","$handle","clickPos","baseLog","base","log","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","vertical","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","setHandles","_setHandlePos","pctOfBar","positionValueFunction","_logTransform","_powTransform","toFixed","nonLinearBase","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","_pctOfBar","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","initialStart","moveTime","changedDelay","initVal","initialEnd","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","eventOffset","barDim","windowScroll","scrollLeft","elemOffset","barXY","eventFromBar","offsetPct","_value","firstHndlPos","secndHndlPos","prev_val","next_val","div","_eventsForHandle","curHandle","_handleEvent","clickSelect","draggable","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","wasWrapped","$container","container","wrapInner","stickyClass","scrollCount","checkEvery","isStuck","containerHeight","elemHeight","_parsePoints","_setSizes","scroll","_calc","_removeSticky","topPoint","reverse","topAnchor","btm","btmAnchor","pts","breaks","place","canStick","_pauseListeners","checkSizes","bottomPoint","_setSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","topOrBottom","stickyOn","newElemWidth","comp","pdngl","pdngr","newContainerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","linkActiveClass","load","deepLinkSmudgeDelay","selectTab","deepLinkSmudge","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_setHeightMqHandler","_handleTabChange","wrapOnKeys","activeCollapse","_collapseTab","$oldTab","$tabLink","$targetContent","_openTab","updateHistory","panelActiveClass","$target_anchor","idStr","panelClass","panel","Toggler","toggleClass","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","allowHtml","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeIn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText","MotionUI","click","onresize","waitForImages","lastScrollTop","st","resize","pathname","hostname","has","contents","rowWrap","firstChild","nextUntil","wrapAll","imageCaption","controller","ScrollMagic","Controller","currentStatement","tween_statement","TweenMax","fromTo","transform","Scene","triggerElement","triggerHook","setTween","addTo","currentHint","tween_hint","currentDrawicon","tween_drawicon","currentTalkHead","tween_talk","currentImg","setClassToggle","currentParallax","tween_parallax","ease","Linear","easeNone","tween_header","TimelineMax","opacity","header","tween_heart","staggerFromTo","Back","easeOut","scene","tween_services","tween_location","tween_bio","tween_instagram","tween_pull"],"mappings":"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","file":"app.min.js","sourcesContent":["'use strict';\n\nwindow.whatInput = function () {\n\n  'use strict';\n\n  /*\n    ---------------\n    variables\n    ---------------\n  */\n\n  // array of actively pressed keys\n\n  var activeKeys = [];\n\n  // cache document.body\n  var body;\n\n  // boolean: true if touch buffer timer is running\n  var buffer = false;\n\n  // the last used input type\n  var currentInput = null;\n\n  // form input types\n  var formInputs = ['button', 'input', 'select', 'textarea'];\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  var mouseWheel = detectWheel();\n\n  // list of modifier keys commonly used with the mouse and\n  // can be safely ignored to prevent false keyboard detection\n  var ignoreMap = [16, // shift\n  17, // control\n  18, // alt\n  91, // Windows key / left Apple cmd\n  93 // Windows menu / right Apple cmd\n  ];\n\n  // mapping of events to input types\n  var inputMap = {\n    'keydown': 'keyboard',\n    'keyup': 'keyboard',\n    'mousedown': 'mouse',\n    'mousemove': 'mouse',\n    'MSPointerDown': 'pointer',\n    'MSPointerMove': 'pointer',\n    'pointerdown': 'pointer',\n    'pointermove': 'pointer',\n    'touchstart': 'touch'\n  };\n\n  // add correct mouse wheel event mapping to `inputMap`\n  inputMap[detectWheel()] = 'mouse';\n\n  // array of all used input types\n  var inputTypes = [];\n\n  // mapping of key codes to a common name\n  var keyMap = {\n    9: 'tab',\n    13: 'enter',\n    16: 'shift',\n    27: 'esc',\n    32: 'space',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down'\n  };\n\n  // map of IE 10 pointer events\n  var pointerMap = {\n    2: 'touch',\n    3: 'touch', // treat pen like touch\n    4: 'mouse'\n  };\n\n  // touch buffer timer\n  var timer;\n\n  /*\n    ---------------\n    functions\n    ---------------\n  */\n\n  // allows events that are also triggered to be filtered out for `touchstart`\n  function eventBuffer(event) {\n    clearTimer();\n    setInput(event);\n\n    buffer = true;\n    timer = window.setTimeout(function () {\n      buffer = false;\n    }, 650);\n  }\n\n  function bufferedEvent(event) {\n    if (!buffer) setInput(event);\n  }\n\n  function unBufferedEvent(event) {\n    clearTimer();\n    setInput(event);\n  }\n\n  function clearTimer() {\n    window.clearTimeout(timer);\n  }\n\n  function setInput(event) {\n    var eventKey = key(event);\n    var value = inputMap[event.type];\n    if (value === 'pointer') value = pointerType(event);\n\n    // don't do anything if the value matches the input type already set\n    if (currentInput !== value) {\n      var activeElement = document.activeElement.nodeName.toLowerCase();\n\n      if (\n      // only if the user flag to allow input switching\n      // while interacting with form fields isn't set\n      !body.hasAttribute('data-whatinput-formswitching') &&\n\n      // support for legacy keyword\n      !body.hasAttribute('data-whatinput-formtyping') &&\n\n      // only if currentInput has a value\n      currentInput && formInputs.indexOf(activeElement) > -1 ||\n      // ignore modifier keys\n      ignoreMap.indexOf(eventKey) > -1) {\n        // ignore keyboard typing and do nothing\n      } else {\n        switchInput(value);\n      }\n    }\n\n    if (value === 'keyboard') logKeys(eventKey);\n  }\n\n  function switchInput(string) {\n    currentInput = string;\n    body.setAttribute('data-whatinput', currentInput);\n\n    if (inputTypes.indexOf(currentInput) === -1) inputTypes.push(currentInput);\n  }\n\n  function key(event) {\n    return event.keyCode ? event.keyCode : event.which;\n  }\n\n  function target(event) {\n    return event.target || event.srcElement;\n  }\n\n  function pointerType(event) {\n    if (typeof event.pointerType === 'number') {\n      return pointerMap[event.pointerType];\n    } else {\n      return event.pointerType === 'pen' ? 'touch' : event.pointerType; // treat pen like touch\n    }\n  }\n\n  // keyboard logging\n  function logKeys(eventKey) {\n    if (activeKeys.indexOf(keyMap[eventKey]) === -1 && keyMap[eventKey]) activeKeys.push(keyMap[eventKey]);\n  }\n\n  function unLogKeys(event) {\n    var eventKey = key(event);\n    var arrayPos = activeKeys.indexOf(keyMap[eventKey]);\n\n    if (arrayPos !== -1) activeKeys.splice(arrayPos, 1);\n  }\n\n  function bindEvents() {\n    body = document.body;\n\n    // pointer events (mouse, pen, touch)\n    if (window.PointerEvent) {\n      body.addEventListener('pointerdown', bufferedEvent);\n      body.addEventListener('pointermove', bufferedEvent);\n    } else if (window.MSPointerEvent) {\n      body.addEventListener('MSPointerDown', bufferedEvent);\n      body.addEventListener('MSPointerMove', bufferedEvent);\n    } else {\n\n      // mouse events\n      body.addEventListener('mousedown', bufferedEvent);\n      body.addEventListener('mousemove', bufferedEvent);\n\n      // touch events\n      if ('ontouchstart' in window) {\n        body.addEventListener('touchstart', eventBuffer);\n      }\n    }\n\n    // mouse wheel\n    body.addEventListener(mouseWheel, bufferedEvent);\n\n    // keyboard events\n    body.addEventListener('keydown', eventBuffer);\n    body.addEventListener('keyup', eventBuffer);\n    document.addEventListener('keyup', unLogKeys);\n  }\n\n  /*\n    ---------------\n    utilities\n    ---------------\n  */\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  function detectWheel() {\n    return mouseWheel = 'onwheel' in document.createElement('div') ? 'wheel' : // Modern browsers support \"wheel\"\n\n    document.onmousewheel !== undefined ? 'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n    'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n  }\n\n  /*\n    ---------------\n    init\n     don't start script unless browser cuts the mustard,\n    also passes if polyfills are used\n    ---------------\n  */\n\n  if ('addEventListener' in window && Array.prototype.indexOf) {\n\n    // if the dom is already ready already (script was placed at bottom of <body>)\n    if (document.body) {\n      bindEvents();\n\n      // otherwise wait for the dom to load (script was placed in the <head>)\n    } else {\n      document.addEventListener('DOMContentLoaded', bindEvents);\n    }\n  }\n\n  /*\n    ---------------\n    api\n    ---------------\n  */\n\n  return {\n\n    // returns string: the current input type\n    ask: function ask() {\n      return currentInput;\n    },\n\n    // returns array: currently pressed keys\n    keys: function keys() {\n      return activeKeys;\n    },\n\n    // returns array: all the detected input types\n    types: function types() {\n      return inputTypes;\n    },\n\n    // accepts string: manually set the input type\n    set: switchInput\n  };\n}();\n;'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.3-rc1';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function rtl() {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function plugin(_plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(_plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = _plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function registerPlugin(plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function unregisterPlugin(plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function reInit(plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins === 'undefined' ? 'undefined' : _typeof(plugins),\n              _this = this,\n              fns = {\n            'object': function object(plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function string() {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function undefined() {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function GetYoDigits(length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function reflow(elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function transitionend($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function throttle(func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function foundation(method) {\n    var type = typeof method === 'undefined' ? 'undefined' : _typeof(method),\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function now() {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function fNOP() {},\n          fBound = function fBound() {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if ('true' === str) return true;else if ('false' === str) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n;'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      case 'left bottom':\n        return {\n          left: $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'right bottom':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n;/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\n     * Parses the (keyboard) event and returns a String that represents its key\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n     * @param {Event} event - the event generated by the event handler\n     * @return String key - String that represents the key pressed\n     */\n    parseKey: function parseKey(event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n\n      // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\n      key = key.replace(/\\W+/, '');\n\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n\n      // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\n      key = key.replace(/_$/, '');\n\n      return key;\n    },\n\n\n    /**\n     * Handles the given (keyboard) event\n     * @param {Event} event - the event generated by the event handler\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n     * @param {Objects} functions - collection of functions that are to be executed\n     */\n    handleKey: function handleKey(event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n        // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n      }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        var returnValue = fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled(returnValue);\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled();\n        }\n      }\n    },\n\n\n    /**\n     * Finds all focusable elements within the given `$element`\n     * @param {jQuery} $element - jQuery object to search within\n     * @return {jQuery} $focusable - all focusable elements within `$element`\n     */\n    findFocusable: function findFocusable($element) {\n      if (!$element) {\n        return false;\n      }\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\n     * Returns the component name name\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\n     * @return String componentName\n     */\n\n    register: function register(componentName, cmds) {\n      commands[componentName] = cmds;\n    },\n\n\n    /**\n     * Traps the focus in the given element.\n     * @param  {jQuery} $element  jQuery object to trap the foucs into.\n     */\n    trapFocus: function trapFocus($element) {\n      var $focusable = Foundation.Keyboard.findFocusable($element),\n          $firstFocusable = $focusable.eq(0),\n          $lastFocusable = $focusable.eq(-1);\n\n      $element.on('keydown.zf.trapfocus', function (event) {\n        if (event.target === $lastFocusable[0] && Foundation.Keyboard.parseKey(event) === 'TAB') {\n          event.preventDefault();\n          $firstFocusable.focus();\n        } else if (event.target === $firstFocusable[0] && Foundation.Keyboard.parseKey(event) === 'SHIFT_TAB') {\n          event.preventDefault();\n          $lastFocusable.focus();\n        }\n      });\n    },\n\n    /**\n     * Releases the trapped focus from the given element.\n     * @param  {jQuery} $element  jQuery object to release the focus for.\n     */\n    releaseFocus: function releaseFocus($element) {\n      $element.off('keydown.zf.trapfocus');\n    }\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n;'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function _init() {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function atLeast(size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Checks if the screen matches to a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check, either 'small only' or 'small'. Omitting 'only' falls back to using atLeast() method.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it does not.\n     */\n    is: function is(size) {\n      size = size.trim().split(' ');\n      if (size.length > 1 && size[1] === 'only') {\n        if (size[0] === this._getCurrentSize()) return true;\n      } else {\n        return this.atLeast(size[0]);\n      }\n      return false;\n    },\n\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function get(size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function _getCurrentSize() {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if ((typeof matched === 'undefined' ? 'undefined' : _typeof(matched)) === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function _watcher() {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize;\n\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function matchMedium(media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n;'use strict';\n\n!function ($) {\n\n  /**\n   * Motion module.\n   * @module foundation.motion\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function animateIn(element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function animateOut(element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    if (duration === 0) {\n      fn.apply(elem);\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      return;\n    }\n\n    function move(ts) {\n      if (!start) start = ts;\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\n   * Animates an element in or out using a CSS transition class.\n   * @function\n   * @private\n   * @param {Boolean} isIn - Defines if the animation is in or out.\n   * @param {Object} element - jQuery or HTML object to animate.\n   * @param {String} animation - CSS class to use.\n   * @param {Function} cb - Callback to run when animation is finished.\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n;'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function Feather(menu) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'zf';\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-label': $item.children('a:first').text()\n          });\n          // Note:  Drilldowns behave differently in how they hide, and so need\n          // additional attributes.  We should look if this possibly over-generalized\n          // utility (Nest) is appropriate when we rework menus in 6.4\n          if (type === 'drilldown') {\n            $item.attr({ 'aria-expanded': false });\n          }\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'role': 'menu'\n          });\n          if (type === 'drilldown') {\n            $sub.attr({ 'aria-hidden': true });\n          }\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function Burn(menu, type) {\n      var //items = menu.find('li'),\n      subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('>li, .menu, .menu > li').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n;'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      // Check if image is loaded\n      if (this.complete || this.readyState === 4 || this.readyState === 'complete') {\n        singleImageLoaded();\n      }\n      // Force load the image\n      else {\n          $(this).one('load', function () {\n            singleImageLoaded();\n          });\n        }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n;'use strict';\n\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t$.spotSwipe = {\n\t\tversion: '1.0.0',\n\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\tpreventDefault: false,\n\t\tmoveThreshold: 75,\n\t\ttimeThreshold: 200\n\t};\n\n\tvar startPosX,\n\t    startPosY,\n\t    startTime,\n\t    elapsedTime,\n\t    isMoving = false;\n\n\tfunction onTouchEnd() {\n\t\t//  alert(this);\n\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\tisMoving = false;\n\t}\n\n\tfunction onTouchMove(e) {\n\t\tif ($.spotSwipe.preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (isMoving) {\n\t\t\tvar x = e.touches[0].pageX;\n\t\t\tvar y = e.touches[0].pageY;\n\t\t\tvar dx = startPosX - x;\n\t\t\tvar dy = startPosY - y;\n\t\t\tvar dir;\n\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t}\n\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t// }\n\t\t\tif (dir) {\n\t\t\t\te.preventDefault();\n\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onTouchStart(e) {\n\t\tif (e.touches.length == 1) {\n\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\tisMoving = true;\n\t\t\tstartTime = new Date().getTime();\n\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t}\n\t}\n\n\tfunction init() {\n\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t}\n\n\tfunction teardown() {\n\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t}\n\n\t$.event.special.swipe = { setup: init };\n\n\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t$.event.special['swipe' + this] = { setup: function setup() {\n\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t} };\n\t});\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function ($) {\n\t$.fn.addTouch = function () {\n\t\tthis.each(function (i, el) {\n\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\thandleTouch(event);\n\t\t\t});\n\t\t});\n\n\t\tvar handleTouch = function handleTouch(event) {\n\t\t\tvar touches = event.changedTouches,\n\t\t\t    first = touches[0],\n\t\t\t    eventTypes = {\n\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\ttouchend: 'mouseup'\n\t\t\t},\n\t\t\t    type = eventTypes[event.type],\n\t\t\t    simulatedEvent;\n\n\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\n\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t}\n\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t};\n\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n;'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function triggers(el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    var id = $(this).data('toggle');\n    if (id) {\n      triggers($(this), 'toggle');\n    } else {\n      $(this).trigger('toggle.zf.trigger');\n    }\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).on('load', function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    mutateListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if ((typeof pluginName === 'undefined' ? 'undefined' : _typeof(pluginName)) === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function mutateListener(debounce) {\n    var $nodes = $('[data-mutate]');\n    if ($nodes.length && MutationObserver) {\n      //trigger all listening elements and signal a mutate event\n      //no IE 9 or 10\n      $nodes.each(function () {\n        $(this).triggerHandler('mutateme.zf.trigger');\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function listeningElementsMutation(mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n\n      //trigger the event handler for the element depending on type\n      switch (mutationRecordsList[0].type) {\n\n        case \"attributes\":\n          if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n            $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          }\n          if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n            $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          }\n          if (mutationRecordsList[0].attributeName === \"style\") {\n            $target.closest(\"[data-mutate]\").attr(\"data-events\", \"mutate\");\n            $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          }\n          break;\n\n        case \"childList\":\n          $target.closest(\"[data-mutate]\").attr(\"data-events\", \"mutate\");\n          $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Abide module.\n   * @module foundation.abide\n   */\n\n  var Abide = function () {\n    /**\n     * Creates a new instance of Abide.\n     * @class\n     * @fires Abide#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Abide(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n     * @private\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select');\n\n        this._events();\n      }\n\n      /**\n       * Initializes events for Abide.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.validateOnBlur) {\n          this.$inputs.off('blur.zf.abide').on('blur.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\n       * Calls necessary functions to update Abide upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\n       * Checks whether or not a form element has the required attribute and if it's checked or not\n       * @param {Object} element - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\n       * Based on $el, get the first element with selector in this order:\n       * 1. The element's direct sibling('s).\n       * 3. The element's parent's children.\n       *\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n       *\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n       * @returns {Object} jQuery object with the selector.\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        return $error;\n      }\n\n      /**\n       * Get the first element in this order:\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\n       * Get the set of labels associated with a set of radio els in this order\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findRadioLabels',\n      value: function findRadioLabels($els) {\n        var _this3 = this;\n\n        var labels = $els.map(function (i, el) {\n          var id = el.id;\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\n\n          if (!$label.length) {\n            $label = $(el).closest('label');\n          }\n          return $label[0];\n        });\n\n        return $(labels);\n      }\n\n      /**\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n       * @param {Object} $el - jQuery object to add the class to\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\n       * Remove CSS error classes etc from an entire radio button group\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       *\n       */\n\n    }, {\n      key: 'removeRadioErrorClasses',\n      value: function removeRadioErrorClasses(groupName) {\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var $labels = this.findRadioLabels($els);\n        var $formErrors = this.findFormError($els);\n\n        if ($labels.length) {\n          $labels.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formErrors.length) {\n          $formErrors.removeClass(this.options.formErrorClass);\n        }\n\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n       * @param {Object} $el - jQuery object to remove the class from\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        // radios need to clear all of the els\n        if ($el[0].type == 'radio') {\n          return this.removeRadioErrorClasses($el.attr('name'));\n        }\n\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n       * @fires Abide#invalid\n       * @fires Abide#valid\n       * @param {Object} element - jQuery object to validate, should be an HTML input\n       * @returns {Boolean} goodToGo - If the input is valid or not.\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var _this4 = this;\n\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        // don't validate ignored inputs or hidden inputs\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\n          return true;\n        }\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        if (goodToGo) {\n          // Re-validate inputs that depend on this one with equalto\n          var dependentElements = this.$element.find('[data-equalto=\"' + $el.attr('id') + '\"]');\n          if (dependentElements.length) {\n            (function () {\n              var _this = _this4;\n              dependentElements.each(function () {\n                if ($(this).val()) {\n                  _this.validateInput($(this));\n                }\n              });\n            })();\n          }\n        }\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n         * Trigger includes the DOM element of the input.\n         * @event Abide#valid\n         * @event Abide#invalid\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\n       * @returns {Boolean} noError - true if no errors were detected...\n       * @fires Abide#formvalid\n       * @fires Abide#forminvalid\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n         * Trigger includes the element of the form.\n         * @event Abide#formvalid\n         * @event Abide#forminvalid\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n        var valid = false;\n\n        if (inputText.length) {\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n          if (this.options.patterns.hasOwnProperty(pattern)) {\n            valid = this.options.patterns[pattern].test(inputText);\n          }\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n          else if (pattern !== $el.attr('type')) {\n              valid = new RegExp(pattern).test(inputText);\n            } else {\n              valid = true;\n            }\n        }\n        // An empty field is valid if it's not required\n        else if (!$el.prop('required')) {\n            valid = true;\n          }\n\n        return valid;\n      }\n\n      /**\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        // If at least one radio in the group has the `required` attribute, the group is considered required\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var valid = false,\n            required = false;\n\n        // For the group to be required, at least one radio needs to be required\n        $group.each(function (i, e) {\n          if ($(e).attr('required')) {\n            required = true;\n          }\n        });\n        if (!required) valid = true;\n\n        if (!valid) {\n          // For the group to be valid, at least one radio needs to be checked\n          $group.each(function (i, e) {\n            if ($(e).prop('checked')) {\n              valid = true;\n            }\n          });\n        };\n\n        return valid;\n      }\n\n      /**\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n       * @param {Object} $el - jQuery input element.\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n       * @param {Boolean} required - self explanatory?\n       * @returns {Boolean} - true if validations passed.\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this5 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this5.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\n       * Resets form inputs and styles\n       * @fires Abide#formreset\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        /**\n         * Fires when the form has been reset.\n         * @event Abide#formreset\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\n       * Destroys an instance of Abide.\n       * Removes error styles and classes from elements, without resetting their values.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Abide.defaults = {\n    /**\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\n     * Remove or change this value for manual validation.\n     * @option\n     * @example 'fieldChange'\n     */\n    validateOn: 'fieldChange',\n\n    /**\n     * Class to be applied to input labels on failed validation.\n     * @option\n     * @example 'is-invalid-label'\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\n     * Class to be applied to inputs on failed validation.\n     * @option\n     * @example 'is-invalid-input'\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\n     * Class selector to use to target Form Errors for show/hide.\n     * @option\n     * @example '.form-error'\n     */\n    formErrorSelector: '.form-error',\n\n    /**\n     * Class added to Form Errors on failed validation.\n     * @option\n     * @example 'is-visible'\n     */\n    formErrorClass: 'is-visible',\n\n    /**\n     * Set to true to validate text inputs on any value change.\n     * @option\n     * @example false\n     */\n    liveValidate: false,\n\n    /**\n     * Set to true to validate inputs on blur.\n     * @option\n     * @example false\n     */\n    validateOnBlur: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\n     * Optional validation functions to be used. `equalTo` being the only default included function.\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n     * el : The jQuery element to validate.\n     * required : Boolean value of the required attribute be present or not.\n     * parent : The direct parent of the input.\n     * @option\n     */\n    validators: {\n      equalTo: function equalTo(el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('[data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the accordion.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              e.preventDefault();\n              _this.toggle($tabContent);\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function toggle() {\n                  _this.toggle($tabContent);\n                },\n                next: function next() {\n                  var $a = $elem.next().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                previous: function previous() {\n                  var $a = $elem.prev().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                handled: function handled() {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n      }\n\n      /**\n       * Toggles the selected content pane's open/close state.\n       * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          this.up($target);\n        } else {\n          this.down($target);\n        }\n      }\n\n      /**\n       * Opens the accordion tab defined by `$target`.\n       * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\n       * @fires Accordion#down\n       * @function\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this2 = this;\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive.not($target));\n          }\n        }\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done opening.\n           * @event Accordion#down\n           */\n          _this2.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\n       * Closes the tab defined by `$target`.\n       * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\n       * @fires Accordion#up\n       * @function\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n\n        if (!this.options.allowAllClosed && !$aunts.hasClass('is-active') || !$target.parent().hasClass('is-active')) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done collapsing up.\n           * @event Accordion#up\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\n       * Destroys an instance of an accordion.\n       * @fires Accordion#destroyed\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * AccordionMenu module.\n   * @module foundation.accordionMenu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var AccordionMenu = function () {\n    /**\n     * Creates a new instance of an accordion menu.\n     * @class\n     * @fires AccordionMenu#init\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function AccordionMenu(element, options) {\n      _classCallCheck(this, AccordionMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'accordion');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'AccordionMenu');\n      Foundation.Keyboard.register('AccordionMenu', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_RIGHT': 'open',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'close',\n        'ESCAPE': 'closeAll'\n      });\n    }\n\n    /**\n     * Initializes the accordion menu by hiding all nested menus.\n     * @private\n     */\n\n\n    _createClass(AccordionMenu, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\n        this.$element.attr({\n          'role': 'menu',\n          'aria-multiselectable': this.options.multiOpen\n        });\n\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n        this.$menuLinks.each(function () {\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n              $elem = $(this),\n              $sub = $elem.children('[data-submenu]'),\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n              isActive = $sub.hasClass('is-active');\n          $elem.attr({\n            'aria-controls': subId,\n            'aria-expanded': isActive,\n            'role': 'menuitem',\n            'id': linkId\n          });\n          $sub.attr({\n            'aria-labelledby': linkId,\n            'aria-hidden': !isActive,\n            'role': 'menu',\n            'id': subId\n          });\n        });\n        var initPanes = this.$element.find('.is-active');\n        if (initPanes.length) {\n          var _this = this;\n          initPanes.each(function () {\n            _this.down($(this));\n          });\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the menu.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.find('li').each(function () {\n          var $submenu = $(this).children('[data-submenu]');\n\n          if ($submenu.length) {\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\n              e.preventDefault();\n\n              _this.toggle($submenu);\n            });\n          }\n        }).on('keydown.zf.accordionmenu', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement,\n              $target = $element.children('[data-submenu]');\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1)).find('a').first();\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1)).find('a').first();\n\n              if ($(this).children('[data-submenu]:visible').length) {\n                // has open sub menu\n                $nextElement = $element.find('li:first-child').find('a').first();\n              }\n              if ($(this).is(':first-child')) {\n                // is first element of sub menu\n                $prevElement = $element.parents('li').first().find('a').first();\n              } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) {\n                // if previous element has open sub menu\n                $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\n              }\n              if ($(this).is(':last-child')) {\n                // is last element of sub menu\n                $nextElement = $element.parents('li').first().next('li').find('a').first();\n              }\n\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n            open: function open() {\n              if ($target.is(':hidden')) {\n                _this.down($target);\n                $target.find('li').first().find('a').first().focus();\n              }\n            },\n            close: function close() {\n              if ($target.length && !$target.is(':hidden')) {\n                // close active sub of this item\n                _this.up($target);\n              } else if ($element.parent('[data-submenu]').length) {\n                // close currently open sub\n                _this.up($element.parent('[data-submenu]'));\n                $element.parents('li').first().find('a').first().focus();\n              }\n            },\n            up: function up() {\n              $prevElement.focus();\n              return true;\n            },\n            down: function down() {\n              $nextElement.focus();\n              return true;\n            },\n            toggle: function toggle() {\n              if ($element.children('[data-submenu]').length) {\n                _this.toggle($element.children('[data-submenu]'));\n              }\n            },\n            closeAll: function closeAll() {\n              _this.hideAll();\n            },\n            handled: function handled(preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); //.attr('tabindex', 0);\n      }\n\n      /**\n       * Closes all panes of the menu.\n       * @function\n       */\n\n    }, {\n      key: 'hideAll',\n      value: function hideAll() {\n        this.up(this.$element.find('[data-submenu]'));\n      }\n\n      /**\n       * Opens all panes of the menu.\n       * @function\n       */\n\n    }, {\n      key: 'showAll',\n      value: function showAll() {\n        this.down(this.$element.find('[data-submenu]'));\n      }\n\n      /**\n       * Toggles the open/close state of a submenu.\n       * @function\n       * @param {jQuery} $target - the submenu to toggle\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if (!$target.is(':animated')) {\n          if (!$target.is(':hidden')) {\n            this.up($target);\n          } else {\n            this.down($target);\n          }\n        }\n      }\n\n      /**\n       * Opens the sub-menu defined by `$target`.\n       * @param {jQuery} $target - Sub-menu to open.\n       * @fires AccordionMenu#down\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target) {\n        var _this = this;\n\n        if (!this.options.multiOpen) {\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n        }\n\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\n\n        //Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done opening.\n           * @event AccordionMenu#down\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n        //});\n      }\n\n      /**\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n       * @param {jQuery} $target - Sub-menu to close.\n       * @fires AccordionMenu#up\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var _this = this;\n        //Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done collapsing up.\n           * @event AccordionMenu#up\n           */\n          _this.$element.trigger('up.zf.accordionMenu', [$target]);\n        });\n        //});\n\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n      }\n\n      /**\n       * Destroys an instance of accordion menu.\n       * @fires AccordionMenu#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n        this.$element.find('a').off('click.zf.accordionMenu');\n\n        Foundation.Nest.Burn(this.$element, 'accordion');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return AccordionMenu;\n  }();\n\n  AccordionMenu.defaults = {\n    /**\n     * Amount of time to animate the opening of a submenu in ms.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the menu to have multiple open panes.\n     * @option\n     * @example true\n     */\n    multiOpen: true\n  };\n\n  // Window exports\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Drilldown module.\n   * @module foundation.drilldown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var Drilldown = function () {\n    /**\n     * Creates a new instance of a drilldown menu.\n     * @class\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Drilldown(element, options) {\n      _classCallCheck(this, Drilldown);\n\n      this.$element = element;\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'drilldown');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Drilldown');\n      Foundation.Keyboard.register('Drilldown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\n     * Initializes the drilldown by creating jQuery collections of elements\n     * @private\n     */\n\n\n    _createClass(Drilldown, [{\n      key: '_init',\n      value: function _init() {\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\n        this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\n        this.$element.attr('data-mutate', this.$element.attr('data-drilldown') || Foundation.GetYoDigits(6, 'drilldown'));\n\n        this._prepareMenu();\n        this._registerEvents();\n\n        this._keyboardEvents();\n      }\n\n      /**\n       * prepares drilldown menu by setting attributes to links and elements\n       * sets a min height to prevent content jumping\n       * wraps the element if not already wrapped\n       * @private\n       * @function\n       */\n\n    }, {\n      key: '_prepareMenu',\n      value: function _prepareMenu() {\n        var _this = this;\n        // if(!this.options.holdOpen){\n        //   this._menuLinkEvents();\n        // }\n        this.$submenuAnchors.each(function () {\n          var $link = $(this);\n          var $sub = $link.parent();\n          if (_this.options.parentLink) {\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n          }\n          $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\n          $link.children('[data-submenu]').attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n          _this._events($link);\n        });\n        this.$submenus.each(function () {\n          var $menu = $(this),\n              $back = $menu.find('.js-drilldown-back');\n          if (!$back.length) {\n            switch (_this.options.backButtonPosition) {\n              case \"bottom\":\n                $menu.append(_this.options.backButton);\n                break;\n              case \"top\":\n                $menu.prepend(_this.options.backButton);\n                break;\n              default:\n                console.error(\"Unsupported backButtonPosition value '\" + _this.options.backButtonPosition + \"'\");\n            }\n          }\n          _this._back($menu);\n        });\n        if (!this.$element.parent().hasClass('is-drilldown')) {\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\n          if (this.options.animateHeight) this.$wrapper.addClass('animate-height');\n          this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\n        }\n      }\n    }, {\n      key: '_resize',\n      value: function _resize() {\n        this.$wrapper.css({ 'max-width': 'none', 'min-height': 'none' });\n        // _getMaxDims has side effects (boo) but calling it should update all other necessary heights & widths\n        this.$wrapper.css(this._getMaxDims());\n      }\n\n      /**\n       * Adds event handlers to elements in the menu.\n       * @function\n       * @private\n       * @param {jQuery} $elem - the current menu item to add handlers to.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($elem) {\n        var _this = this;\n\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n\n          // if(e.target !== e.currentTarget.firstElementChild){\n          //   return false;\n          // }\n          _this._show($elem.parent('li'));\n\n          if (_this.options.closeOnClick) {\n            var $body = $('body');\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              e.preventDefault();\n              _this._hideAll();\n              $body.off('.zf.drilldown');\n            });\n          }\n        });\n        this.$element.on('mutateme.zf.trigger', this._resize.bind(this));\n      }\n\n      /**\n       * Adds event handlers to the menu element.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_registerEvents',\n      value: function _registerEvents() {\n        if (this.options.scrollTop) {\n          this._bindHandler = this._scrollTop.bind(this);\n          this.$element.on('open.zf.drilldown hide.zf.drilldown closed.zf.drilldown', this._bindHandler);\n        }\n      }\n\n      /**\n       * Scroll to Top of Element or data-scroll-top-element\n       * @function\n       * @fires Drilldown#scrollme\n       */\n\n    }, {\n      key: '_scrollTop',\n      value: function _scrollTop() {\n        var _this = this;\n        var $scrollTopElement = _this.options.scrollTopElement != '' ? $(_this.options.scrollTopElement) : _this.$element,\n            scrollPos = parseInt($scrollTopElement.offset().top + _this.options.scrollTopOffset);\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, _this.options.animationDuration, _this.options.animationEasing, function () {\n          /**\n            * Fires after the menu has scrolled\n            * @event Drilldown#scrollme\n            */\n          if (this === $('html')[0]) _this.$element.trigger('scrollme.zf.drilldown');\n        });\n      }\n\n      /**\n       * Adds keydown event listener to `li`'s in the menu.\n       * @private\n       */\n\n    }, {\n      key: '_keyboardEvents',\n      value: function _keyboardEvents() {\n        var _this = this;\n\n        this.$menuItems.add(this.$element.find('.js-drilldown-back > a')).on('keydown.zf.drilldown', function (e) {\n\n          var $element = $(this),\n              $elements = $element.parent('li').parent('ul').children('li').children('a'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\n            next: function next() {\n              if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            previous: function previous() {\n              _this._hide($element.parent('li').parent('ul'));\n              $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                setTimeout(function () {\n                  $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                }, 1);\n              });\n              return true;\n            },\n            up: function up() {\n              $prevElement.focus();\n              return true;\n            },\n            down: function down() {\n              $nextElement.focus();\n              return true;\n            },\n            close: function close() {\n              _this._back();\n              //_this.$menuItems.first().focus(); // focus to first element\n            },\n            open: function open() {\n              if (!$element.is(_this.$menuItems)) {\n                // not menu item means back button\n                _this._hide($element.parent('li').parent('ul'));\n                $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                  setTimeout(function () {\n                    $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                  }, 1);\n                });\n                return true;\n              } else if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            handled: function handled(preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); // end keyboardAccess\n      }\n\n      /**\n       * Closes all open elements, and returns to root menu.\n       * @function\n       * @fires Drilldown#closed\n       */\n\n    }, {\n      key: '_hideAll',\n      value: function _hideAll() {\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.parent().closest('ul').data('calcHeight') });\n        $elem.one(Foundation.transitionend($elem), function (e) {\n          $elem.removeClass('is-active is-closing');\n        });\n        /**\n         * Fires when the menu is fully closed.\n         * @event Drilldown#closed\n         */\n        this.$element.trigger('closed.zf.drilldown');\n      }\n\n      /**\n       * Adds event listener for each `back` button, and closes open menus.\n       * @function\n       * @fires Drilldown#back\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\n       */\n\n    }, {\n      key: '_back',\n      value: function _back($elem) {\n        var _this = this;\n        $elem.off('click.zf.drilldown');\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\n          e.stopImmediatePropagation();\n          // console.log('mouseup on back');\n          _this._hide($elem);\n\n          // If there is a parent submenu, call show\n          var parentSubMenu = $elem.parent('li').parent('ul').parent('li');\n          if (parentSubMenu.length) {\n            _this._show(parentSubMenu);\n          }\n        });\n      }\n\n      /**\n       * Adds event listener to menu items w/o submenus to close open menus on click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_menuLinkEvents',\n      value: function _menuLinkEvents() {\n        var _this = this;\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          // e.stopImmediatePropagation();\n          setTimeout(function () {\n            _this._hideAll();\n          }, 0);\n        });\n      }\n\n      /**\n       * Opens a submenu.\n       * @function\n       * @fires Drilldown#open\n       * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($elem) {\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.children('[data-submenu]').data('calcHeight') });\n        $elem.attr('aria-expanded', true);\n        $elem.children('[data-submenu]').addClass('is-active').attr('aria-hidden', false);\n        /**\n         * Fires when the submenu has opened.\n         * @event Drilldown#open\n         */\n        this.$element.trigger('open.zf.drilldown', [$elem]);\n      }\n    }, {\n      key: '_hide',\n\n\n      /**\n       * Hides a submenu\n       * @function\n       * @fires Drilldown#hide\n       * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\n       */\n      value: function _hide($elem) {\n        if (this.options.autoHeight) this.$wrapper.css({ height: $elem.parent().closest('ul').data('calcHeight') });\n        var _this = this;\n        $elem.parent('li').attr('aria-expanded', false);\n        $elem.attr('aria-hidden', true).addClass('is-closing');\n        $elem.addClass('is-closing').one(Foundation.transitionend($elem), function () {\n          $elem.removeClass('is-active is-closing');\n          $elem.blur();\n        });\n        /**\n         * Fires when the submenu has closed.\n         * @event Drilldown#hide\n         */\n        $elem.trigger('hide.zf.drilldown', [$elem]);\n      }\n\n      /**\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n       * Prevents content jumping.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_getMaxDims',\n      value: function _getMaxDims() {\n        var max = 0,\n            result = {},\n            oneHeight = this.$menuItems[0].getBoundingClientRect().height,\n            _this = this;\n        this.$submenus.add(this.$element).each(function () {\n          var numOfElems = $(this).children('li').length;\n          max = numOfElems > max ? numOfElems : max;\n          if (_this.options.autoHeight) {\n            $(this).data('calcHeight', numOfElems * oneHeight);\n            if (!$(this).hasClass('is-drilldown-submenu')) result['height'] = numOfElems * oneHeight;\n          }\n        });\n\n        if (!this.options.autoHeight) result['min-height'] = max * oneHeight + 'px';\n\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\n\n        return result;\n      }\n\n      /**\n       * Destroys the Drilldown Menu\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        if (this.options.scrollTop) this.$element.off('.zf.drilldown', this._bindHandler);\n        this._hideAll();\n        this.$element.off('mutateme.zf.trigger');\n        Foundation.Nest.Burn(this.$element, 'drilldown');\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\n        this.$submenuAnchors.each(function () {\n          $(this).off('.zf.drilldown');\n        });\n        this.$element.find('a').each(function () {\n          var $link = $(this);\n          $link.removeAttr('tabindex');\n          if ($link.data('savedHref')) {\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n          } else {\n            return;\n          }\n        });\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Drilldown;\n  }();\n\n  Drilldown.defaults = {\n    /**\n     * Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\n     */\n    backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\n    /**\n     * Position the back button either at the top or bottom of drilldown submenus.\n     * @option\n     * @example bottom\n     */\n    backButtonPosition: 'top',\n    /**\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\n     */\n    wrapper: '<div></div>',\n    /**\n     * Adds the parent link to the submenu.\n     * @option\n     * @example false\n     */\n    parentLink: false,\n    /**\n     * Allow the menu to return to root list on body click.\n     * @option\n     * @example false\n     */\n    closeOnClick: false,\n    /**\n     * Allow the menu to auto adjust height.\n     * @option\n     * @example false\n     */\n    autoHeight: false,\n    /**\n     * Animate the auto adjust height.\n     * @option\n     * @example false\n     */\n    animateHeight: false,\n    /**\n     * Scroll to the top of the menu after opening a submenu or navigating back using the menu back button\n     * @option\n     * @example false\n     */\n    scrollTop: false,\n    /**\n     * String jquery selector (for example 'body') of element to take offset().top from, if empty string the drilldown menu offset().top is taken\n     * @option\n     * @example ''\n     */\n    scrollTopElement: '',\n    /**\n     * ScrollTop offset\n     * @option\n     * @example 100\n     */\n    scrollTopOffset: 0,\n    /**\n     * Scroll animation duration\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Scroll animation easing\n     * @option\n     * @example 'swing'\n     */\n    animationEasing: 'swing'\n    // holdOpen: false\n  };\n\n  // Window exports\n  Foundation.plugin(Drilldown, 'Drilldown');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]').length ? $('[data-toggle=\"' + $id + '\"]') : $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        if (this.options.parentClass) {\n          this.$parent = this.$element.parents('.' + this.options.parentClass);\n        } else {\n          this.$parent = null;\n        }\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n\n        return position;\n      }\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element, this.$parent)) {\n          var newWidth = $eleDims.windowDims.width,\n              parentHOffset = 0;\n          if (this.$parent) {\n            var $parentDims = Foundation.Box.GetDimensions(this.$parent),\n                parentHOffset = $parentDims.offset.left;\n            if ($parentDims.width < newWidth) {\n              newWidth = $parentDims.width;\n            }\n          }\n\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset + parentHOffset, true)).css({\n            'width': newWidth - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, this.$parent, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            var bodyData = $('body').data();\n            if (typeof bodyData.whatinput === 'undefined' || bodyData.whatinput === 'mouse') {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.open();\n                _this.$anchor.data('hover', true);\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            open: function open() {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function close() {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        if (this.options.trapFocus) {\n          Foundation.Keyboard.trapFocus(this.$element);\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n\n        if (this.options.trapFocus) {\n          Foundation.Keyboard.releaseFocus(this.$element);\n        }\n      }\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Class that designates bounding container of Dropdown (Default: window)\n     * @option\n     * @example 'dropdown-parent'\n     */\n    parentClass: null,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * DropdownMenu module.\n   * @module foundation.dropdown-menu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.nest\n   */\n\n  var DropdownMenu = function () {\n    /**\n     * Creates a new instance of DropdownMenu.\n     * @class\n     * @fires DropdownMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function DropdownMenu(element, options) {\n      _classCallCheck(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin, and calls _prepareMenu\n     * @private\n     * @function\n     */\n\n\n    _createClass(DropdownMenu, [{\n      key: '_init',\n      value: function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n    }, {\n      key: '_isVertical',\n      value: function _isVertical() {\n        return this.$tabs.css('display') === 'block';\n      }\n\n      /**\n       * Adds event listeners to elements within the menu\n       * @private\n       * @function\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        // used for onClick and in the keyboard handlers\n        var handleClickFn = function handleClickFn(e) {\n          var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n              hasSub = $elem.hasClass(parClass),\n              hasClicked = $elem.attr('data-is-click') === 'true',\n              $sub = $elem.children('.is-dropdown-submenu');\n\n          if (hasSub) {\n            if (hasClicked) {\n              if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                return;\n              } else {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                _this._hide($elem);\n              }\n            } else {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              _this._show($sub);\n              $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n            }\n          }\n        };\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n        }\n\n        // Handle Leaf element Clicks\n        if (_this.options.closeOnClickInside) {\n          this.$menuItems.on('click.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n            var hasSub = $elem.hasClass(parClass);\n            if (!hasSub) {\n              _this._hide();\n            }\n          });\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime);\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function nextSibling() {\n            if (!$element.is(':last-child')) {\n              $nextElement.children('a:first').focus();\n              e.preventDefault();\n            }\n          },\n              prevSibling = function prevSibling() {\n            $prevElement.children('a:first').focus();\n            e.preventDefault();\n          },\n              openSub = function openSub() {\n            var $sub = $element.children('ul.is-dropdown-submenu');\n            if ($sub.length) {\n              _this._show($sub);\n              $element.find('li > a:first').focus();\n              e.preventDefault();\n            } else {\n              return;\n            }\n          },\n              closeSub = function closeSub() {\n            //if ($element.is(':first-child')) {\n            var close = $element.parent('ul').parent('li');\n            close.children('a:first').focus();\n            _this._hide(close);\n            e.preventDefault();\n            //}\n          };\n          var functions = {\n            open: openSub,\n            close: function close() {\n              _this._hide(_this.$element);\n              _this.$menuItems.find('a:first').focus(); // focus to first element\n              e.preventDefault();\n            },\n            handled: function handled() {\n              e.stopImmediatePropagation();\n            }\n          };\n\n          if (isTab) {\n            if (_this._isVertical()) {\n              // vertical menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              }\n            } else {\n              // horizontal menu\n              if (Foundation.rtl()) {\n                // right aligned\n                $.extend(functions, {\n                  next: prevSibling,\n                  previous: nextSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              } else {\n                // left aligned\n                $.extend(functions, {\n                  next: nextSibling,\n                  previous: prevSibling,\n                  down: openSub,\n                  up: closeSub\n                });\n              }\n            }\n          } else {\n            // not tabs -> one sub\n            if (Foundation.rtl()) {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      /**\n       * Opens a dropdown pane, and checks for collisions first.\n       * @param {jQuery} $sub - ul element that is a submenu to show\n       * @function\n       * @private\n       * @fires DropdownMenu#show\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').parent('li.is-dropdown-submenu-parent').addClass('is-active');\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\n         * Fires when the new dropdown pane is visible.\n         * @event DropdownMenu#show\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      /**\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n       * @function\n       * @param {jQuery} $elem - element with a submenu to hide\n       * @param {Number} idx - index of the $tabs collection to hide\n       * @private\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\n           * Fires when the open menus are closed.\n           * @event DropdownMenu#hide\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      /**\n       * Destroys the plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return DropdownMenu;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allow clicks on leaf anchor links to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClickInside: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Equalizer module.\n   * @module foundation.equalizer\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader if equalizer contains images\n   */\n\n  var Equalizer = function () {\n    /**\n     * Creates a new instance of Equalizer.\n     * @class\n     * @fires Equalizer#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Equalizer(element, options) {\n      _classCallCheck(this, Equalizer);\n\n      this.$element = element;\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Equalizer');\n    }\n\n    /**\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Equalizer, [{\n      key: '_init',\n      value: function _init() {\n        var eqId = this.$element.attr('data-equalizer') || '';\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\n\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\n        this.$element.attr('data-mutate', eqId || Foundation.GetYoDigits(6, 'eq'));\n\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n        this.isOn = false;\n        this._bindHandler = {\n          onResizeMeBound: this._onResizeMe.bind(this),\n          onPostEqualizedBound: this._onPostEqualized.bind(this)\n        };\n\n        var imgs = this.$element.find('img');\n        var tooSmall;\n        if (this.options.equalizeOn) {\n          tooSmall = this._checkMQ();\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n        } else {\n          this._events();\n        }\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\n          if (imgs.length) {\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n          } else {\n            this._reflow();\n          }\n        }\n      }\n\n      /**\n       * Removes event listeners if the breakpoint is too small.\n       * @private\n       */\n\n    }, {\n      key: '_pauseEvents',\n      value: function _pauseEvents() {\n        this.isOn = false;\n        this.$element.off({\n          '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\n          'resizeme.zf.trigger': this._bindHandler.onResizeMeBound,\n          'mutateme.zf.trigger': this._bindHandler.onResizeMeBound\n        });\n      }\n\n      /**\n       * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\n       * @private\n       */\n\n    }, {\n      key: '_onResizeMe',\n      value: function _onResizeMe(e) {\n        this._reflow();\n      }\n\n      /**\n       * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\n       * @private\n       */\n\n    }, {\n      key: '_onPostEqualized',\n      value: function _onPostEqualized(e) {\n        if (e.target !== this.$element[0]) {\n          this._reflow();\n        }\n      }\n\n      /**\n       * Initializes events for Equalizer.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this._pauseEvents();\n        if (this.hasNested) {\n          this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\n        } else {\n          this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\n          this.$element.on('mutateme.zf.trigger', this._bindHandler.onResizeMeBound);\n        }\n        this.isOn = true;\n      }\n\n      /**\n       * Checks the current breakpoint to the minimum required size.\n       * @private\n       */\n\n    }, {\n      key: '_checkMQ',\n      value: function _checkMQ() {\n        var tooSmall = !Foundation.MediaQuery.is(this.options.equalizeOn);\n        if (tooSmall) {\n          if (this.isOn) {\n            this._pauseEvents();\n            this.$watched.css('height', 'auto');\n          }\n        } else {\n          if (!this.isOn) {\n            this._events();\n          }\n        }\n        return tooSmall;\n      }\n\n      /**\n       * A noop version for the plugin\n       * @private\n       */\n\n    }, {\n      key: '_killswitch',\n      value: function _killswitch() {\n        return;\n      }\n\n      /**\n       * Calls necessary functions to update Equalizer upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        if (!this.options.equalizeOnStack) {\n          if (this._isStacked()) {\n            this.$watched.css('height', 'auto');\n            return false;\n          }\n        }\n        if (this.options.equalizeByRow) {\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\n        } else {\n          this.getHeights(this.applyHeight.bind(this));\n        }\n      }\n\n      /**\n       * Manually determines if the first 2 elements are *NOT* stacked.\n       * @private\n       */\n\n    }, {\n      key: '_isStacked',\n      value: function _isStacked() {\n        if (!this.$watched[0] || !this.$watched[1]) {\n          return true;\n        }\n        return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} heights - An array of heights of children within Equalizer container\n       */\n\n    }, {\n      key: 'getHeights',\n      value: function getHeights(cb) {\n        var heights = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          heights.push(this.$watched[i].offsetHeight);\n        }\n        cb(heights);\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       */\n\n    }, {\n      key: 'getHeightsByRow',\n      value: function getHeightsByRow(cb) {\n        var lastElTopOffset = this.$watched.length ? this.$watched.first().offset().top : 0,\n            groups = [],\n            group = 0;\n        //group by Row\n        groups[group] = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          //maybe could use this.$watched[i].offsetTop\n          var elOffsetTop = $(this.$watched[i]).offset().top;\n          if (elOffsetTop != lastElTopOffset) {\n            group++;\n            groups[group] = [];\n            lastElTopOffset = elOffsetTop;\n          }\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\n        }\n\n        for (var j = 0, ln = groups.length; j < ln; j++) {\n          var heights = $(groups[j]).map(function () {\n            return this[1];\n          }).get();\n          var max = Math.max.apply(null, heights);\n          groups[j].push(max);\n        }\n        cb(groups);\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n       * @param {array} heights - An array of heights of children within Equalizer container\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeight',\n      value: function applyHeight(heights) {\n        var max = Math.max.apply(null, heights);\n        /**\n         * Fires before the heights are applied\n         * @event Equalizer#preequalized\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n\n        this.$watched.css('height', max);\n\n        /**\n         * Fires when the heights have been applied\n         * @event Equalizer#postequalized\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#preequalizedRow\n       * @fires Equalizer#postequalizedRow\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeightByRow',\n      value: function applyHeightByRow(groups) {\n        /**\n         * Fires before the heights are applied\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n        for (var i = 0, len = groups.length; i < len; i++) {\n          var groupsILength = groups[i].length,\n              max = groups[i][groupsILength - 1];\n          if (groupsILength <= 2) {\n            $(groups[i][0][0]).css({ 'height': 'auto' });\n            continue;\n          }\n          /**\n            * Fires before the heights per row are applied\n            * @event Equalizer#preequalizedRow\n            */\n          this.$element.trigger('preequalizedrow.zf.equalizer');\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\n            $(groups[i][j][0]).css({ 'height': max });\n          }\n          /**\n            * Fires when the heights per row have been applied\n            * @event Equalizer#postequalizedRow\n            */\n          this.$element.trigger('postequalizedrow.zf.equalizer');\n        }\n        /**\n         * Fires when the heights have been applied\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Destroys an instance of Equalizer.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Equalizer;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Equalizer.defaults = {\n    /**\n     * Enable height equalization when stacked on smaller screens.\n     * @option\n     * @example true\n     */\n    equalizeOnStack: false,\n    /**\n     * Enable height equalization row by row.\n     * @option\n     * @example false\n     */\n    equalizeByRow: false,\n    /**\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\n     * @option\n     * @example 'medium'\n     */\n    equalizeOn: ''\n  };\n\n  // Window exports\n  Foundation.plugin(Equalizer, 'Equalizer');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Interchange module.\n   * @module foundation.interchange\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader\n   */\n\n  var Interchange = function () {\n    /**\n     * Creates a new instance of Interchange.\n     * @class\n     * @fires Interchange#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\n       * Initializes events for Interchange.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(function () {\n          _this2._reflow();\n        }, 50));\n      }\n\n      /**\n       * Calls necessary functions to update Interchange upon DOM change\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          if (this.rules.hasOwnProperty(i)) {\n            var rule = this.rules[i];\n            if (window.matchMedia(rule.query).matches) {\n              match = rule;\n            }\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n            var query = Foundation.MediaQuery.queries[i];\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\n          }\n        }\n      }\n\n      /**\n       * Checks the Interchange element for the provided media query + content pairings\n       * @function\n       * @private\n       * @param {Object} element - jQuery object that is an Interchange instance\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n        }\n\n        for (var i in rules) {\n          if (rules.hasOwnProperty(i)) {\n            var rule = rules[i].slice(1, -1).split(', ');\n            var path = rule.slice(0, -1).join('');\n            var query = rule[rule.length - 1];\n\n            if (Interchange.SPECIAL_QUERIES[query]) {\n              query = Interchange.SPECIAL_QUERIES[query];\n            }\n\n            rulesList.push({\n              path: path,\n              query: query\n            });\n          }\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n       * @function\n       * @param {String} path - Path to the image or HTML partial.\n       * @fires Interchange#replaced\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).on('load', function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\n         * Fires when content in an Interchange element is done being loaded.\n         * @event Interchange#replaced\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\n       * Destroys an instance of interchange.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Interchange.defaults = {\n    /**\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n     * @option\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Magellan module.\n   * @module foundation.magellan\n   */\n\n  var Magellan = function () {\n    /**\n     * Creates a new instance of Magellan.\n     * @class\n     * @fires Magellan#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Magellan(element, options) {\n      _classCallCheck(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Magellan, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      /**\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n       * Can be invoked if new elements are added or the size of a location changes.\n       * @function\n       */\n\n    }, {\n      key: 'calcPoints',\n      value: function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      /**\n       * Initializes events for Magellan.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n      }\n\n      /**\n       * Function to scroll to a given location on the page.\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n       * @function\n       */\n\n    }, {\n      key: 'scrollToLoc',\n      value: function scrollToLoc(loc) {\n        // Do nothing if target does not exist to prevent errors\n        if (!$(loc).length) {\n          return false;\n        }\n        var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n      }\n\n      /**\n       * Calls necessary functions to update Magellan upon DOM change\n       * @function\n       */\n\n    }, {\n      key: 'reflow',\n      value: function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      /**\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n       * @private\n       * @function\n       * @fires Magellan#update\n       */\n\n    }, {\n      key: '_updateActive',\n      value: function _updateActive() /*evt, elem, scrollPos*/{\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = undefined;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = \" \";\n          if (curIdx != undefined) {\n            hash = this.$active[0].getAttribute('href');\n          }\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\n         * Fires when magellan is finished updating to the new active element.\n         * @event Magellan#update\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      /**\n       * Destroys an instance of Magellan and resets the url of the window.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Magellan;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Magellan.defaults = {\n    /**\n     * Amount of time, in ms, the animated scrolling should take between locations.\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Animation style to use when scrolling between locations.\n     * @option\n     * @example 'ease-in-out'\n     */\n    animationEasing: 'linear',\n    /**\n     * Number of pixels to use as a marker for location changes.\n     * @option\n     * @example 50\n     */\n    threshold: 50,\n    /**\n     * Class applied to the active locations link on the magellan container.\n     * @option\n     * @example 'active'\n     */\n    activeClass: 'active',\n    /**\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n     * @option\n     * @example true\n     */\n    deepLinking: false,\n    /**\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n     * @option\n     * @example 25\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * OffCanvas module.\n   * @module foundation.offcanvas\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   * @requires foundation.util.motion\n   */\n\n  var OffCanvas = function () {\n    /**\n     * Creates a new instance of an off-canvas wrapper.\n     * @class\n     * @fires OffCanvas#init\n     * @param {Object} element - jQuery object to initialize.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function OffCanvas(element, options) {\n      _classCallCheck(this, OffCanvas);\n\n      this.$element = element;\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n      this.$lastTrigger = $();\n      this.$triggers = $();\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'OffCanvas');\n      Foundation.Keyboard.register('OffCanvas', {\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n     * @function\n     * @private\n     */\n\n\n    _createClass(OffCanvas, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element.attr('id');\n\n        this.$element.attr('aria-hidden', 'true');\n\n        this.$element.addClass('is-transition-' + this.options.transition);\n\n        // Find triggers that affect this element and add aria-expanded to them\n        this.$triggers = $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n        // Add an overlay over the content if necessary\n        if (this.options.contentOverlay === true) {\n          var overlay = document.createElement('div');\n          var overlayPosition = $(this.$element).css(\"position\") === 'fixed' ? 'is-overlay-fixed' : 'is-overlay-absolute';\n          overlay.setAttribute('class', 'js-off-canvas-overlay ' + overlayPosition);\n          this.$overlay = $(overlay);\n          if (overlayPosition === 'is-overlay-fixed') {\n            $('body').append(this.$overlay);\n          } else {\n            this.$element.siblings('[data-off-canvas-content]').append(this.$overlay);\n          }\n        }\n\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n        if (this.options.isRevealed === true) {\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n          this._setMQChecker();\n        }\n        if (!this.options.transitionTime === true) {\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas]')[0]).transitionDuration) * 1000;\n        }\n      }\n\n      /**\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n        });\n\n        if (this.options.closeOnClick === true) {\n          var $target = this.options.contentOverlay ? this.$overlay : $('[data-off-canvas-content]');\n          $target.on({ 'click.zf.offcanvas': this.close.bind(this) });\n        }\n      }\n\n      /**\n       * Applies event listener for elements that will reveal at certain breakpoints.\n       * @private\n       */\n\n    }, {\n      key: '_setMQChecker',\n      value: function _setMQChecker() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          } else {\n            _this.reveal(false);\n          }\n        }).one('load.zf.offcanvas', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          }\n        });\n      }\n\n      /**\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n       * @param {Boolean} isRevealed - true if element should be revealed.\n       * @function\n       */\n\n    }, {\n      key: 'reveal',\n      value: function reveal(isRevealed) {\n        var $closer = this.$element.find('[data-close]');\n        if (isRevealed) {\n          this.close();\n          this.isRevealed = true;\n          this.$element.attr('aria-hidden', 'false');\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\n          if ($closer.length) {\n            $closer.hide();\n          }\n        } else {\n          this.isRevealed = false;\n          this.$element.attr('aria-hidden', 'true');\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this)\n          });\n          if ($closer.length) {\n            $closer.show();\n          }\n        }\n      }\n\n      /**\n       * Stops scrolling of the body when offcanvas is open on mobile Safari and other troublesome browsers.\n       * @private\n       */\n\n    }, {\n      key: '_stopScrolling',\n      value: function _stopScrolling(event) {\n        return false;\n      }\n\n      /**\n       * Opens the off-canvas menu.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       * @fires OffCanvas#opened\n       */\n\n    }, {\n      key: 'open',\n      value: function open(event, trigger) {\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n        var _this = this;\n\n        if (trigger) {\n          this.$lastTrigger = trigger;\n        }\n\n        if (this.options.forceTo === 'top') {\n          window.scrollTo(0, 0);\n        } else if (this.options.forceTo === 'bottom') {\n          window.scrollTo(0, document.body.scrollHeight);\n        }\n\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#opened\n         */\n        _this.$element.addClass('is-open');\n\n        this.$triggers.attr('aria-expanded', 'true');\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n        // If `contentScroll` is set to false, add class and disable scrolling on touch devices.\n        if (this.options.contentScroll === false) {\n          $('body').addClass('is-off-canvas-open').on('touchmove', this._stopScrolling);\n        }\n\n        if (this.options.contentOverlay === true) {\n          this.$overlay.addClass('is-visible');\n        }\n\n        if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n          this.$overlay.addClass('is-closable');\n        }\n\n        if (this.options.autoFocus === true) {\n          this.$element.one(Foundation.transitionend(this.$element), function () {\n            _this.$element.find('a, button').eq(0).focus();\n          });\n        }\n\n        if (this.options.trapFocus === true) {\n          this.$element.siblings('[data-off-canvas-content]').attr('tabindex', '-1');\n          Foundation.Keyboard.trapFocus(this.$element);\n        }\n      }\n\n      /**\n       * Closes the off-canvas menu.\n       * @function\n       * @param {Function} cb - optional cb to fire after closure.\n       * @fires OffCanvas#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close(cb) {\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n\n        var _this = this;\n\n        _this.$element.removeClass('is-open');\n\n        this.$element.attr('aria-hidden', 'true')\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#closed\n         */\n        .trigger('closed.zf.offcanvas');\n\n        // If `contentScroll` is set to false, remove class and re-enable scrolling on touch devices.\n        if (this.options.contentScroll === false) {\n          $('body').removeClass('is-off-canvas-open').off('touchmove', this._stopScrolling);\n        }\n\n        if (this.options.contentOverlay === true) {\n          this.$overlay.removeClass('is-visible');\n        }\n\n        if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n          this.$overlay.removeClass('is-closable');\n        }\n\n        this.$triggers.attr('aria-expanded', 'false');\n\n        if (this.options.trapFocus === true) {\n          this.$element.siblings('[data-off-canvas-content]').removeAttr('tabindex');\n          Foundation.Keyboard.releaseFocus(this.$element);\n        }\n      }\n\n      /**\n       * Toggles the off-canvas menu open or closed.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle(event, trigger) {\n        if (this.$element.hasClass('is-open')) {\n          this.close(event, trigger);\n        } else {\n          this.open(event, trigger);\n        }\n      }\n\n      /**\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_handleKeyboard',\n      value: function _handleKeyboard(e) {\n        var _this2 = this;\n\n        Foundation.Keyboard.handleKey(e, 'OffCanvas', {\n          close: function close() {\n            _this2.close();\n            _this2.$lastTrigger.focus();\n            return true;\n          },\n          handled: function handled() {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        });\n      }\n\n      /**\n       * Destroys the offcanvas plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.close();\n        this.$element.off('.zf.trigger .zf.offcanvas');\n        this.$overlay.off('.zf.offcanvas');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return OffCanvas;\n  }();\n\n  OffCanvas.defaults = {\n    /**\n     * Allow the user to click outside of the menu to close it.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n\n    /**\n     * Adds an overlay on top of `[data-off-canvas-content]`.\n     * @option\n     * @example true\n     */\n    contentOverlay: true,\n\n    /**\n     * Enable/disable scrolling of the main content when an off canvas panel is open.\n     * @option\n     * @example true\n     */\n    contentScroll: true,\n\n    /**\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n     * @option\n     * @example 500\n     */\n    transitionTime: 0,\n\n    /**\n     * Type of transition for the offcanvas menu. Options are 'push', 'detached' or 'slide'.\n     * @option\n     * @example push\n     */\n    transition: 'push',\n\n    /**\n     * Force the page to scroll to top or bottom on open.\n     * @option\n     * @example top\n     */\n    forceTo: null,\n\n    /**\n     * Allow the offcanvas to remain open for certain breakpoints.\n     * @option\n     * @example false\n     */\n    isRevealed: false,\n\n    /**\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n     * @option\n     * @example reveal-for-large\n     */\n    revealOn: null,\n\n    /**\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n     * @option\n     * @example true\n     */\n    autoFocus: true,\n\n    /**\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n     * @option\n     * TODO improve the regex testing for this.\n     * @example reveal-for-large\n     */\n    revealClass: 'reveal-for-',\n\n    /**\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n     * @option\n     * @example true\n     */\n    trapFocus: false\n  };\n\n  // Window exports\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        // @TODO: consider discussion on PR #9278 about DOM pollution by changeSlide\n        this._reset();\n\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'orbit');\n\n        this.$element.attr({\n          'data-resize': id,\n          'id': id\n        });\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\n      * Creates a jQuery collection of bullets, if they are being used.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n      * @function\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\n      * Sets wrapper and slide heights for the orbit.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight();\n      }\n\n      /**\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n      * @function\n      * @private\n      * @param {Function} cb - a callback function to fire when complete.\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0,\n            _this = this;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (_this.$slides.filter('.is-active')[0] !== _this.$slides.eq(counter)[0]) {\n            //if not the active slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          if (cb) {\n            cb(max);\n          } //fire callback with max height dimension.\n        }\n      }\n\n      /**\n      * Sets the max-height of each slide.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\n      * Adds event listeners to basically everything within the element.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        //\n        this.$element.off('.resizeme.zf.trigger').on({\n          'resizeme.zf.trigger': this._prepareForOrbit.bind(this)\n        });\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          if (this.options.accessible) {\n            this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n              // handle keyboard event with keyboard util\n              Foundation.Keyboard.handleKey(e, 'Orbit', {\n                next: function next() {\n                  _this.changeSlide(true);\n                },\n                previous: function previous() {\n                  _this.changeSlide(false);\n                },\n                handled: function handled() {\n                  // if bullet is focused, make sure focus moves\n                  if ($(e.target).is(_this.$bullets)) {\n                    _this.$bullets.filter('.is-active').focus();\n                  }\n                }\n              });\n            });\n          }\n        }\n      }\n\n      /**\n       * Resets Orbit so it can be reinitialized\n       */\n\n    }, {\n      key: '_reset',\n      value: function _reset() {\n        // Don't do anything if there are no slides (first run)\n        if (typeof this.$slides == 'undefined') {\n          return;\n        }\n\n        if (this.$slides.length > 1) {\n          // Remove old events\n          this.$element.off('.zf.orbit').find('*').off('.zf.orbit');\n\n          // Restart timer if autoPlay is enabled\n          if (this.options.autoPlay) {\n            this.timer.restart();\n          }\n\n          // Reset all sliddes\n          this.$slides.each(function (el) {\n            $(el).removeClass('is-active is-active is-in').removeAttr('aria-live').hide();\n          });\n\n          // Show the first slide\n          this.$slides.first().addClass('is-active').show();\n\n          // Triggers when the slide has finished animating\n          this.$element.trigger('slidechange.zf.orbit', [this.$slides.first()]);\n\n          // Select first bullet if bullets are present\n          if (this.options.bullets) {\n            this._updateBullets(0);\n          }\n        }\n      }\n\n      /**\n      * Changes the current slide to a new one.\n      * @function\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n      * @fires Orbit#slidechange\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        if (!this.$slides) {\n          return;\n        } // Don't freak out if we're in the middle of cleanup\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n          $newSlide = chosenSlide;\n        }\n\n        if ($newSlide.length) {\n          /**\n          * Triggers before the next slide starts animating in and only if a next slide has been found.\n          * @event Orbit#beforeslidechange\n          */\n          this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\n\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI && !this.$element.is(':hidden')) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n            $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n            $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n            if (this.options.autoPlay && !this.timer.isPaused) {\n              this.timer.restart();\n            }\n          }\n          /**\n          * Triggers when the slide has finished animating in.\n          * @event Orbit#slidechange\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\n      * Updates the active state of the bullets, if displayed.\n      * @function\n      * @private\n      * @param {Number} idx - the index of the current slide.\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\n      * Destroys the carousel and hides the element.\n      * @function\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveMenu module.\n   * @module foundation.responsiveMenu\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.accordionMenu\n   * @requires foundation.util.drilldown\n   * @requires foundation.util.dropdown-menu\n   */\n\n  var ResponsiveMenu = function () {\n    /**\n     * Creates a new instance of a responsive menu.\n     * @class\n     * @fires ResponsiveMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n        // Add data-mutate since children may need it.\n        this.$element.attr('data-mutate', this.$element.attr('data-mutate') || Foundation.GetYoDigits(6, 'responsive-menu'));\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n        this.options = $.extend({}, this.options, this.$targetMenu.data());\n\n        // If they were set, parse the animation classes\n        if (this.options.animate) {\n          var input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n\n        this._update();\n      }\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this2 = this;\n\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          if (this.options.animate) {\n            if (this.$targetMenu.is(':hidden')) {\n              Foundation.Motion.animateIn(this.$targetMenu, this.animationIn, function () {\n                /**\n                 * Fires when the element attached to the tab bar toggles.\n                 * @event ResponsiveToggle#toggled\n                 */\n                _this2.$element.trigger('toggled.zf.responsiveToggle');\n              });\n            } else {\n              Foundation.Motion.animateOut(this.$targetMenu, this.animationOut, function () {\n                /**\n                 * Fires when the element attached to the tab bar toggles.\n                 * @event ResponsiveToggle#toggled\n                 */\n                _this2.$element.trigger('toggled.zf.responsiveToggle');\n              });\n            }\n          } else {\n            this.$targetMenu.toggle(0);\n\n            /**\n             * Fires when the element attached to the tab bar toggles.\n             * @event ResponsiveToggle#toggled\n             */\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          }\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium',\n\n    /**\n     * To decide if the toggle should be animated or not.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($(this.options.appendTo));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay(id) {\n        var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo(this.options.appendTo);\n        return $overlay;\n      }\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function closeZfTrigger(event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function resizemeZfTrigger() {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\n           * Fires immediately before the modal opens.\n           * Closes any other modals that are currently open\n           * @event Reveal#closeme\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n\n        var _this = this;\n\n        function addRevealOpenClasses() {\n          if (_this.isMobile) {\n            if (!_this.originalScrollPos) {\n              _this.originalScrollPos = window.pageYOffset;\n            }\n            $('html, body').addClass('is-reveal-open');\n          } else {\n            $('body').addClass('is-reveal-open');\n          }\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          (function () {\n            var afterAnimation = function afterAnimation() {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n              addRevealOpenClasses();\n              Foundation.Keyboard.trapFocus(_this.$element);\n            };\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              if (_this3.$element) {\n                // protect against object having been removed\n                _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n                afterAnimation();\n              }\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n        Foundation.Keyboard.trapFocus(this.$element);\n\n        /**\n         * Fires when the modal has successfully opened.\n         * @event Reveal#open\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        addRevealOpenClasses();\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        if (!this.$element) {\n          return;\n        } // If we're in the middle of cleanup, don't freak out\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target) || !$.contains(document, e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function close() {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            open: function open() {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function close() {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function handled(preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            $('html, body').removeClass('is-reveal-open');\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          Foundation.Keyboard.releaseFocus(_this.$element);\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\n          * Fires when the modal is done closing.\n          * @event Reveal#closed\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState('', document.title, window.location.href.replace('#' + this.id, ''));\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example auto\n     */\n    vOffset: 'auto',\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example auto\n     */\n    hOffset: 'auto',\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false,\n    /**\n    * Allows the modal to append to custom div.\n    * @option\n    * @example false\n    */\n    appendTo: \"body\"\n\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Slider module.\n   * @module foundation.slider\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.touch\n   */\n\n  var Slider = function () {\n    /**\n     * Creates a new instance of a slider control.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a slider control.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Slider(element, options) {\n      _classCallCheck(this, Slider);\n\n      this.$element = element;\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Slider');\n      Foundation.Keyboard.register('Slider', {\n        'ltr': {\n          'ARROW_RIGHT': 'increase',\n          'ARROW_UP': 'increase',\n          'ARROW_DOWN': 'decrease',\n          'ARROW_LEFT': 'decrease',\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\n          'SHIFT_ARROW_UP': 'increase_fast',\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'increase',\n          'ARROW_RIGHT': 'decrease',\n          'SHIFT_ARROW_LEFT': 'increase_fast',\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\n        }\n      });\n    }\n\n    /**\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n     * @function\n     * @private\n     */\n\n\n    _createClass(Slider, [{\n      key: '_init',\n      value: function _init() {\n        this.inputs = this.$element.find('input');\n        this.handles = this.$element.find('[data-slider-handle]');\n\n        this.$handle = this.handles.eq(0);\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n        var isDbl = false,\n            _this = this;\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n          this.options.disabled = true;\n          this.$element.addClass(this.options.disabledClass);\n        }\n        if (!this.inputs.length) {\n          this.inputs = $().add(this.$input);\n          this.options.binding = true;\n        }\n\n        this._setInitAttr(0);\n\n        if (this.handles[1]) {\n          this.options.doubleSided = true;\n          this.$handle2 = this.handles.eq(1);\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\n\n          if (!this.inputs[1]) {\n            this.inputs = this.inputs.add(this.$input2);\n          }\n          isDbl = true;\n\n          // this.$handle.triggerHandler('click.zf.slider');\n          this._setInitAttr(1);\n        }\n\n        // Set handle positions\n        this.setHandles();\n\n        this._events();\n      }\n    }, {\n      key: 'setHandles',\n      value: function setHandles() {\n        var _this2 = this;\n\n        if (this.handles[1]) {\n          this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, function () {\n            _this2._setHandlePos(_this2.$handle2, _this2.inputs.eq(1).val(), true);\n          });\n        } else {\n          this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\n        }\n      }\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this.setHandles();\n      }\n      /**\n      * @function\n      * @private\n      * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n      */\n\n    }, {\n      key: '_pctOfBar',\n      value: function _pctOfBar(value) {\n        var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start);\n\n        switch (this.options.positionValueFunction) {\n          case \"pow\":\n            pctOfBar = this._logTransform(pctOfBar);\n            break;\n          case \"log\":\n            pctOfBar = this._powTransform(pctOfBar);\n            break;\n        }\n\n        return pctOfBar.toFixed(2);\n      }\n\n      /**\n      * @function\n      * @private\n      * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n      */\n\n    }, {\n      key: '_value',\n      value: function _value(pctOfBar) {\n        switch (this.options.positionValueFunction) {\n          case \"pow\":\n            pctOfBar = this._powTransform(pctOfBar);\n            break;\n          case \"log\":\n            pctOfBar = this._logTransform(pctOfBar);\n            break;\n        }\n        var value = (this.options.end - this.options.start) * pctOfBar + this.options.start;\n\n        return value;\n      }\n\n      /**\n      * @function\n      * @private\n      * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n      */\n\n    }, {\n      key: '_logTransform',\n      value: function _logTransform(value) {\n        return baseLog(this.options.nonLinearBase, value * (this.options.nonLinearBase - 1) + 1);\n      }\n\n      /**\n      * @function\n      * @private\n      * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n      */\n\n    }, {\n      key: '_powTransform',\n      value: function _powTransform(value) {\n        return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1);\n      }\n\n      /**\n       * Sets the position of the selected handle and fill bar.\n       * @function\n       * @private\n       * @param {jQuery} $hndl - the selected handle to move.\n       * @param {Number} location - floating point between the start and end values of the slider bar.\n       * @param {Function} cb - callback function to fire on completion.\n       * @fires Slider#moved\n       * @fires Slider#changed\n       */\n\n    }, {\n      key: '_setHandlePos',\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\n        // don't move if the slider has been disabled since its initialization\n        if (this.$element.hasClass(this.options.disabledClass)) {\n          return;\n        }\n        //might need to alter that slightly for bars that will have odd number selections.\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\n\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n        if (location < this.options.start) {\n          location = this.options.start;\n        } else if (location > this.options.end) {\n          location = this.options.end;\n        }\n\n        var isDbl = this.options.doubleSided;\n\n        if (isDbl) {\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n          if (this.handles.index($hndl) === 0) {\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n            location = location >= h2Val ? h2Val - this.options.step : location;\n          } else {\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n            location = location <= h1Val ? h1Val + this.options.step : location;\n          }\n        }\n\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\n        if (this.options.vertical && !noInvert) {\n          location = this.options.end - location;\n        }\n\n        var _this = this,\n            vert = this.options.vertical,\n            hOrW = vert ? 'height' : 'width',\n            lOrT = vert ? 'top' : 'left',\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n        var css = {};\n\n        this._setValues($hndl, location);\n\n        // TODO update to calculate based on values set to respective inputs??\n        if (isDbl) {\n          var isLeftHndl = this.handles.index($hndl) === 0,\n\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n\n          //percentage w/h of the handle compared to the slider bar\n          handlePct = ~~(percent(handleDim, elemDim) * 100);\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n          if (isLeftHndl) {\n            //left or top percentage value to apply to the fill bar.\n            css[lOrT] = movement + '%';\n            //calculate the new min-height/width for the fill bar.\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n            if (cb && typeof cb === 'function') {\n              cb();\n            } //this is only needed for the initialization of 2 handled sliders\n          } else {\n            //just caching the value of the left/bottom handle's left/top property\n            var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n            //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n            //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n            dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start) / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\n          }\n          // assign the min-height/width to our css object\n          css['min-' + hOrW] = dim + '%';\n        }\n\n        this.$element.one('finished.zf.animate', function () {\n          /**\n           * Fires when the handle is done moving.\n           * @event Slider#moved\n           */\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\n        });\n\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\n\n        Foundation.Move(moveTime, $hndl, function () {\n          // adjusting the left/top property of the handle, based on the percentage calculated above\n          // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n          // fall back to next best guess.\n          if (isNaN(movement)) {\n            $hndl.css(lOrT, pctOfBar * 100 + '%');\n          } else {\n            $hndl.css(lOrT, movement + '%');\n          }\n\n          if (!_this.options.doubleSided) {\n            //if single-handled, a simple method to expand the fill bar\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\n          } else {\n            //otherwise, use the css object we created above\n            _this.$fill.css(css);\n          }\n        });\n\n        /**\n         * Fires when the value has not been change for a given time.\n         * @event Slider#changed\n         */\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function () {\n          _this.$element.trigger('changed.zf.slider', [$hndl]);\n        }, _this.options.changedDelay);\n      }\n\n      /**\n       * Sets the initial attribute for the slider element.\n       * @function\n       * @private\n       * @param {Number} idx - index of the current handle/input to use.\n       */\n\n    }, {\n      key: '_setInitAttr',\n      value: function _setInitAttr(idx) {\n        var initVal = idx === 0 ? this.options.initialStart : this.options.initialEnd;\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n        this.inputs.eq(idx).attr({\n          'id': id,\n          'max': this.options.end,\n          'min': this.options.start,\n          'step': this.options.step\n        });\n        this.inputs.eq(idx).val(initVal);\n        this.handles.eq(idx).attr({\n          'role': 'slider',\n          'aria-controls': id,\n          'aria-valuemax': this.options.end,\n          'aria-valuemin': this.options.start,\n          'aria-valuenow': initVal,\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n          'tabindex': 0\n        });\n      }\n\n      /**\n       * Sets the input and `aria-valuenow` values for the slider element.\n       * @function\n       * @private\n       * @param {jQuery} $handle - the currently selected handle.\n       * @param {Number} val - floating point of the new value.\n       */\n\n    }, {\n      key: '_setValues',\n      value: function _setValues($handle, val) {\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n        this.inputs.eq(idx).val(val);\n        $handle.attr('aria-valuenow', val);\n      }\n\n      /**\n       * Handles events on the slider element.\n       * Calculates the new location of the current handle.\n       * If there are two handles and the bar was clicked, it determines which handle to move.\n       * @function\n       * @private\n       * @param {Object} e - the `event` object passed from the listener.\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\n       * @param {Number} val - floating point number for the new value of the slider.\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(e, $handle, val) {\n        var value, hasVal;\n        if (!val) {\n          //click or drag events\n          e.preventDefault();\n          var _this = this,\n              vertical = this.options.vertical,\n              param = vertical ? 'height' : 'width',\n              direction = vertical ? 'top' : 'left',\n              eventOffset = vertical ? e.pageY : e.pageX,\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n              barDim = this.$element[0].getBoundingClientRect()[param],\n              windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n          var elemOffset = this.$element.offset()[direction];\n\n          // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n          // best way to guess this is simulated is if clientY == pageY\n          if (e.clientY === e.pageY) {\n            eventOffset = eventOffset + windowScroll;\n          }\n          var eventFromBar = eventOffset - elemOffset;\n          var barXY;\n          if (eventFromBar < 0) {\n            barXY = 0;\n          } else if (eventFromBar > barDim) {\n            barXY = barDim;\n          } else {\n            barXY = eventFromBar;\n          }\n          var offsetPct = percent(barXY, barDim);\n\n          value = this._value(offsetPct);\n\n          // turn everything around for RTL, yay math!\n          if (Foundation.rtl() && !this.options.vertical) {\n            value = this.options.end - value;\n          }\n\n          value = _this._adjustValue(null, value);\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\n          hasVal = false;\n\n          if (!$handle) {\n            //figure out which handle it is, pass it to the next function.\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n          }\n        } else {\n          //change event on input\n          value = this._adjustValue(null, val);\n          hasVal = true;\n        }\n\n        this._setHandlePos($handle, value, hasVal);\n      }\n\n      /**\n       * Adjustes value for handle in regard to step value. returns adjusted value\n       * @function\n       * @private\n       * @param {jQuery} $handle - the selected handle.\n       * @param {Number} value - value to adjust. used if $handle is falsy\n       */\n\n    }, {\n      key: '_adjustValue',\n      value: function _adjustValue($handle, value) {\n        var val,\n            step = this.options.step,\n            div = parseFloat(step / 2),\n            left,\n            prev_val,\n            next_val;\n        if (!!$handle) {\n          val = parseFloat($handle.attr('aria-valuenow'));\n        } else {\n          val = value;\n        }\n        left = val % step;\n        prev_val = val - left;\n        next_val = prev_val + step;\n        if (left === 0) {\n          return val;\n        }\n        val = val >= prev_val + div ? next_val : prev_val;\n        return val;\n      }\n\n      /**\n       * Adds event listeners to the slider elements.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._eventsForHandle(this.$handle);\n        if (this.handles[1]) {\n          this._eventsForHandle(this.$handle2);\n        }\n      }\n\n      /**\n       * Adds event listeners a particular handle\n       * @function\n       * @private\n       * @param {jQuery} $handle - the current handle to apply listeners to.\n       */\n\n    }, {\n      key: '_eventsForHandle',\n      value: function _eventsForHandle($handle) {\n        var _this = this,\n            curHandle,\n            timer;\n\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\n          var idx = _this.inputs.index($(this));\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n        });\n\n        if (this.options.clickSelect) {\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\n            if (_this.$element.data('dragging')) {\n              return false;\n            }\n\n            if (!$(e.target).is('[data-slider-handle]')) {\n              if (_this.options.doubleSided) {\n                _this._handleEvent(e);\n              } else {\n                _this._handleEvent(e, _this.$handle);\n              }\n            }\n          });\n        }\n\n        if (this.options.draggable) {\n          this.handles.addTouch();\n\n          var $body = $('body');\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\n            $handle.addClass('is-dragging');\n            _this.$fill.addClass('is-dragging'); //\n            _this.$element.data('dragging', true);\n\n            curHandle = $(e.currentTarget);\n\n            $body.on('mousemove.zf.slider', function (e) {\n              e.preventDefault();\n              _this._handleEvent(e, curHandle);\n            }).on('mouseup.zf.slider', function (e) {\n              _this._handleEvent(e, curHandle);\n\n              $handle.removeClass('is-dragging');\n              _this.$fill.removeClass('is-dragging');\n              _this.$element.data('dragging', false);\n\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\n            });\n          })\n          // prevent events triggered by touch\n          .on('selectstart.zf.slider touchmove.zf.slider', function (e) {\n            e.preventDefault();\n          });\n        }\n\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\n          var _$handle = $(this),\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\n              newValue;\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Slider', {\n            decrease: function decrease() {\n              newValue = oldValue - _this.options.step;\n            },\n            increase: function increase() {\n              newValue = oldValue + _this.options.step;\n            },\n            decrease_fast: function decrease_fast() {\n              newValue = oldValue - _this.options.step * 10;\n            },\n            increase_fast: function increase_fast() {\n              newValue = oldValue + _this.options.step * 10;\n            },\n            handled: function handled() {\n              // only set handle pos when event was handled specially\n              e.preventDefault();\n              _this._setHandlePos(_$handle, newValue, true);\n            }\n          });\n          /*if (newValue) { // if pressed key has special function, update value\n            e.preventDefault();\n            _this._setHandlePos(_$handle, newValue);\n          }*/\n        });\n      }\n\n      /**\n       * Destroys the slider plugin.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.handles.off('.zf.slider');\n        this.inputs.off('.zf.slider');\n        this.$element.off('.zf.slider');\n\n        clearTimeout(this.timeout);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Slider;\n  }();\n\n  Slider.defaults = {\n    /**\n     * Minimum value for the slider scale.\n     * @option\n     * @example 0\n     */\n    start: 0,\n    /**\n     * Maximum value for the slider scale.\n     * @option\n     * @example 100\n     */\n    end: 100,\n    /**\n     * Minimum value change per change event.\n     * @option\n     * @example 1\n     */\n    step: 1,\n    /**\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n     * @option\n     * @example 0\n     */\n    initialStart: 0,\n    /**\n     * Value at which the right handle/second input should be set to on initialization.\n     * @option\n     * @example 100\n     */\n    initialEnd: 100,\n    /**\n     * Allows the input to be located outside the container and visible. Set to by the JS\n     * @option\n     * @example false\n     */\n    binding: false,\n    /**\n     * Allows the user to click/tap on the slider bar to select a value.\n     * @option\n     * @example true\n     */\n    clickSelect: true,\n    /**\n     * Set to true and use the `vertical` class to change alignment to vertical.\n     * @option\n     * @example false\n     */\n    vertical: false,\n    /**\n     * Allows the user to drag the slider handle(s) to select a value.\n     * @option\n     * @example true\n     */\n    draggable: true,\n    /**\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n     * @option\n     * @example false\n     */\n    disabled: false,\n    /**\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n     * @option\n     * @example false\n     */\n    doubleSided: false,\n    /**\n     * Potential future feature.\n     */\n    // steps: 100,\n    /**\n     * Number of decimal places the plugin should go to for floating point precision.\n     * @option\n     * @example 2\n     */\n    decimal: 2,\n    /**\n     * Time delay for dragged elements.\n     */\n    // dragDelay: 0,\n    /**\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n     * @option\n     * @example 200\n     */\n    moveTime: 200, //update this if changing the transition time in the sass\n    /**\n     * Class applied to disabled sliders.\n     * @option\n     * @example 'disabled'\n     */\n    disabledClass: 'disabled',\n    /**\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n     * @option\n     * @example false\n     */\n    invertVertical: false,\n    /**\n     * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n     * @option\n     * @example 500\n     */\n    changedDelay: 500,\n    /**\n    * Basevalue for non-linear sliders\n    * @option\n    * @example 5\n    */\n    nonLinearBase: 5,\n    /**\n    * Basevalue for non-linear sliders, possible values are: 'linear', 'pow' & 'log'. Pow and Log use the nonLinearBase setting.\n    * @option\n    * @example 'linear'\n    */\n    positionValueFunction: 'linear'\n  };\n\n  function percent(frac, num) {\n    return frac / num;\n  }\n  function absPosition($handle, dir, clickPos, param) {\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\n  }\n  function baseLog(base, value) {\n    return Math.log(value) / Math.log(base);\n  }\n\n  // Window exports\n  Foundation.plugin(Slider, 'Slider');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Sticky module.\n   * @module foundation.sticky\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   */\n\n  var Sticky = function () {\n    /**\n     * Creates a new instance of a sticky thing.\n     * @class\n     * @param {jQuery} element - jQuery object to make sticky.\n     * @param {Object} options - options object passed when creating the element programmatically.\n     */\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n\n    /**\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n     * @function\n     * @private\n     */\n\n\n    _createClass(Sticky, [{\n      key: '_init',\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id });\n\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          //We calculate the container height to have correct values for anchor points offset calculation.\n          _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n          _this.$container.css('height', _this.containerHeight);\n          _this.elemHeight = _this.containerHeight;\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            var scroll = window.pageYOffset;\n            _this._calc(false, scroll);\n            //Unstick the element will ensure that proper classes are set.\n            if (!_this.isStuck) {\n              _this._removeSticky(scroll >= _this.topPoint ? false : true);\n            }\n          });\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n\n      /**\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_parsePoints',\n      value: function _parsePoints() {\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n          var pt;\n          if (typeof pts[i] === 'number') {\n            pt = pts[i];\n          } else {\n            var place = pts[i].split(':'),\n                anchor = $('#' + place[0]);\n\n            pt = anchor.offset().top;\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\n              pt += anchor[0].getBoundingClientRect().height;\n            }\n          }\n          breaks[i] = pt;\n        }\n\n        this.points = breaks;\n        return;\n      }\n\n      /**\n       * Adds event handlers for the scrolling element.\n       * @private\n       * @param {String} id - psuedo-random id for unique scroll event listener.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n        if (this.isOn) {\n          return;\n        }\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._setSizes(function () {\n            _this._calc(false);\n            if (_this.canStick) {\n              if (!_this.isOn) {\n                _this._events(id);\n              }\n            } else if (_this.isOn) {\n              _this._pauseListeners(scrollListener);\n            }\n          });\n        });\n      }\n\n      /**\n       * Removes event handlers for scroll and change events on anchor.\n       * @fires Sticky#pause\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n       */\n\n    }, {\n      key: '_pauseListeners',\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n\n        /**\n         * Fires when the plugin is paused due to resize event shrinking the view.\n         * @event Sticky#pause\n         * @private\n         */\n        this.$element.trigger('pause.zf.sticky');\n      }\n\n      /**\n       * Called on every `scroll` event and on `_init`\n       * fires functions based on booleans and cached values\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n       */\n\n    }, {\n      key: '_calc',\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n\n      /**\n       * Causes the $element to become stuck.\n       * Adds `position: fixed;`, and helper classes.\n       * @fires Sticky#stuckto\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setSticky',\n      value: function _setSticky() {\n        var _this = this,\n            stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = this.options[mrgn] + 'em';\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        this.isStuck = true;\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\n        /**\n         * Fires when the $element has become `position: fixed;`\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n         * @event Sticky#stuckto\n         */\n        .trigger('sticky.zf.stuckto:' + stickTo);\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\n          _this._setSizes();\n        });\n      }\n\n      /**\n       * Causes the $element to become unstuck.\n       * Removes `position: fixed;`, and helper classes.\n       * Adds other helper classes.\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n       * @fires Sticky#unstuckfrom\n       * @private\n       */\n\n    }, {\n      key: '_removeSticky',\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n\n        css[mrgn] = 0;\n\n        css['bottom'] = 'auto';\n        if (isTop) {\n          css['top'] = 0;\n        } else {\n          css['top'] = anchorPt;\n        }\n\n        this.isStuck = false;\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\n        /**\n         * Fires when the $element has become anchored.\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n         * @event Sticky#unstuckfrom\n         */\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\n      }\n\n      /**\n       * Sets the $element and $container sizes for plugin.\n       * Calls `_setBreakPoints`.\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n       * @private\n       */\n\n    }, {\n      key: '_setSizes',\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.is(this.options.stickyOn);\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        }\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdngl = parseInt(comp['padding-left'], 10),\n            pdngr = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': newElemWidth - pdngl - pdngr + 'px'\n        });\n\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        if (this.$element.css(\"display\") == \"none\") {\n          newContainerHeight = 0;\n        }\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (!this.isStuck) {\n          if (this.$element.hasClass('is-at-bottom')) {\n            var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n            this.$element.css('top', anchorPt);\n          }\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb && typeof cb === 'function') {\n            cb();\n          }\n        });\n      }\n\n      /**\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n       * @param {Function} cb - optional callback function to be called on completion.\n       * @private\n       */\n\n    }, {\n      key: '_setBreakPoints',\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb && typeof cb === 'function') {\n            cb();\n          } else {\n            return false;\n          }\n        }\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {\n          //this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb && typeof cb === 'function') {\n          cb();\n        }\n      }\n\n      /**\n       * Destroys the current sticky element.\n       * Resets the element to the top position first.\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger');\n        if (this.$anchor && this.$anchor.length) {\n          this.$anchor.off('change.zf.sticky');\n        }\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\n     * Customizable container template. Add your own classes for styling and sizing.\n     * @option\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n     */\n    container: '<div data-sticky-container></div>',\n    /**\n     * Location in the view the element sticks to.\n     * @option\n     * @example 'top'\n     */\n    stickTo: 'top',\n    /**\n     * If anchored to a single element, the id of that element.\n     * @option\n     * @example 'exampleId'\n     */\n    anchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the top anchor.\n     * @option\n     * @example 'exampleId:top'\n     */\n    topAnchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the bottom anchor.\n     * @option\n     * @example 'exampleId:bottom'\n     */\n    btmAnchor: '',\n    /**\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginTop: 1,\n    /**\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginBottom: 1,\n    /**\n     * Breakpoint string that is the minimum screen size an element should become sticky.\n     * @option\n     * @example 'medium'\n     */\n    stickyOn: 'medium',\n    /**\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n     * @option\n     * @example 'sticky'\n     */\n    stickyClass: 'sticky',\n    /**\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\n     * @option\n     * @example 'sticky-container'\n     */\n    containerClass: 'sticky-container',\n    /**\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n     * @option\n     * @example 50\n     */\n    checkEvery: -1\n  };\n\n  /**\n   * Helper function to calculate em values\n   * @param Number {em} - number of em's to calculate into pixels\n   */\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  }\n\n  // Window exports\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n;'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this = this;\n\n        this.$element.attr({ 'role': 'tablist' });\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('' + _this.options.linkActiveClass),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $(window).load(function () {\n              $('html, body').animate({ scrollTop: $elem.offset().top }, _this.options.deepLinkSmudgeDelay, function () {\n                $link.focus();\n              });\n            });\n          }\n\n          //use browser to open a tab, if it exists in this tabset\n          if (_this.options.deepLink) {\n            var anchor = window.location.hash;\n            //need a hash and a relevant anchor in this tabset\n            if (anchor.length) {\n              var $link = $elem.find('[href=\"' + anchor + '\"]');\n              if ($link.length) {\n                _this.selectTab($(anchor));\n\n                //roll up a little to show the titles\n                if (_this.options.deepLinkSmudge) {\n                  $(window).load(function () {\n                    var offset = $elem.offset();\n                    $('html, body').animate({ scrollTop: offset.top }, _this.options.deepLinkSmudgeDelay);\n                  });\n                }\n\n                /**\n                  * Fires when the zplugin has deeplinked at pageload\n                  * @event Tabs#deeplink\n                  */\n                $elem.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\n              }\n            }\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      /**\n       * Adds click handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\n       * Adds keyboard event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function open() {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function previous() {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function next() {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            },\n            handled: function handled() {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          });\n        });\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\n       * @param {jQuery} $target - Tab to open.\n       * @fires Tabs#change\n       * @function\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target) {\n\n        /**\n         * Check for active class on target. Collapse if exists.\n         */\n        if ($target.hasClass('' + this.options.linkActiveClass)) {\n          if (this.options.activeCollapse) {\n            this._collapseTab($target);\n\n            /**\n             * Fires when the zplugin has successfully collapsed tabs.\n             * @event Tabs#collapse\n             */\n            this.$element.trigger('collapse.zf.tabs', [$target]);\n          }\n          return;\n        }\n\n        var $oldTab = this.$element.find('.' + this.options.linkClass + '.' + this.options.linkActiveClass),\n            $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash);\n\n        //close old tab\n        this._collapseTab($oldTab);\n\n        //open new tab\n        this._openTab($target);\n\n        //either replace or update browser history\n        if (this.options.deepLink) {\n          var anchor = $target.find('a').attr('href');\n\n          if (this.options.updateHistory) {\n            history.pushState({}, '', anchor);\n          } else {\n            history.replaceState({}, '', anchor);\n          }\n        }\n\n        /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n        this.$element.trigger('change.zf.tabs', [$target, $targetContent]);\n\n        //fire to children a mutation event\n        $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to Open.\n       * @function\n       */\n\n    }, {\n      key: '_openTab',\n      value: function _openTab($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash);\n\n        $target.addClass('' + this.options.linkActiveClass);\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('' + this.options.panelActiveClass).attr({ 'aria-hidden': 'false' });\n      }\n\n      /**\n       * Collapses `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to Open.\n       * @function\n       */\n\n    }, {\n      key: '_collapseTab',\n      value: function _collapseTab($target) {\n        var $target_anchor = $target.removeClass('' + this.options.linkActiveClass).find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $target_anchor.attr('aria-controls')).removeClass('' + this.options.panelActiveClass).attr({ 'aria-hidden': 'true' });\n      }\n\n      /**\n       * Public method for selecting a content pane to display.\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n       * @function\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem) {\n        var idStr;\n\n        if ((typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\n       * Sets the height of each panel to the height of the tallest panel.\n       * If enabled in options, gets called on media query change.\n       * If loading content via external source, can be called directly or with _reflow.\n       * @function\n       * @private\n       */\n      value: function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('' + this.options.panelActiveClass);\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\n       * Destroys an instance of an tabs.\n       * @fires Tabs#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of pane specified by hash anchor\n     * @option\n     * @example false\n     */\n    deepLink: false,\n\n    /**\n     * Adjust the deep link scroll to make sure the top of the tab panel is visible\n     * @option\n     * @example false\n     */\n    deepLinkSmudge: false,\n\n    /**\n     * Animation time (ms) for the deep link adjustment\n     * @option\n     * @example 300\n     */\n    deepLinkSmudgeDelay: 300,\n\n    /**\n     * Update the browser history with the open tab\n     * @option\n     * @example false\n     */\n    updateHistory: false,\n\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * Not recommended if more than one tab panel per page.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Allows active tabs to collapse when clicked.\n     * @option\n     * @example false\n     */\n    activeCollapse: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the active `li` in tab link list.\n     * @option\n     * @example 'is-active'\n     */\n    linkActiveClass: 'is-active',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel',\n\n    /**\n     * Class applied to the active content container.\n     * @option\n     * @example 'is-active'\n     */\n    panelActiveClass: 'is-active'\n  };\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Toggler module.\n   * @module foundation.toggler\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   */\n\n  var Toggler = function () {\n    /**\n     * Creates a new instance of Toggler.\n     * @class\n     * @fires Toggler#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\n       * Initializes events for the toggle trigger.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n       * @function\n       * @fires Toggler#on\n       * @fires Toggler#off\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\n           * Fires if the target element has the class after a toggle.\n           * @event Toggler#on\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\n           * Fires if the target element does not have the class after a toggle.\n           * @event Toggler#off\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            _this._updateARIA(true);\n            this.trigger('on.zf.toggler');\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            _this._updateARIA(false);\n            this.trigger('off.zf.toggler');\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\n       * Destroys the instance of Toggler on the element.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n;'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tooltip module.\n   * @module foundation.tooltip\n   * @requires foundation.util.box\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   */\n\n  var Tooltip = function () {\n    /**\n     * Creates a new instance of a Tooltip.\n     * @class\n     * @fires Tooltip#init\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\n     * @param {Object} options - object to extend the default configuration.\n     */\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n     * @private\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        if (this.options.allowHtml) {\n          this.template.appendTo(document.body).html(this.options.tipText).hide();\n        } else {\n          this.template.appendTo(document.body).text(this.options.tipText).hide();\n        }\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.options.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\n       * @private\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\n       * builds the tooltip element, adds attributes, and returns the template.\n       * @private\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\n       * Function that gets called if a collision event is detected.\n       * @param {String} position - positioning class to try\n       * @private\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\n       * @fires Tooltip#closeme\n       * @fires Tooltip#show\n       * @function\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.is(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\n         * Fires to close all other open tooltips on the page\n         * @event Closeme#tooltip\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\n         * Fires when the tooltip is shown\n         * @event Tooltip#show\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n       * @fires Tooltip#hide\n       * @function\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\n         * fires when the tooltip is hidden\n         * @event Tooltip#hide\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\n       * adds event listeners for the tooltip and its anchor\n       * TODO combine some of the listeners like focus and mouseenter, etc.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              //_this.hide();\n              // _this.isClick = false;\n            } else {\n              _this.isClick = true;\n              if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                _this.show();\n              }\n            }\n          });\n        } else {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            _this.isClick = true;\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          if (_this.isClick) {\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n            // a real focus, otherwise on hover and come back we get bad behavior\n            if (!_this.options.clickOpen) {\n              isFocus = false;\n            }\n            return false;\n          } else {\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\n       * adds a toggle method, in addition to the static show() & hide() functions\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\n       * Destroys an instance of tooltip, removes template element from the view.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tooltip').removeClass('has-tip top right left').removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12,\n    /**\n    * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\n    * allowing HTML may open yourself up to XSS attacks.\n    * @option\n    * @example false\n    */\n    allowHtml: false\n  };\n\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);\n;'use strict';\n\n// Polyfill for requestAnimationFrame\n\n(function () {\n  if (!Date.now) Date.now = function () {\n    return new Date().getTime();\n  };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n    var vp = vendors[i];\n    window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n    window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function (callback) {\n      var now = Date.now();\n      var nextTime = Math.max(lastTime + 16, now);\n      return setTimeout(function () {\n        callback(lastTime = nextTime);\n      }, nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n})();\n\nvar initClasses = ['mui-enter', 'mui-leave'];\nvar activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n// Find the right \"transitionend\" event for this browser\nvar endEvent = function () {\n  var transitions = {\n    'transition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'transitionend',\n    'OTransition': 'otransitionend'\n  };\n  var elem = window.document.createElement('div');\n\n  for (var t in transitions) {\n    if (typeof elem.style[t] !== 'undefined') {\n      return transitions[t];\n    }\n  }\n\n  return null;\n}();\n\nfunction animate(isIn, element, animation, cb) {\n  element = $(element).eq(0);\n\n  if (!element.length) return;\n\n  if (endEvent === null) {\n    isIn ? element.show() : element.hide();\n    cb();\n    return;\n  }\n\n  var initClass = isIn ? initClasses[0] : initClasses[1];\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n  // Set up the animation\n  reset();\n  element.addClass(animation);\n  element.css('transition', 'none');\n  requestAnimationFrame(function () {\n    element.addClass(initClass);\n    if (isIn) element.show();\n  });\n\n  // Start the animation\n  requestAnimationFrame(function () {\n    element[0].offsetWidth;\n    element.css('transition', '');\n    element.addClass(activeClass);\n  });\n\n  // Clean up the animation when it finishes\n  element.one('transitionend', finish);\n\n  // Hides the element (for out animations), resets the element, and runs a callback\n  function finish() {\n    if (!isIn) element.hide();\n    reset();\n    if (cb) cb.apply(element);\n  }\n\n  // Resets transitions and removes motion-specific classes\n  function reset() {\n    element[0].style.transitionDuration = 0;\n    element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n  }\n}\n\nvar MotionUI = {\n  animateIn: function animateIn(element, animation, cb) {\n    animate(true, element, animation, cb);\n  },\n\n  animateOut: function animateOut(element, animation, cb) {\n    animate(false, element, animation, cb);\n  }\n};\n;\"use strict\";\n\nfunction isiPhone() {\n  return navigator.platform.indexOf(\"iPhone\") != -1 || navigator.platform.indexOf(\"iPod\") != -1;\n}\nfunction isiPad() {\n  return navigator.platform.indexOf(\"iPad\") != -1;\n}\nif (isiPhone()) {\n  $('body').addClass('iphone');\n}\nif (isiPad()) {\n  $('body').addClass('ipad');\n}\n\nif (isiPad() || isiPhone()) {\n  $(\"#showcaseList li\").bind(\"touchstart click\", function () {\n    $(this).toggleClass(\"hover\");\n  });\n  $(\"#showcaseList li\").bind(\"touchend click\", function () {\n    $(this).removeClass(\"hover\");\n  });\n}\n;'use strict';\n\n// Connect Reveal\n$('#connect').hide();\n$(\".toggleConnect\").click(function () {\n  $('.close').fadeIn('slow');\n  $('html').addClass(\"connectFixed\");\n  $('#connect .left-panel').show();\n  $('#connect .right-panel').show();\n  $('#connect').fadeIn(function () {\n    $('#connect .left-panel').addClass(\"visible\");\n    $('#connect .right-panel').addClass(\"visible\");\n  });\n});\n$(\".close\").click(function () {\n  $('#connect .left-panel').removeClass(\"visible\");\n  $('#connect .right-panel').removeClass(\"visible\");\n  $('#connect').fadeOut(function () {\n    $('html').removeClass(\"connectFixed\");\n  });\n});\n;'use strict';\n\n// FULL HEIGHT HEADER & PARALLAX FADE\n$(function () {\n  resizeDiv();\n  $('.parallax').removeClass(\"invisible\");\n});\nwindow.onresize = function (event) {\n  resizeDiv();\n};\nfunction resizeDiv() {\n  var vph = $(window).height();\n  $('.vh').css({ 'height': vph });\n}\n\n$(\".parallax\").waitForImages(function () {\n  $(this).addClass('fade');\n});\n;\"use strict\";\n\n// Mobile Nav\nvar lastScrollTop = 0;\n$(window).scroll(function (event) {\n  var st = $(this).scrollTop();\n\n  if (st > lastScrollTop) {\n    if (st > 150) {\n      $(\"#main-nav\").addClass('peek-hide');\n      $(\"#logoTag\").addClass('peek-hide');\n    }\n  } else {\n    var offset = lastScrollTop - st;\n    if (offset > 2) {\n      $(\"#main-nav\").removeClass('peek-hide');\n      $(\"#logoTag\").removeClass('peek-hide');\n      $(\"#main-nav\").addClass('peek');\n      $(\"#logoTag\").addClass('peek');\n    }\n  }\n  lastScrollTop = st;\n});\n\n// Where the magic happens\n$(\".nav-toggle\").click(function (e) {\n  $(this).toggleClass(\"active\");\n\n  $('.full-nav').toggleClass(\"visible\");\n  $('body').toggleClass(\"navFixed\");\n});\n$(window).resize(function () {\n  if ($(window).width() >= 640) {\n    $('.nav-toggle').removeClass(\"active\");\n    $('body').removeClass(\"navFixed\");\n    $('.full-nav').removeClass(\"visible\");\n    $('.logo').removeClass(\"black\");\n  }\n});\n;'use strict';\n\n$(function () {\n  $('a[href*=\\\\#]:not([href=\\\\#])').click(function () {\n    if (location.pathname.replace(/^\\//, '') == this.pathname.replace(/^\\//, '') && location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n      if (target.length) {\n        $('html,body').animate({\n          scrollTop: target.offset().top\n        }, 1000);\n        return false;\n      }\n    }\n  });\n});\n;\"use strict\";\n\n// Some jquery to add some styling to the markdown parsed html on showcase pages\n// Find imgs in a paragraph tag and wrap them in a row\n$(\"#contentBody p\").has(\"img\").wrap('<div class=\"row expanded collapse flex-wrap\" />');\n// Remove the wrapping p tag\n$(\".flex-wrap p\").has(\"img\").contents().unwrap();\n\nvar rowWrap = '<div class=\"row align-center content\"><div class=\"small-11 medium-10 large-9 columns content-col\"></div></div>';\nvar firstChild = $('#contentBody').children().first();\n\nfirstChild.not(\".flex-wrap\").nextUntil('.flex-wrap').addBack().wrapAll(rowWrap);\n\n$(\".flex-wrap\").each(function (i) {\n  $(this).nextUntil('.flex-wrap').wrapAll(rowWrap);\n  $(this).has(\"a\").find(\"a\").wrap(\"<div class='columns'></div>\");\n  $(this).has(\"img\").find(\"img\").wrap(\"<div class='columns'></div>\");\n  $(this).has(\"a\").find(\"a .columns\").contents().unwrap();\n});\n$(\".youtube-video\").addClass(\"flex-video widescreen\");\n\n// IMG Captions\n$(\".columns img\").each(function () {\n  var imageCaption = $(this).attr(\"title\");\n  if (imageCaption) {\n    $(\"<h6>\" + imageCaption + \"</h6>\").insertBefore(this);\n  }\n});\n;'use strict';\n\nvar controller = new ScrollMagic.Controller();\n\n$('.statement-pop').each(function () {\n  var currentStatement = this;\n  var trigger = currentStatement.closest('section');\n\n  var tween_statement = TweenMax.fromTo(currentStatement, 1, {\n    transform: 'translate(0px, 60px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  }).setTween(tween_statement)\n  // .addIndicators({name: \"Pop\"})\n  .addTo(controller);\n});\n\n$('.hint').each(function () {\n  var currentHint = this;\n  var trigger = currentHint.closest('section');\n\n  var tween_hint = TweenMax.fromTo(currentHint, 1, {\n    transform: 'translate(0px, -60px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  }).setTween(tween_hint)\n  // .addIndicators({name: \"Hint\", indent: 120})\n  .addTo(controller);\n});\n\n$('.drawicon').each(function () {\n  var currentDrawicon = this;\n  var trigger = currentDrawicon.closest('section');\n\n  var tween_drawicon = TweenMax.fromTo(currentDrawicon, 1, {\n    transform: 'translate(0px, -90px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  }).setTween(tween_drawicon)\n  // .addIndicators({name: \"Hint\", indent: 120})\n  .addTo(controller);\n});\n\n$('.talk h2').each(function () {\n  var currentTalkHead = this;\n  var trigger = currentTalkHead.closest('section');\n\n  var tween_talk = TweenMax.fromTo(currentTalkHead, 1, {\n    transform: 'translate(0px, -60px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"500\"\n  }).setTween(tween_talk)\n  // .addIndicators({name: \"talk\"})\n  .addTo(controller);\n});\n\n// Img reveal\n$('.flex-wrap img').each(function () {\n  var currentImg = this;\n  var trigger = currentImg;\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"190%\"\n  })\n  //.setTween(tween_img)\n  .setClassToggle(currentImg, 'reveal')\n  // .addIndicators({name: \"talk\"})\n  .addTo(controller);\n});\n\n$('.parallax').each(function () {\n  var currentParallax = this;\n  var trigger = currentParallax.closest('section');\n\n  var tween_parallax = TweenMax.fromTo(currentParallax, 1, {\n    transform: 'translate(0px, -75px) scale(1.5)'\n  }, {\n    transform: 'translate(0px, 75px) scale(1.5)', ease: Linear.easeNone\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"200%\"\n  }).setTween(tween_parallax)\n  // .addIndicators({name: \"parallax\"})\n  .addTo(controller);\n});\n;'use strict';\n\n//Tweens\nvar tween_header = new TimelineMax().fromTo('#header .overlay', 1, {\n  opacity: 0\n}, {\n  opacity: 1\n}).fromTo('#headline', 1, {\n  transform: \"translate(0, 0)\",\n  opacity: 1\n}, {\n  transform: \"translate(0, 150px)\",\n  opacity: 0\n}, 0).fromTo('#subtitle', 1, {\n  transform: 'translate(0px, 0px)',\n  opacity: 1\n}, {\n  transform: 'translate(0px, 150px)',\n  opacity: 0\n}, 0);\n\nvar header = new ScrollMagic.Scene({\n  triggerElement: '#header',\n  triggerHook: \"onLeave\",\n  duration: \"200%\"\n}).setTween(tween_header)\n// .addIndicators({name: \"overlay\"})\n.addTo(controller);\n\n// NAV PARALLAX\n// var headerNavParallax = new ScrollMagic.Scene({\n//   triggerElement: '#main',\n//   triggerHook: \"onLeave\",\n//   offset: 100\n// })\n// .setClassToggle(\"#main-nav\", 'fixed')\n// .addIndicators({name: \"navLax\"})\n// .addTo(controller);\n//\n// var headerNavParallax = new ScrollMagic.Scene({\n//   triggerElement: '#main',\n//   triggerHook: \"onLeave\",\n//   offset: 100\n// })\n// .setClassToggle(\"#logoTag\", 'fixed')\n// .addIndicators({name: \"navLax\"})\n// .addTo(controller);\n;\"use strict\";\n\n// Tweens\n//heart\nif ($(\"body\").hasClass(\"Process\")) {\n  var tween_heart = TweenMax.staggerFromTo('#heart .columns', 2, {\n    transform: 'translate(0px, 100px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#heart\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  }).setTween(tween_heart)\n  // .addIndicators({name: \"heart\"})\n  .addTo(controller);\n\n  //services\n  var tween_services = new TimelineMax().staggerFromTo('.Process #services li:nth-child(odd)', 2, {\n    transform: 'translate(-50px, 0px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \".Process #services\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  }).setTween(tween_services)\n  // .addIndicators({name: \"services\"})\n  .addTo(controller);\n\n  var tween_services = new TimelineMax().staggerFromTo('.Process #services li:nth-child(even)', 2, {\n    transform: 'translate(50px, 0px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \".Process #services\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  }).setTween(tween_services)\n  // .addIndicators({name: \"services\"})\n  .addTo(controller);\n\n  // location\n  var tween_location = TweenMax.staggerFromTo('#location .columns', 2, {\n    transform: 'translate(0px, 100px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#location\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  }).setTween(tween_location)\n  // .addIndicators({name: \"Northwest\"})\n  .addTo(controller);\n\n  //bio pic\n  var tween_bio = TweenMax.fromTo('.bio', 1, {\n    transform: 'translate(0px, -40px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#whois\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  }).setTween(tween_bio)\n  // .addIndicators({name: \"bio\"})\n  .addTo(controller);\n\n  // Instagram\n  var tween_instagram = new TimelineMax().staggerFromTo('.sl-pop div', 2, {\n    transform: 'translate(0px, 100px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  }, 0.33);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#instagram\",\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  }).setTween(tween_instagram)\n  // .addIndicators({name: \"instagram\"})\n  .addTo(controller);\n\n  $('.type-row').each(function () {\n    var currentHint = this;\n    var trigger = currentHint.closest('article');\n\n    var tween_pull = TweenMax.fromTo(currentHint, 1, {\n      transform: 'translate(0px, 100px)'\n    }, {\n      transform: 'translate(0px, 0px)'\n    });\n\n    var scene = new ScrollMagic.Scene({\n      triggerElement: trigger,\n      triggerHook: \"onEnter\",\n      duration: \"100%\"\n    }).setTween(tween_pull)\n    // .addIndicators({name: \"Pull\", indent: 120})\n    .addTo(controller);\n  });\n}\n;\"use strict\";\n\nif ($(\"body\").hasClass(\"Showcase\")) {\n\n  // var tween_case = new TimelineMax()\n  // .to('#caseContainer', 0.5, {\n  //   z: -150\n  // })\n  // .to(\"#caseContainer\", 1,   {x: \"-33.33%\"})\t// move in to first panel\n  // .to(\"#caseContainer\", 0.5, {z: 0})\t\t\t\t// move back to origin in 3D space\n  // // animate to third panel\n  // .to(\"#caseContainer\", 0.5, {z: -150, delay: 1})\n  // .to(\"#caseContainer\", 1,   {x: \"-66.66%\"})\n  // .to(\"#caseContainer\", 0.5, {z: 0});\n  //\n  // var scene = new ScrollMagic.Scene({\n  //   triggerElement: \"#pinContainer\",\n  //   triggerHook: \"onLeave\",\n  //   duration: \"500%\"\n  // })\n  // .setPin(\"#pinContainer\")\n  // .setTween(tween_case)\n  // // .addIndicators({name: \"swipe\", indent: 120})\n  // .addTo(controller);\n}","'use strict';\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now)\n    Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n})();\n\nvar initClasses   = ['mui-enter', 'mui-leave'];\nvar activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n// Find the right \"transitionend\" event for this browser\nvar endEvent = (function() {\n  var transitions = {\n    'transition': 'transitionend',\n    'WebkitTransition': 'webkitTransitionEnd',\n    'MozTransition': 'transitionend',\n    'OTransition': 'otransitionend'\n  }\n  var elem = window.document.createElement('div');\n\n  for (var t in transitions) {\n    if (typeof elem.style[t] !== 'undefined') {\n      return transitions[t];\n    }\n  }\n\n  return null;\n})();\n\nfunction animate(isIn, element, animation, cb) {\n  element = $(element).eq(0);\n\n  if (!element.length) return;\n\n  if (endEvent === null) {\n    isIn ? element.show() : element.hide();\n    cb();\n    return;\n  }\n\n  var initClass = isIn ? initClasses[0] : initClasses[1];\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n  // Set up the animation\n  reset();\n  element.addClass(animation);\n  element.css('transition', 'none');\n  requestAnimationFrame(function() {\n    element.addClass(initClass);\n    if (isIn) element.show();\n  });\n\n  // Start the animation\n  requestAnimationFrame(function() {\n    element[0].offsetWidth;\n    element.css('transition', '');\n    element.addClass(activeClass);\n  });\n\n  // Clean up the animation when it finishes\n  element.one('transitionend', finish);\n\n  // Hides the element (for out animations), resets the element, and runs a callback\n  function finish() {\n    if (!isIn) element.hide();\n    reset();\n    if (cb) cb.apply(element);\n  }\n\n  // Resets transitions and removes motion-specific classes\n  function reset() {\n    element[0].style.transitionDuration = 0;\n    element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n  }\n}\n\nvar MotionUI = {\n  animateIn: function(element, animation, cb) {\n    animate(true, element, animation, cb);\n  },\n\n  animateOut: function(element, animation, cb) {\n    animate(false, element, animation, cb);\n  }\n}\n","function isiPhone(){\n  return (\n    (navigator.platform.indexOf(\"iPhone\") != -1) ||\n    (navigator.platform.indexOf(\"iPod\") != -1)\n  );\n}\nfunction isiPad(){\n  return (\n    (navigator.platform.indexOf(\"iPad\") != -1)\n  );\n}\nif(isiPhone()){\n  $('body').addClass('iphone');\n}\nif(isiPad()){\n  $('body').addClass('ipad');\n}\n\nif(isiPad() || isiPhone()){\n  $(\"#showcaseList li\").bind(\"touchstart click\", function(){\n    $(this).toggleClass(\"hover\");\n  });\n  $(\"#showcaseList li\").bind(\"touchend click\", function(){\n    $(this).removeClass(\"hover\");\n  });\n}\n","// FULL HEIGHT HEADER & PARALLAX FADE\n$(function() {\n  resizeDiv();\n  $('.parallax').removeClass(\"invisible\");\n});\nwindow.onresize = function(event) {\n  resizeDiv();\n};\nfunction resizeDiv() {\n  var vph = $(window).height();\n  $('.vh').css({'height': vph});\n}\n\n$( \".parallax\" ).waitForImages(function() {\n  $( this ).addClass('fade');\n});\n","window.whatInput = (function() {\n\n  'use strict';\n\n  /*\n    ---------------\n    variables\n    ---------------\n  */\n\n  // array of actively pressed keys\n  var activeKeys = [];\n\n  // cache document.body\n  var body;\n\n  // boolean: true if touch buffer timer is running\n  var buffer = false;\n\n  // the last used input type\n  var currentInput = null;\n\n  // form input types\n  var formInputs = [\n    'button',\n    'input',\n    'select',\n    'textarea'\n  ];\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  var mouseWheel = detectWheel();\n\n  // list of modifier keys commonly used with the mouse and\n  // can be safely ignored to prevent false keyboard detection\n  var ignoreMap = [\n    16, // shift\n    17, // control\n    18, // alt\n    91, // Windows key / left Apple cmd\n    93  // Windows menu / right Apple cmd\n  ];\n\n  // mapping of events to input types\n  var inputMap = {\n    'keydown': 'keyboard',\n    'keyup': 'keyboard',\n    'mousedown': 'mouse',\n    'mousemove': 'mouse',\n    'MSPointerDown': 'pointer',\n    'MSPointerMove': 'pointer',\n    'pointerdown': 'pointer',\n    'pointermove': 'pointer',\n    'touchstart': 'touch'\n  };\n\n  // add correct mouse wheel event mapping to `inputMap`\n  inputMap[detectWheel()] = 'mouse';\n\n  // array of all used input types\n  var inputTypes = [];\n\n  // mapping of key codes to a common name\n  var keyMap = {\n    9: 'tab',\n    13: 'enter',\n    16: 'shift',\n    27: 'esc',\n    32: 'space',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down'\n  };\n\n  // map of IE 10 pointer events\n  var pointerMap = {\n    2: 'touch',\n    3: 'touch', // treat pen like touch\n    4: 'mouse'\n  };\n\n  // touch buffer timer\n  var timer;\n\n\n  /*\n    ---------------\n    functions\n    ---------------\n  */\n\n  // allows events that are also triggered to be filtered out for `touchstart`\n  function eventBuffer(event) {\n    clearTimer();\n    setInput(event);\n\n    buffer = true;\n    timer = window.setTimeout(function() {\n      buffer = false;\n    }, 650);\n  }\n\n  function bufferedEvent(event) {\n    if (!buffer) setInput(event);\n  }\n\n  function unBufferedEvent(event) {\n    clearTimer();\n    setInput(event);\n  }\n\n  function clearTimer() {\n    window.clearTimeout(timer);\n  }\n\n  function setInput(event) {\n    var eventKey = key(event);\n    var value = inputMap[event.type];\n    if (value === 'pointer') value = pointerType(event);\n\n    // don't do anything if the value matches the input type already set\n    if (currentInput !== value) {\n      var activeElement = document.activeElement.nodeName.toLowerCase();\n\n      if (\n        (\n          // only if the user flag to allow input switching\n          // while interacting with form fields isn't set\n          !body.hasAttribute('data-whatinput-formswitching') &&\n\n          // support for legacy keyword\n          !body.hasAttribute('data-whatinput-formtyping') &&\n\n          // only if currentInput has a value\n          currentInput &&\n\n          formInputs.indexOf(activeElement) > -1\n        ) || (\n          // ignore modifier keys\n          ignoreMap.indexOf(eventKey) > -1\n        )\n      ) {\n        // ignore keyboard typing and do nothing\n      } else {\n        switchInput(value);\n      }\n    }\n\n    if (value === 'keyboard') logKeys(eventKey);\n  }\n\n  function switchInput(string) {\n    currentInput = string;\n    body.setAttribute('data-whatinput', currentInput);\n\n    if (inputTypes.indexOf(currentInput) === -1) inputTypes.push(currentInput);\n  }\n\n  function key(event) {\n    return (event.keyCode) ? event.keyCode : event.which;\n  }\n\n  function target(event) {\n    return event.target || event.srcElement;\n  }\n\n  function pointerType(event) {\n    if (typeof event.pointerType === 'number') {\n      return pointerMap[event.pointerType];\n    } else {\n      return (event.pointerType === 'pen') ? 'touch' : event.pointerType; // treat pen like touch\n    }\n  }\n\n  // keyboard logging\n  function logKeys(eventKey) {\n    if (activeKeys.indexOf(keyMap[eventKey]) === -1 && keyMap[eventKey]) activeKeys.push(keyMap[eventKey]);\n  }\n\n  function unLogKeys(event) {\n    var eventKey = key(event);\n    var arrayPos = activeKeys.indexOf(keyMap[eventKey]);\n\n    if (arrayPos !== -1) activeKeys.splice(arrayPos, 1);\n  }\n\n  function bindEvents() {\n    body = document.body;\n\n    // pointer events (mouse, pen, touch)\n    if (window.PointerEvent) {\n      body.addEventListener('pointerdown', bufferedEvent);\n      body.addEventListener('pointermove', bufferedEvent);\n    } else if (window.MSPointerEvent) {\n      body.addEventListener('MSPointerDown', bufferedEvent);\n      body.addEventListener('MSPointerMove', bufferedEvent);\n    } else {\n\n      // mouse events\n      body.addEventListener('mousedown', bufferedEvent);\n      body.addEventListener('mousemove', bufferedEvent);\n\n      // touch events\n      if ('ontouchstart' in window) {\n        body.addEventListener('touchstart', eventBuffer);\n      }\n    }\n\n    // mouse wheel\n    body.addEventListener(mouseWheel, bufferedEvent);\n\n    // keyboard events\n    body.addEventListener('keydown', eventBuffer);\n    body.addEventListener('keyup', eventBuffer);\n    document.addEventListener('keyup', unLogKeys);\n  }\n\n\n  /*\n    ---------------\n    utilities\n    ---------------\n  */\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  function detectWheel() {\n    return mouseWheel = 'onwheel' in document.createElement('div') ?\n      'wheel' : // Modern browsers support \"wheel\"\n\n      document.onmousewheel !== undefined ?\n        'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n  }\n\n\n  /*\n    ---------------\n    init\n\n    don't start script unless browser cuts the mustard,\n    also passes if polyfills are used\n    ---------------\n  */\n\n  if (\n    'addEventListener' in window &&\n    Array.prototype.indexOf\n  ) {\n\n    // if the dom is already ready already (script was placed at bottom of <body>)\n    if (document.body) {\n      bindEvents();\n\n    // otherwise wait for the dom to load (script was placed in the <head>)\n    } else {\n      document.addEventListener('DOMContentLoaded', bindEvents);\n    }\n  }\n\n\n  /*\n    ---------------\n    api\n    ---------------\n  */\n\n  return {\n\n    // returns string: the current input type\n    ask: function() { return currentInput; },\n\n    // returns array: currently pressed keys\n    keys: function() { return activeKeys; },\n\n    // returns array: all the detected input types\n    types: function() { return inputTypes; },\n\n    // accepts string: manually set the input type\n    set: switchInput\n  };\n\n}());\n","!function($) {\n\n\"use strict\";\n\nvar FOUNDATION_VERSION = '6.3-rc1';\n\n// Global Foundation object\n// This is attached to the window, or used as a module for AMD/Browserify\nvar Foundation = {\n  version: FOUNDATION_VERSION,\n\n  /**\n   * Stores initialized plugins.\n   */\n  _plugins: {},\n\n  /**\n   * Stores generated unique ids for plugin instances\n   */\n  _uuids: [],\n\n  /**\n   * Returns a boolean for RTL support\n   */\n  rtl: function(){\n    return $('html').attr('dir') === 'rtl';\n  },\n  /**\n   * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.\n   */\n  plugin: function(plugin, name) {\n    // Object key to use when adding to global Foundation object\n    // Examples: Foundation.Reveal, Foundation.OffCanvas\n    var className = (name || functionName(plugin));\n    // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n    // Examples: data-reveal, data-off-canvas\n    var attrName  = hyphenate(className);\n\n    // Add to the Foundation object and the plugins list (for reflowing)\n    this._plugins[attrName] = this[className] = plugin;\n  },\n  /**\n   * @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init\n   */\n  registerPlugin: function(plugin, name){\n    var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n    plugin.uuid = this.GetYoDigits(6, pluginName);\n\n    if(!plugin.$element.attr(`data-${pluginName}`)){ plugin.$element.attr(`data-${pluginName}`, plugin.uuid); }\n    if(!plugin.$element.data('zfPlugin')){ plugin.$element.data('zfPlugin', plugin); }\n          /**\n           * Fires when the plugin has initialized.\n           * @event Plugin#init\n           */\n    plugin.$element.trigger(`init.zf.${pluginName}`);\n\n    this._uuids.push(plugin.uuid);\n\n    return;\n  },\n  /**\n   * @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed\n   */\n  unregisterPlugin: function(plugin){\n    var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n    this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n    plugin.$element.removeAttr(`data-${pluginName}`).removeData('zfPlugin')\n          /**\n           * Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed\n           */\n          .trigger(`destroyed.zf.${pluginName}`);\n    for(var prop in plugin){\n      plugin[prop] = null;//clean up script to prep for garbage collection.\n    }\n    return;\n  },\n\n  /**\n   * @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.\n   */\n   reInit: function(plugins){\n     var isJQ = plugins instanceof $;\n     try{\n       if(isJQ){\n         plugins.each(function(){\n           $(this).data('zfPlugin')._init();\n         });\n       }else{\n         var type = typeof plugins,\n         _this = this,\n         fns = {\n           'object': function(plgs){\n             plgs.forEach(function(p){\n               p = hyphenate(p);\n               $('[data-'+ p +']').foundation('_init');\n             });\n           },\n           'string': function(){\n             plugins = hyphenate(plugins);\n             $('[data-'+ plugins +']').foundation('_init');\n           },\n           'undefined': function(){\n             this['object'](Object.keys(_this._plugins));\n           }\n         };\n         fns[type](plugins);\n       }\n     }catch(err){\n       console.error(err);\n     }finally{\n       return plugins;\n     }\n   },\n\n  /**\n   * returns a random base-36 uid with namespacing\n   * @function\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n   * @returns {String} - unique id\n   */\n  GetYoDigits: function(length, namespace){\n    length = length || 6;\n    return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1) + (namespace ? `-${namespace}` : '');\n  },\n  /**\n   * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n   */\n  reflow: function(elem, plugins) {\n\n    // If plugins is undefined, just grab everything\n    if (typeof plugins === 'undefined') {\n      plugins = Object.keys(this._plugins);\n    }\n    // If plugins is a string, convert it to an array with one item\n    else if (typeof plugins === 'string') {\n      plugins = [plugins];\n    }\n\n    var _this = this;\n\n    // Iterate through each plugin\n    $.each(plugins, function(i, name) {\n      // Get the current plugin\n      var plugin = _this._plugins[name];\n\n      // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n      var $elem = $(elem).find('[data-'+name+']').addBack('[data-'+name+']');\n\n      // For each plugin found, initialize it\n      $elem.each(function() {\n        var $el = $(this),\n            opts = {};\n        // Don't double-dip on plugins\n        if ($el.data('zfPlugin')) {\n          console.warn(\"Tried to initialize \"+name+\" on an element that already has a Foundation plugin.\");\n          return;\n        }\n\n        if($el.attr('data-options')){\n          var thing = $el.attr('data-options').split(';').forEach(function(e, i){\n            var opt = e.split(':').map(function(el){ return el.trim(); });\n            if(opt[0]) opts[opt[0]] = parseValue(opt[1]);\n          });\n        }\n        try{\n          $el.data('zfPlugin', new plugin($(this), opts));\n        }catch(er){\n          console.error(er);\n        }finally{\n          return;\n        }\n      });\n    });\n  },\n  getFnName: functionName,\n  transitionend: function($elem){\n    var transitions = {\n      'transition': 'transitionend',\n      'WebkitTransition': 'webkitTransitionEnd',\n      'MozTransition': 'transitionend',\n      'OTransition': 'otransitionend'\n    };\n    var elem = document.createElement('div'),\n        end;\n\n    for (var t in transitions){\n      if (typeof elem.style[t] !== 'undefined'){\n        end = transitions[t];\n      }\n    }\n    if(end){\n      return end;\n    }else{\n      end = setTimeout(function(){\n        $elem.triggerHandler('transitionend', [$elem]);\n      }, 1);\n      return 'transitionend';\n    }\n  }\n};\n\nFoundation.util = {\n  /**\n   * Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function\n   */\n  throttle: function (func, delay) {\n    var timer = null;\n\n    return function () {\n      var context = this, args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          func.apply(context, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  }\n};\n\n// TODO: consider not making this a jQuery function\n// TODO: need way to reflow vs. re-initialize\n/**\n * The Foundation jQuery method.\n * @param {String|Array} method - An action to perform on the current jQuery object.\n */\nvar foundation = function(method) {\n  var type = typeof method,\n      $meta = $('meta.foundation-mq'),\n      $noJS = $('.no-js');\n\n  if(!$meta.length){\n    $('<meta class=\"foundation-mq\">').appendTo(document.head);\n  }\n  if($noJS.length){\n    $noJS.removeClass('no-js');\n  }\n\n  if(type === 'undefined'){//needs to initialize the Foundation object, or an individual plugin.\n    Foundation.MediaQuery._init();\n    Foundation.reflow(this);\n  }else if(type === 'string'){//an individual method to invoke on a plugin or group of plugins\n    var args = Array.prototype.slice.call(arguments, 1);//collect all the arguments, if necessary\n    var plugClass = this.data('zfPlugin');//determine the class of plugin\n\n    if(plugClass !== undefined && plugClass[method] !== undefined){//make sure both the class and method exist\n      if(this.length === 1){//if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n      }else{\n        this.each(function(i, el){//otherwise loop through the jQuery collection and invoke the method on each\n          plugClass[method].apply($(el).data('zfPlugin'), args);\n        });\n      }\n    }else{//error for no class or no method\n      throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n    }\n  }else{//error for invalid argument type\n    throw new TypeError(`We're sorry, ${type} is not a valid parameter. You must use a string representing the method you wish to invoke.`);\n  }\n  return this;\n};\n\nwindow.Foundation = Foundation;\n$.fn.foundation = foundation;\n\n// Polyfill for requestAnimationFrame\n(function() {\n  if (!Date.now || !window.Date.now)\n    window.Date.now = Date.now = function() { return new Date().getTime(); };\n\n  var vendors = ['webkit', 'moz'];\n  for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n      window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                 || window[vp+'CancelRequestAnimationFrame']);\n  }\n  if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)\n    || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n    var lastTime = 0;\n    window.requestAnimationFrame = function(callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function() { callback(lastTime = nextTime); },\n                          nextTime - now);\n    };\n    window.cancelAnimationFrame = clearTimeout;\n  }\n  /**\n   * Polyfill for performance.now, required by rAF\n   */\n  if(!window.performance || !window.performance.now){\n    window.performance = {\n      start: Date.now(),\n      now: function(){ return Date.now() - this.start; }\n    };\n  }\n})();\nif (!Function.prototype.bind) {\n  Function.prototype.bind = function(oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n  };\n}\n// Polyfill to get the name of a function in IE9\nfunction functionName(fn) {\n  if (Function.prototype.name === undefined) {\n    var funcNameRegex = /function\\s([^(]{1,})\\(/;\n    var results = (funcNameRegex).exec((fn).toString());\n    return (results && results.length > 1) ? results[1].trim() : \"\";\n  }\n  else if (fn.prototype === undefined) {\n    return fn.constructor.name;\n  }\n  else {\n    return fn.prototype.constructor.name;\n  }\n}\nfunction parseValue(str){\n  if ('true' === str) return true;\n  else if ('false' === str) return false;\n  else if (!isNaN(str * 1)) return parseFloat(str);\n  return str;\n}\n// Convert PascalCase to kebab-case\n// Thank you: http://stackoverflow.com/a/8955580\nfunction hyphenate(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\nFoundation.Box = {\n  ImNotTouchingYou: ImNotTouchingYou,\n  GetDimensions: GetDimensions,\n  GetOffsets: GetOffsets\n}\n\n/**\n * Compares the dimensions of an element to a container and determines collision events with container.\n * @function\n * @param {jQuery} element - jQuery object to test for collisions.\n * @param {jQuery} parent - jQuery object to use as bounding container.\n * @param {Boolean} lrOnly - set to true to check left and right values only.\n * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n * @default if no parent object passed, detects collisions with `window`.\n * @returns {Boolean} - true if collision free, false if a collision in any direction.\n */\nfunction ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n  var eleDims = GetDimensions(element),\n      top, bottom, left, right;\n\n  if (parent) {\n    var parDims = GetDimensions(parent);\n\n    bottom = (eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top);\n    top    = (eleDims.offset.top >= parDims.offset.top);\n    left   = (eleDims.offset.left >= parDims.offset.left);\n    right  = (eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left);\n  }\n  else {\n    bottom = (eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top);\n    top    = (eleDims.offset.top >= eleDims.windowDims.offset.top);\n    left   = (eleDims.offset.left >= eleDims.windowDims.offset.left);\n    right  = (eleDims.offset.left + eleDims.width <= eleDims.windowDims.width);\n  }\n\n  var allDirs = [bottom, top, left, right];\n\n  if (lrOnly) {\n    return left === right === true;\n  }\n\n  if (tbOnly) {\n    return top === bottom === true;\n  }\n\n  return allDirs.indexOf(false) === -1;\n};\n\n/**\n * Uses native methods to return an object of dimension values.\n * @function\n * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n * @returns {Object} - nested object of integer pixel values\n * TODO - if element is window, return only those values.\n */\nfunction GetDimensions(elem, test){\n  elem = elem.length ? elem[0] : elem;\n\n  if (elem === window || elem === document) {\n    throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n  }\n\n  var rect = elem.getBoundingClientRect(),\n      parRect = elem.parentNode.getBoundingClientRect(),\n      winRect = document.body.getBoundingClientRect(),\n      winY = window.pageYOffset,\n      winX = window.pageXOffset;\n\n  return {\n    width: rect.width,\n    height: rect.height,\n    offset: {\n      top: rect.top + winY,\n      left: rect.left + winX\n    },\n    parentDims: {\n      width: parRect.width,\n      height: parRect.height,\n      offset: {\n        top: parRect.top + winY,\n        left: parRect.left + winX\n      }\n    },\n    windowDims: {\n      width: winRect.width,\n      height: winRect.height,\n      offset: {\n        top: winY,\n        left: winX\n      }\n    }\n  }\n}\n\n/**\n * Returns an object of top and left integer pixel values for dynamically rendered elements,\n * such as: Tooltip, Reveal, and Dropdown\n * @function\n * @param {jQuery} element - jQuery object for the element being positioned.\n * @param {jQuery} anchor - jQuery object for the element's anchor point.\n * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n * TODO alter/rewrite to work with `em` values as well/instead of pixels\n */\nfunction GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n  var $eleDims = GetDimensions(element),\n      $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n  switch (position) {\n    case 'top':\n      return {\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left),\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n      }\n      break;\n    case 'left':\n      return {\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n        top: $anchorDims.offset.top\n      }\n      break;\n    case 'right':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n        top: $anchorDims.offset.top\n      }\n      break;\n    case 'center top':\n      return {\n        left: ($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2),\n        top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n      }\n      break;\n    case 'center bottom':\n      return {\n        left: isOverflow ? hOffset : (($anchorDims.offset.left + ($anchorDims.width / 2)) - ($eleDims.width / 2)),\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      }\n      break;\n    case 'center left':\n      return {\n        left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'center right':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n        top: ($anchorDims.offset.top + ($anchorDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'center':\n      return {\n        left: ($eleDims.windowDims.offset.left + ($eleDims.windowDims.width / 2)) - ($eleDims.width / 2),\n        top: ($eleDims.windowDims.offset.top + ($eleDims.windowDims.height / 2)) - ($eleDims.height / 2)\n      }\n      break;\n    case 'reveal':\n      return {\n        left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n        top: $eleDims.windowDims.offset.top + vOffset\n      }\n    case 'reveal full':\n      return {\n        left: $eleDims.windowDims.offset.left,\n        top: $eleDims.windowDims.offset.top\n      }\n      break;\n    case 'left bottom':\n      return {\n        left: $anchorDims.offset.left,\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      };\n      break;\n    case 'right bottom':\n      return {\n        left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      };\n      break;\n    default:\n      return {\n        left: (Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left + hOffset),\n        top: $anchorDims.offset.top + $anchorDims.height + vOffset\n      }\n  }\n}\n\n}(jQuery);\n","/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function($) {\n\nconst keyCodes = {\n  9: 'TAB',\n  13: 'ENTER',\n  27: 'ESCAPE',\n  32: 'SPACE',\n  37: 'ARROW_LEFT',\n  38: 'ARROW_UP',\n  39: 'ARROW_RIGHT',\n  40: 'ARROW_DOWN'\n}\n\nvar commands = {}\n\nvar Keyboard = {\n  keys: getKeyCodes(keyCodes),\n\n  /**\n   * Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed\n   */\n  parseKey(event) {\n    var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n\n    // Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events\n    key = key.replace(/\\W+/, '');\n\n    if (event.shiftKey) key = `SHIFT_${key}`;\n    if (event.ctrlKey) key = `CTRL_${key}`;\n    if (event.altKey) key = `ALT_${key}`;\n\n    // Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)\n    key = key.replace(/_$/, '');\n\n    return key;\n  },\n\n  /**\n   * Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed\n   */\n  handleKey(event, component, functions) {\n    var commandList = commands[component],\n      keyCode = this.parseKey(event),\n      cmds,\n      command,\n      fn;\n\n    if (!commandList) return console.warn('Component not defined!');\n\n    if (typeof commandList.ltr === 'undefined') { // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n    } else { // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n        if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);\n\n        else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n    }\n    command = cmds[keyCode];\n\n    fn = functions[command];\n    if (fn && typeof fn === 'function') { // execute function  if exists\n      var returnValue = fn.apply();\n      if (functions.handled || typeof functions.handled === 'function') { // execute function when event was handled\n          functions.handled(returnValue);\n      }\n    } else {\n      if (functions.unhandled || typeof functions.unhandled === 'function') { // execute function when event was not handled\n          functions.unhandled();\n      }\n    }\n  },\n\n  /**\n   * Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`\n   */\n  findFocusable($element) {\n    if(!$element) {return false; }\n    return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function() {\n      if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) { return false; } //only have visible elements and those that have a tabindex greater or equal 0\n      return true;\n    });\n  },\n\n  /**\n   * Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName\n   */\n\n  register(componentName, cmds) {\n    commands[componentName] = cmds;\n  },  \n\n  /**\n   * Traps the focus in the given element.\n   * @param  {jQuery} $element  jQuery object to trap the foucs into.\n   */\n  trapFocus($element) {\n    var $focusable = Foundation.Keyboard.findFocusable($element),\n        $firstFocusable = $focusable.eq(0),\n        $lastFocusable = $focusable.eq(-1);\n\n    $element.on('keydown.zf.trapfocus', function(event) {\n      if (event.target === $lastFocusable[0] && Foundation.Keyboard.parseKey(event) === 'TAB') {\n        event.preventDefault();\n        $firstFocusable.focus();\n      }\n      else if (event.target === $firstFocusable[0] && Foundation.Keyboard.parseKey(event) === 'SHIFT_TAB') {\n        event.preventDefault();\n        $lastFocusable.focus();\n      }\n    });\n  },\n  /**\n   * Releases the trapped focus from the given element.\n   * @param  {jQuery} $element  jQuery object to release the focus for.\n   */\n  releaseFocus($element) {\n    $element.off('keydown.zf.trapfocus');\n  }\n}\n\n/*\n * Constants for easier comparing.\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n */\nfunction getKeyCodes(kcs) {\n  var k = {};\n  for (var kc in kcs) k[kcs[kc]] = kcs[kc];\n  return k;\n}\n\nFoundation.Keyboard = Keyboard;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n// Default set of media queries\nconst defaultQueries = {\n  'default' : 'only screen',\n  landscape : 'only screen and (orientation: landscape)',\n  portrait : 'only screen and (orientation: portrait)',\n  retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),' +\n    'only screen and (min--moz-device-pixel-ratio: 2),' +\n    'only screen and (-o-min-device-pixel-ratio: 2/1),' +\n    'only screen and (min-device-pixel-ratio: 2),' +\n    'only screen and (min-resolution: 192dpi),' +\n    'only screen and (min-resolution: 2dppx)'\n};\n\nvar MediaQuery = {\n  queries: [],\n\n  current: '',\n\n  /**\n   * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private\n   */\n  _init() {\n    var self = this;\n    var extractedStyles = $('.foundation-mq').css('font-family');\n    var namedQueries;\n\n    namedQueries = parseStyleToObject(extractedStyles);\n\n    for (var key in namedQueries) {\n      if(namedQueries.hasOwnProperty(key)) {\n        self.queries.push({\n          name: key,\n          value: `only screen and (min-width: ${namedQueries[key]})`\n        });\n      }\n    }\n\n    this.current = this._getCurrentSize();\n\n    this._watcher();\n  },\n\n  /**\n   * Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n   */\n  atLeast(size) {\n    var query = this.get(size);\n\n    if (query) {\n      return window.matchMedia(query).matches;\n    }\n\n    return false;\n  },\n\n  /**\n   * Checks if the screen matches to a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check, either 'small only' or 'small'. Omitting 'only' falls back to using atLeast() method.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it does not.\n   */\n  is(size) {\n    size = size.trim().split(' ');\n    if(size.length > 1 && size[1] === 'only') {\n      if(size[0] === this._getCurrentSize()) return true;\n    } else {\n      return this.atLeast(size[0]);\n    }\n    return false;\n  },\n\n  /**\n   * Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n   */\n  get(size) {\n    for (var i in this.queries) {\n      if(this.queries.hasOwnProperty(i)) {\n        var query = this.queries[i];\n        if (size === query.name) return query.value;\n      }\n    }\n\n    return null;\n  },\n\n  /**\n   * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.\n   */\n  _getCurrentSize() {\n    var matched;\n\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n\n      if (window.matchMedia(query.value).matches) {\n        matched = query;\n      }\n    }\n\n    if (typeof matched === 'object') {\n      return matched.name;\n    } else {\n      return matched;\n    }\n  },\n\n  /**\n   * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private\n   */\n  _watcher() {\n    $(window).on('resize.zf.mediaquery', () => {\n      var newSize = this._getCurrentSize(), currentSize = this.current;\n\n      if (newSize !== currentSize) {\n        // Change the current media query\n        this.current = newSize;\n\n        // Broadcast the media query change on the window\n        $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n      }\n    });\n  }\n};\n\nFoundation.MediaQuery = MediaQuery;\n\n// matchMedia() polyfill - Test a CSS media type/query in JS.\n// Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\nwindow.matchMedia || (window.matchMedia = function() {\n  'use strict';\n\n  // For browsers that support matchMedium api such as IE 9 and webkit\n  var styleMedia = (window.styleMedia || window.media);\n\n  // For those that don't support matchMedium\n  if (!styleMedia) {\n    var style   = document.createElement('style'),\n    script      = document.getElementsByTagName('script')[0],\n    info        = null;\n\n    style.type  = 'text/css';\n    style.id    = 'matchmediajs-test';\n\n    script && script.parentNode && script.parentNode.insertBefore(style, script);\n\n    // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n    info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n    styleMedia = {\n      matchMedium(media) {\n        var text = `@media ${media}{ #matchmediajs-test { width: 1px; } }`;\n\n        // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n        if (style.styleSheet) {\n          style.styleSheet.cssText = text;\n        } else {\n          style.textContent = text;\n        }\n\n        // Test if media query is true or false\n        return info.width === '1px';\n      }\n    }\n  }\n\n  return function(media) {\n    return {\n      matches: styleMedia.matchMedium(media || 'all'),\n      media: media || 'all'\n    };\n  }\n}());\n\n// Thank you: https://github.com/sindresorhus/query-string\nfunction parseStyleToObject(str) {\n  var styleObject = {};\n\n  if (typeof str !== 'string') {\n    return styleObject;\n  }\n\n  str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n  if (!str) {\n    return styleObject;\n  }\n\n  styleObject = str.split('&').reduce(function(ret, param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = parts[0];\n    var val = parts[1];\n    key = decodeURIComponent(key);\n\n    // missing `=` should be `null`:\n    // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n    val = val === undefined ? null : decodeURIComponent(val);\n\n    if (!ret.hasOwnProperty(key)) {\n      ret[key] = val;\n    } else if (Array.isArray(ret[key])) {\n      ret[key].push(val);\n    } else {\n      ret[key] = [ret[key], val];\n    }\n    return ret;\n  }, {});\n\n  return styleObject;\n}\n\nFoundation.MediaQuery = MediaQuery;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Motion module.\n * @module foundation.motion\n */\n\nconst initClasses   = ['mui-enter', 'mui-leave'];\nconst activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\nconst Motion = {\n  animateIn: function(element, animation, cb) {\n    animate(true, element, animation, cb);\n  },\n\n  animateOut: function(element, animation, cb) {\n    animate(false, element, animation, cb);\n  }\n}\n\nfunction Move(duration, elem, fn){\n  var anim, prog, start = null;\n  // console.log('called');\n\n  if (duration === 0) {\n    fn.apply(elem);\n    elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n    return;\n  }\n\n  function move(ts){\n    if(!start) start = ts;\n    // console.log(start, ts);\n    prog = ts - start;\n    fn.apply(elem);\n\n    if(prog < duration){ anim = window.requestAnimationFrame(move, elem); }\n    else{\n      window.cancelAnimationFrame(anim);\n      elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n    }\n  }\n  anim = window.requestAnimationFrame(move);\n}\n\n/**\n * Animates an element in or out using a CSS transition class.\n * @function\n * @private\n * @param {Boolean} isIn - Defines if the animation is in or out.\n * @param {Object} element - jQuery or HTML object to animate.\n * @param {String} animation - CSS class to use.\n * @param {Function} cb - Callback to run when animation is finished.\n */\nfunction animate(isIn, element, animation, cb) {\n  element = $(element).eq(0);\n\n  if (!element.length) return;\n\n  var initClass = isIn ? initClasses[0] : initClasses[1];\n  var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n  // Set up the animation\n  reset();\n\n  element\n    .addClass(animation)\n    .css('transition', 'none');\n\n  requestAnimationFrame(() => {\n    element.addClass(initClass);\n    if (isIn) element.show();\n  });\n\n  // Start the animation\n  requestAnimationFrame(() => {\n    element[0].offsetWidth;\n    element\n      .css('transition', '')\n      .addClass(activeClass);\n  });\n\n  // Clean up the animation when it finishes\n  element.one(Foundation.transitionend(element), finish);\n\n  // Hides the element (for out animations), resets the element, and runs a callback\n  function finish() {\n    if (!isIn) element.hide();\n    reset();\n    if (cb) cb.apply(element);\n  }\n\n  // Resets transitions and removes motion-specific classes\n  function reset() {\n    element[0].style.transitionDuration = 0;\n    element.removeClass(`${initClass} ${activeClass} ${animation}`);\n  }\n}\n\nFoundation.Move = Move;\nFoundation.Motion = Motion;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\nconst Nest = {\n  Feather(menu, type = 'zf') {\n    menu.attr('role', 'menubar');\n\n    var items = menu.find('li').attr({'role': 'menuitem'}),\n        subMenuClass = `is-${type}-submenu`,\n        subItemClass = `${subMenuClass}-item`,\n        hasSubClass = `is-${type}-submenu-parent`;\n\n    items.each(function() {\n      var $item = $(this),\n          $sub = $item.children('ul');\n\n      if ($sub.length) {\n        $item\n          .addClass(hasSubClass)\n          .attr({\n            'aria-haspopup': true,\n            'aria-label': $item.children('a:first').text()\n          });\n          // Note:  Drilldowns behave differently in how they hide, and so need\n          // additional attributes.  We should look if this possibly over-generalized\n          // utility (Nest) is appropriate when we rework menus in 6.4\n          if(type === 'drilldown') {\n            $item.attr({'aria-expanded': false});\n          }\n\n        $sub\n          .addClass(`submenu ${subMenuClass}`)\n          .attr({\n            'data-submenu': '',\n            'role': 'menu'\n          });\n        if(type === 'drilldown') {\n          $sub.attr({'aria-hidden': true});\n        }\n      }\n\n      if ($item.parent('[data-submenu]').length) {\n        $item.addClass(`is-submenu-item ${subItemClass}`);\n      }\n    });\n\n    return;\n  },\n\n  Burn(menu, type) {\n    var //items = menu.find('li'),\n        subMenuClass = `is-${type}-submenu`,\n        subItemClass = `${subMenuClass}-item`,\n        hasSubClass = `is-${type}-submenu-parent`;\n\n    menu\n      .find('>li, .menu, .menu > li')\n      .removeClass(`${subMenuClass} ${subItemClass} ${hasSubClass} is-submenu-item submenu is-active`)\n      .removeAttr('data-submenu').css('display', '');\n\n    // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n    //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n    //           .removeAttr('data-submenu'));\n    // items.each(function(){\n    //   var $item = $(this),\n    //       $sub = $item.children('ul');\n    //   if($item.parent('[data-submenu]').length){\n    //     $item.removeClass('is-submenu-item ' + subItemClass);\n    //   }\n    //   if($sub.length){\n    //     $item.removeClass('has-submenu');\n    //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n    //   }\n    // });\n  }\n}\n\nFoundation.Nest = Nest;\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\nfunction Timer(elem, options, cb) {\n  var _this = this,\n      duration = options.duration,//options is an object for easily adding features later.\n      nameSpace = Object.keys(elem.data())[0] || 'timer',\n      remain = -1,\n      start,\n      timer;\n\n  this.isPaused = false;\n\n  this.restart = function() {\n    remain = -1;\n    clearTimeout(timer);\n    this.start();\n  }\n\n  this.start = function() {\n    this.isPaused = false;\n    // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n    clearTimeout(timer);\n    remain = remain <= 0 ? duration : remain;\n    elem.data('paused', false);\n    start = Date.now();\n    timer = setTimeout(function(){\n      if(options.infinite){\n        _this.restart();//rerun the timer.\n      }\n      if (cb && typeof cb === 'function') { cb(); }\n    }, remain);\n    elem.trigger(`timerstart.zf.${nameSpace}`);\n  }\n\n  this.pause = function() {\n    this.isPaused = true;\n    //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n    clearTimeout(timer);\n    elem.data('paused', true);\n    var end = Date.now();\n    remain = remain - (end - start);\n    elem.trigger(`timerpaused.zf.${nameSpace}`);\n  }\n}\n\n/**\n * Runs a callback function when images are fully loaded.\n * @param {Object} images - Image(s) to check if loaded.\n * @param {Func} callback - Function to execute when image is fully loaded.\n */\nfunction onImagesLoaded(images, callback){\n  var self = this,\n      unloaded = images.length;\n\n  if (unloaded === 0) {\n    callback();\n  }\n\n  images.each(function() {\n    // Check if image is loaded\n    if (this.complete || (this.readyState === 4) || (this.readyState === 'complete')) {\n      singleImageLoaded();\n    }\n    // Force load the image\n    else {\n      $(this).one('load', function() {\n        singleImageLoaded();\n      });\n    }\n  });\n\n  function singleImageLoaded() {\n    unloaded--;\n    if (unloaded === 0) {\n      callback();\n    }\n  }\n}\n\nFoundation.Timer = Timer;\nFoundation.onImagesLoaded = onImagesLoaded;\n\n}(jQuery);\n","//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function($) {\n\n  $.spotSwipe = {\n    version: '1.0.0',\n    enabled: 'ontouchstart' in document.documentElement,\n    preventDefault: false,\n    moveThreshold: 75,\n    timeThreshold: 200\n  };\n\n  var   startPosX,\n        startPosY,\n        startTime,\n        elapsedTime,\n        isMoving = false;\n\n  function onTouchEnd() {\n    //  alert(this);\n    this.removeEventListener('touchmove', onTouchMove);\n    this.removeEventListener('touchend', onTouchEnd);\n    isMoving = false;\n  }\n\n  function onTouchMove(e) {\n    if ($.spotSwipe.preventDefault) { e.preventDefault(); }\n    if(isMoving) {\n      var x = e.touches[0].pageX;\n      var y = e.touches[0].pageY;\n      var dx = startPosX - x;\n      var dy = startPosY - y;\n      var dir;\n      elapsedTime = new Date().getTime() - startTime;\n      if(Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n        dir = dx > 0 ? 'left' : 'right';\n      }\n      // else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n      //   dir = dy > 0 ? 'down' : 'up';\n      // }\n      if(dir) {\n        e.preventDefault();\n        onTouchEnd.call(this);\n        $(this).trigger('swipe', dir).trigger(`swipe${dir}`);\n      }\n    }\n  }\n\n  function onTouchStart(e) {\n    if (e.touches.length == 1) {\n      startPosX = e.touches[0].pageX;\n      startPosY = e.touches[0].pageY;\n      isMoving = true;\n      startTime = new Date().getTime();\n      this.addEventListener('touchmove', onTouchMove, false);\n      this.addEventListener('touchend', onTouchEnd, false);\n    }\n  }\n\n  function init() {\n    this.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n  }\n\n  function teardown() {\n    this.removeEventListener('touchstart', onTouchStart);\n  }\n\n  $.event.special.swipe = { setup: init };\n\n  $.each(['left', 'up', 'down', 'right'], function () {\n    $.event.special[`swipe${this}`] = { setup: function(){\n      $(this).on('swipe', $.noop);\n    } };\n  });\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function($){\n  $.fn.addTouch = function(){\n    this.each(function(i,el){\n      $(el).bind('touchstart touchmove touchend touchcancel',function(){\n        //we pass the original event object because the jQuery event\n        //object is normalized to w3c specs and does not provide the TouchList\n        handleTouch(event);\n      });\n    });\n\n    var handleTouch = function(event){\n      var touches = event.changedTouches,\n          first = touches[0],\n          eventTypes = {\n            touchstart: 'mousedown',\n            touchmove: 'mousemove',\n            touchend: 'mouseup'\n          },\n          type = eventTypes[event.type],\n          simulatedEvent\n        ;\n\n      if('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n        simulatedEvent = new window.MouseEvent(type, {\n          'bubbles': true,\n          'cancelable': true,\n          'screenX': first.screenX,\n          'screenY': first.screenY,\n          'clientX': first.clientX,\n          'clientY': first.clientY\n        });\n      } else {\n        simulatedEvent = document.createEvent('MouseEvent');\n        simulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0/*left*/, null);\n      }\n      first.target.dispatchEvent(simulatedEvent);\n    };\n  };\n}(jQuery);\n\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n","'use strict';\n\n!function($) {\n\nconst MutationObserver = (function () {\n  var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n  for (var i=0; i < prefixes.length; i++) {\n    if (`${prefixes[i]}MutationObserver` in window) {\n      return window[`${prefixes[i]}MutationObserver`];\n    }\n  }\n  return false;\n}());\n\nconst triggers = (el, type) => {\n  el.data(type).split(' ').forEach(id => {\n    $(`#${id}`)[ type === 'close' ? 'trigger' : 'triggerHandler'](`${type}.zf.trigger`, [el]);\n  });\n};\n// Elements with [data-open] will reveal a plugin that supports it when clicked.\n$(document).on('click.zf.trigger', '[data-open]', function() {\n  triggers($(this), 'open');\n});\n\n// Elements with [data-close] will close a plugin that supports it when clicked.\n// If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n$(document).on('click.zf.trigger', '[data-close]', function() {\n  let id = $(this).data('close');\n  if (id) {\n    triggers($(this), 'close');\n  }\n  else {\n    $(this).trigger('close.zf.trigger');\n  }\n});\n\n// Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n$(document).on('click.zf.trigger', '[data-toggle]', function() {\n  let id = $(this).data('toggle');\n  if (id) {\n    triggers($(this), 'toggle');\n  } else {\n    $(this).trigger('toggle.zf.trigger');\n  }\n});\n\n// Elements with [data-closable] will respond to close.zf.trigger events.\n$(document).on('close.zf.trigger', '[data-closable]', function(e){\n  e.stopPropagation();\n  let animation = $(this).data('closable');\n\n  if(animation !== ''){\n    Foundation.Motion.animateOut($(this), animation, function() {\n      $(this).trigger('closed.zf');\n    });\n  }else{\n    $(this).fadeOut().trigger('closed.zf');\n  }\n});\n\n$(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function() {\n  let id = $(this).data('toggle-focus');\n  $(`#${id}`).triggerHandler('toggle.zf.trigger', [$(this)]);\n});\n\n/**\n* Fires once after all other scripts have loaded\n* @function\n* @private\n*/\n$(window).on('load', () => {\n  checkListeners();\n});\n\nfunction checkListeners() {\n  eventsListener();\n  resizeListener();\n  scrollListener();\n  mutateListener();\n  closemeListener();\n}\n\n//******** only fires this function once on load, if there's something to watch ********\nfunction closemeListener(pluginName) {\n  var yetiBoxes = $('[data-yeti-box]'),\n      plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n  if(pluginName){\n    if(typeof pluginName === 'string'){\n      plugNames.push(pluginName);\n    }else if(typeof pluginName === 'object' && typeof pluginName[0] === 'string'){\n      plugNames.concat(pluginName);\n    }else{\n      console.error('Plugin names must be strings');\n    }\n  }\n  if(yetiBoxes.length){\n    let listeners = plugNames.map((name) => {\n      return `closeme.zf.${name}`;\n    }).join(' ');\n\n    $(window).off(listeners).on(listeners, function(e, pluginId){\n      let plugin = e.namespace.split('.')[0];\n      let plugins = $(`[data-${plugin}]`).not(`[data-yeti-box=\"${pluginId}\"]`);\n\n      plugins.each(function(){\n        let _this = $(this);\n\n        _this.triggerHandler('close.zf.trigger', [_this]);\n      });\n    });\n  }\n}\n\nfunction resizeListener(debounce){\n  let timer,\n      $nodes = $('[data-resize]');\n  if($nodes.length){\n    $(window).off('resize.zf.trigger')\n    .on('resize.zf.trigger', function(e) {\n      if (timer) { clearTimeout(timer); }\n\n      timer = setTimeout(function(){\n\n        if(!MutationObserver){//fallback for IE 9\n          $nodes.each(function(){\n            $(this).triggerHandler('resizeme.zf.trigger');\n          });\n        }\n        //trigger all listening elements and signal a resize event\n        $nodes.attr('data-events', \"resize\");\n      }, debounce || 10);//default time to emit resize event\n    });\n  }\n}\n\nfunction scrollListener(debounce){\n  let timer,\n      $nodes = $('[data-scroll]');\n  if($nodes.length){\n    $(window).off('scroll.zf.trigger')\n    .on('scroll.zf.trigger', function(e){\n      if(timer){ clearTimeout(timer); }\n\n      timer = setTimeout(function(){\n\n        if(!MutationObserver){//fallback for IE 9\n          $nodes.each(function(){\n            $(this).triggerHandler('scrollme.zf.trigger');\n          });\n        }\n        //trigger all listening elements and signal a scroll event\n        $nodes.attr('data-events', \"scroll\");\n      }, debounce || 10);//default time to emit scroll event\n    });\n  }\n}\n\nfunction mutateListener(debounce) {\n    let $nodes = $('[data-mutate]');\n    if ($nodes.length && MutationObserver){\n\t\t\t//trigger all listening elements and signal a mutate event\n      //no IE 9 or 10\n\t\t\t$nodes.each(function () {\n\t\t\t  $(this).triggerHandler('mutateme.zf.trigger');\n\t\t\t});\n    }\n }\n\nfunction eventsListener() {\n  if(!MutationObserver){ return false; }\n  let nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n  //element callback\n  var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n\n\t  //trigger the event handler for the element depending on type\n      switch (mutationRecordsList[0].type) {\n\n        case \"attributes\":\n          if ($target.attr(\"data-events\") === \"scroll\" && mutationRecordsList[0].attributeName === \"data-events\") {\n\t\t  \t$target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n\t\t  }\n\t\t  if ($target.attr(\"data-events\") === \"resize\" && mutationRecordsList[0].attributeName === \"data-events\") {\n\t\t  \t$target.triggerHandler('resizeme.zf.trigger', [$target]);\n\t\t   }\n\t\t  if (mutationRecordsList[0].attributeName === \"style\") {\n\t\t\t  $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n\t\t\t  $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n\t\t  }\n\t\t  break;\n\n        case \"childList\":\n\t\t  $target.closest(\"[data-mutate]\").attr(\"data-events\",\"mutate\");\n\t\t  $target.closest(\"[data-mutate]\").triggerHandler('mutateme.zf.trigger', [$target.closest(\"[data-mutate]\")]);\n          break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, or mutation add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: true, characterData: false, subtree: true, attributeFilter: [\"data-events\", \"style\"] });\n      }\n    }\n  }\n\n// ------------------------------------\n\n// [PH]\n// Foundation.CheckWatchers = checkWatchers;\nFoundation.IHearYou = checkListeners;\n// Foundation.ISeeYou = scrollListener;\n// Foundation.IFeelYou = closemeListener;\n\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n","'use strict';\n\n!function($) {\n\n/**\n * Abide module.\n * @module foundation.abide\n */\n\nclass Abide {\n  /**\n   * Creates a new instance of Abide.\n   * @class\n   * @fires Abide#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options = {}) {\n    this.$element = element;\n    this.options  = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Abide');\n  }\n\n  /**\n   * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n   * @private\n   */\n  _init() {\n    this.$inputs = this.$element.find('input, textarea, select');\n\n    this._events();\n  }\n\n  /**\n   * Initializes events for Abide.\n   * @private\n   */\n  _events() {\n    this.$element.off('.abide')\n      .on('reset.zf.abide', () => {\n        this.resetForm();\n      })\n      .on('submit.zf.abide', () => {\n        return this.validateForm();\n      });\n\n    if (this.options.validateOn === 'fieldChange') {\n      this.$inputs\n        .off('change.zf.abide')\n        .on('change.zf.abide', (e) => {\n          this.validateInput($(e.target));\n        });\n    }\n\n    if (this.options.liveValidate) {\n      this.$inputs\n        .off('input.zf.abide')\n        .on('input.zf.abide', (e) => {\n          this.validateInput($(e.target));\n        });\n    }\n\n    if (this.options.validateOnBlur) {\n      this.$inputs\n        .off('blur.zf.abide')\n        .on('blur.zf.abide', (e) => {\n          this.validateInput($(e.target));\n        });\n    }\n  }\n\n  /**\n   * Calls necessary functions to update Abide upon DOM change\n   * @private\n   */\n  _reflow() {\n    this._init();\n  }\n\n  /**\n   * Checks whether or not a form element has the required attribute and if it's checked or not\n   * @param {Object} element - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n   */\n  requiredCheck($el) {\n    if (!$el.attr('required')) return true;\n\n    var isGood = true;\n\n    switch ($el[0].type) {\n      case 'checkbox':\n        isGood = $el[0].checked;\n        break;\n\n      case 'select':\n      case 'select-one':\n      case 'select-multiple':\n        var opt = $el.find('option:selected');\n        if (!opt.length || !opt.val()) isGood = false;\n        break;\n\n      default:\n        if(!$el.val() || !$el.val().length) isGood = false;\n    }\n\n    return isGood;\n  }\n\n  /**\n   * Based on $el, get the first element with selector in this order:\n   * 1. The element's direct sibling('s).\n   * 3. The element's parent's children.\n   *\n   * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n   *\n   * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n   * @returns {Object} jQuery object with the selector.\n   */\n  findFormError($el) {\n    var $error = $el.siblings(this.options.formErrorSelector);\n\n    if (!$error.length) {\n      $error = $el.parent().find(this.options.formErrorSelector);\n    }\n\n    return $error;\n  }\n\n  /**\n   * Get the first element in this order:\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\n   * 3. The `.closest()` <label>\n   *\n   * @param {Object} $el - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n   */\n  findLabel($el) {\n    var id = $el[0].id;\n    var $label = this.$element.find(`label[for=\"${id}\"]`);\n\n    if (!$label.length) {\n      return $el.closest('label');\n    }\n\n    return $label;\n  }\n\n  /**\n   * Get the set of labels associated with a set of radio els in this order\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\n   * 3. The `.closest()` <label>\n   *\n   * @param {Object} $el - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n   */\n  findRadioLabels($els) {\n    var labels = $els.map((i, el) => {\n      var id = el.id;\n      var $label = this.$element.find(`label[for=\"${id}\"]`);\n\n      if (!$label.length) {\n        $label = $(el).closest('label');\n      }\n      return $label[0];\n    });\n\n    return $(labels);\n  }\n\n  /**\n   * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n   * @param {Object} $el - jQuery object to add the class to\n   */\n  addErrorClasses($el) {\n    var $label = this.findLabel($el);\n    var $formError = this.findFormError($el);\n\n    if ($label.length) {\n      $label.addClass(this.options.labelErrorClass);\n    }\n\n    if ($formError.length) {\n      $formError.addClass(this.options.formErrorClass);\n    }\n\n    $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n  }\n\n  /**\n   * Remove CSS error classes etc from an entire radio button group\n   * @param {String} groupName - A string that specifies the name of a radio button group\n   *\n   */\n\n  removeRadioErrorClasses(groupName) {\n    var $els = this.$element.find(`:radio[name=\"${groupName}\"]`);\n    var $labels = this.findRadioLabels($els);\n    var $formErrors = this.findFormError($els);\n\n    if ($labels.length) {\n      $labels.removeClass(this.options.labelErrorClass);\n    }\n\n    if ($formErrors.length) {\n      $formErrors.removeClass(this.options.formErrorClass);\n    }\n\n    $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n\n  }\n\n  /**\n   * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n   * @param {Object} $el - jQuery object to remove the class from\n   */\n  removeErrorClasses($el) {\n    // radios need to clear all of the els\n    if($el[0].type == 'radio') {\n      return this.removeRadioErrorClasses($el.attr('name'));\n    }\n\n    var $label = this.findLabel($el);\n    var $formError = this.findFormError($el);\n\n    if ($label.length) {\n      $label.removeClass(this.options.labelErrorClass);\n    }\n\n    if ($formError.length) {\n      $formError.removeClass(this.options.formErrorClass);\n    }\n\n    $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n  }\n\n  /**\n   * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n   * @fires Abide#invalid\n   * @fires Abide#valid\n   * @param {Object} element - jQuery object to validate, should be an HTML input\n   * @returns {Boolean} goodToGo - If the input is valid or not.\n   */\n  validateInput($el) {\n    var clearRequire = this.requiredCheck($el),\n        validated = false,\n        customValidator = true,\n        validator = $el.attr('data-validator'),\n        equalTo = true;\n\n    // don't validate ignored inputs or hidden inputs\n    if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\n      return true;\n    }\n\n    switch ($el[0].type) {\n      case 'radio':\n        validated = this.validateRadio($el.attr('name'));\n        break;\n\n      case 'checkbox':\n        validated = clearRequire;\n        break;\n\n      case 'select':\n      case 'select-one':\n      case 'select-multiple':\n        validated = clearRequire;\n        break;\n\n      default:\n        validated = this.validateText($el);\n    }\n\n    if (validator) {\n      customValidator = this.matchValidation($el, validator, $el.attr('required'));\n    }\n\n    if ($el.attr('data-equalto')) {\n      equalTo = this.options.validators.equalTo($el);\n    }\n\n\n    var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n    var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n    if (goodToGo) {\n      // Re-validate inputs that depend on this one with equalto\n      const dependentElements = this.$element.find(`[data-equalto=\"${$el.attr('id')}\"]`);\n      if (dependentElements.length) {\n        let _this = this;\n        dependentElements.each(function() {\n          if ($(this).val()) {\n            _this.validateInput($(this));\n          }\n        });\n      }\n    }\n\n    this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n    /**\n     * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n     * Trigger includes the DOM element of the input.\n     * @event Abide#valid\n     * @event Abide#invalid\n     */\n    $el.trigger(message, [$el]);\n\n    return goodToGo;\n  }\n\n  /**\n   * Goes through a form and if there are any invalid inputs, it will display the form error element\n   * @returns {Boolean} noError - true if no errors were detected...\n   * @fires Abide#formvalid\n   * @fires Abide#forminvalid\n   */\n  validateForm() {\n    var acc = [];\n    var _this = this;\n\n    this.$inputs.each(function() {\n      acc.push(_this.validateInput($(this)));\n    });\n\n    var noError = acc.indexOf(false) === -1;\n\n    this.$element.find('[data-abide-error]').css('display', (noError ? 'none' : 'block'));\n\n    /**\n     * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n     * Trigger includes the element of the form.\n     * @event Abide#formvalid\n     * @event Abide#forminvalid\n     */\n    this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n    return noError;\n  }\n\n  /**\n   * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n   * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n   * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n   * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n   */\n  validateText($el, pattern) {\n    // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n    pattern = (pattern || $el.attr('pattern') || $el.attr('type'));\n    var inputText = $el.val();\n    var valid = false;\n\n    if (inputText.length) {\n      // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n      if (this.options.patterns.hasOwnProperty(pattern)) {\n        valid = this.options.patterns[pattern].test(inputText);\n      }\n      // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n      else if (pattern !== $el.attr('type')) {\n        valid = new RegExp(pattern).test(inputText);\n      }\n      else {\n        valid = true;\n      }\n    }\n    // An empty field is valid if it's not required\n    else if (!$el.prop('required')) {\n      valid = true;\n    }\n\n    return valid;\n   }\n\n  /**\n   * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\n   * @param {String} groupName - A string that specifies the name of a radio button group\n   * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n   */\n  validateRadio(groupName) {\n    // If at least one radio in the group has the `required` attribute, the group is considered required\n    // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n    var $group = this.$element.find(`:radio[name=\"${groupName}\"]`);\n    var valid = false, required = false;\n\n    // For the group to be required, at least one radio needs to be required\n    $group.each((i, e) => {\n      if ($(e).attr('required')) {\n        required = true;\n      }\n    });\n    if(!required) valid=true;\n\n    if (!valid) {\n      // For the group to be valid, at least one radio needs to be checked\n      $group.each((i, e) => {\n        if ($(e).prop('checked')) {\n          valid = true;\n        }\n      });\n    };\n\n    return valid;\n  }\n\n  /**\n   * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n   * @param {Object} $el - jQuery input element.\n   * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n   * @param {Boolean} required - self explanatory?\n   * @returns {Boolean} - true if validations passed.\n   */\n  matchValidation($el, validators, required) {\n    required = required ? true : false;\n\n    var clear = validators.split(' ').map((v) => {\n      return this.options.validators[v]($el, required, $el.parent());\n    });\n    return clear.indexOf(false) === -1;\n  }\n\n  /**\n   * Resets form inputs and styles\n   * @fires Abide#formreset\n   */\n  resetForm() {\n    var $form = this.$element,\n        opts = this.options;\n\n    $(`.${opts.labelErrorClass}`, $form).not('small').removeClass(opts.labelErrorClass);\n    $(`.${opts.inputErrorClass}`, $form).not('small').removeClass(opts.inputErrorClass);\n    $(`${opts.formErrorSelector}.${opts.formErrorClass}`).removeClass(opts.formErrorClass);\n    $form.find('[data-abide-error]').css('display', 'none');\n    $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n    $(':input:radio', $form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');\n    $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked',false).removeAttr('data-invalid');\n    /**\n     * Fires when the form has been reset.\n     * @event Abide#formreset\n     */\n    $form.trigger('formreset.zf.abide', [$form]);\n  }\n\n  /**\n   * Destroys an instance of Abide.\n   * Removes error styles and classes from elements, without resetting their values.\n   */\n  destroy() {\n    var _this = this;\n    this.$element\n      .off('.abide')\n      .find('[data-abide-error]')\n        .css('display', 'none');\n\n    this.$inputs\n      .off('.abide')\n      .each(function() {\n        _this.removeErrorClasses($(this));\n      });\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nAbide.defaults = {\n  /**\n   * The default event to validate inputs. Checkboxes and radios validate immediately.\n   * Remove or change this value for manual validation.\n   * @option\n   * @example 'fieldChange'\n   */\n  validateOn: 'fieldChange',\n\n  /**\n   * Class to be applied to input labels on failed validation.\n   * @option\n   * @example 'is-invalid-label'\n   */\n  labelErrorClass: 'is-invalid-label',\n\n  /**\n   * Class to be applied to inputs on failed validation.\n   * @option\n   * @example 'is-invalid-input'\n   */\n  inputErrorClass: 'is-invalid-input',\n\n  /**\n   * Class selector to use to target Form Errors for show/hide.\n   * @option\n   * @example '.form-error'\n   */\n  formErrorSelector: '.form-error',\n\n  /**\n   * Class added to Form Errors on failed validation.\n   * @option\n   * @example 'is-visible'\n   */\n  formErrorClass: 'is-visible',\n\n  /**\n   * Set to true to validate text inputs on any value change.\n   * @option\n   * @example false\n   */\n  liveValidate: false,\n\n  /**\n   * Set to true to validate inputs on blur.\n   * @option\n   * @example false\n   */\n  validateOnBlur: false,\n\n  patterns: {\n    alpha : /^[a-zA-Z]+$/,\n    alpha_numeric : /^[a-zA-Z0-9]+$/,\n    integer : /^[-+]?\\d+$/,\n    number : /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n    // amex, visa, diners\n    card : /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n    cvv : /^([0-9]){3,4}$/,\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n    email : /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n    url : /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n    // abc.de\n    domain : /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n    datetime : /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n    // YYYY-MM-DD\n    date : /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n    // HH:MM:SS\n    time : /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n    dateISO : /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n    // MM/DD/YYYY\n    month_day_year : /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n    // DD/MM/YYYY\n    day_month_year : /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n    // #FFF or #FFFFFF\n    color : /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n  },\n\n  /**\n   * Optional validation functions to be used. `equalTo` being the only default included function.\n   * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n   * el : The jQuery element to validate.\n   * required : Boolean value of the required attribute be present or not.\n   * parent : The direct parent of the input.\n   * @option\n   */\n  validators: {\n    equalTo: function (el, required, parent) {\n      return $(`#${el.attr('data-equalto')}`).val() === el.val();\n    }\n  }\n}\n\n// Window exports\nFoundation.plugin(Abide, 'Abide');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Accordion module.\n * @module foundation.accordion\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n */\n\nclass Accordion {\n  /**\n   * Creates a new instance of an accordion.\n   * @class\n   * @fires Accordion#init\n   * @param {jQuery} element - jQuery object to make into an accordion.\n   * @param {Object} options - a plain object with settings to override the default options.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Accordion');\n    Foundation.Keyboard.register('Accordion', {\n      'ENTER': 'toggle',\n      'SPACE': 'toggle',\n      'ARROW_DOWN': 'next',\n      'ARROW_UP': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the accordion by animating the preset active pane(s).\n   * @private\n   */\n  _init() {\n    this.$element.attr('role', 'tablist');\n    this.$tabs = this.$element.children('[data-accordion-item]');\n\n    this.$tabs.each(function(idx, el) {\n      var $el = $(el),\n          $content = $el.children('[data-tab-content]'),\n          id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n          linkId = el.id || `${id}-label`;\n\n      $el.find('a:first').attr({\n        'aria-controls': id,\n        'role': 'tab',\n        'id': linkId,\n        'aria-expanded': false,\n        'aria-selected': false\n      });\n\n      $content.attr({'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id});\n    });\n    var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n    if($initActive.length){\n      this.down($initActive, true);\n    }\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the accordion.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$tabs.each(function() {\n      var $elem = $(this);\n      var $tabContent = $elem.children('[data-tab-content]');\n      if ($tabContent.length) {\n        $elem.children('a').off('click.zf.accordion keydown.zf.accordion')\n               .on('click.zf.accordion', function(e) {\n          e.preventDefault();\n          _this.toggle($tabContent);\n        }).on('keydown.zf.accordion', function(e){\n          Foundation.Keyboard.handleKey(e, 'Accordion', {\n            toggle: function() {\n              _this.toggle($tabContent);\n            },\n            next: function() {\n              var $a = $elem.next().find('a').focus();\n              if (!_this.options.multiExpand) {\n                $a.trigger('click.zf.accordion')\n              }\n            },\n            previous: function() {\n              var $a = $elem.prev().find('a').focus();\n              if (!_this.options.multiExpand) {\n                $a.trigger('click.zf.accordion')\n              }\n            },\n            handled: function() {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Toggles the selected content pane's open/close state.\n   * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\n   * @function\n   */\n  toggle($target) {\n    if($target.parent().hasClass('is-active')) {\n      this.up($target);\n    } else {\n      this.down($target);\n    }\n  }\n\n  /**\n   * Opens the accordion tab defined by `$target`.\n   * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\n   * @param {Boolean} firstTime - flag to determine if reflow should happen.\n   * @fires Accordion#down\n   * @function\n   */\n  down($target, firstTime) {\n    $target\n      .attr('aria-hidden', false)\n      .parent('[data-tab-content]')\n      .addBack()\n      .parent().addClass('is-active');\n\n    if (!this.options.multiExpand && !firstTime) {\n      var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n      if ($currentActive.length) {\n        this.up($currentActive.not($target));\n      }\n    }\n\n    $target.slideDown(this.options.slideSpeed, () => {\n      /**\n       * Fires when the tab is done opening.\n       * @event Accordion#down\n       */\n      this.$element.trigger('down.zf.accordion', [$target]);\n    });\n\n    $(`#${$target.attr('aria-labelledby')}`).attr({\n      'aria-expanded': true,\n      'aria-selected': true\n    });\n  }\n\n  /**\n   * Closes the tab defined by `$target`.\n   * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\n   * @fires Accordion#up\n   * @function\n   */\n  up($target) {\n    var $aunts = $target.parent().siblings(),\n        _this = this;\n\n    if((!this.options.allowAllClosed && !$aunts.hasClass('is-active')) || !$target.parent().hasClass('is-active')) {\n      return;\n    }\n\n    // Foundation.Move(this.options.slideSpeed, $target, function(){\n      $target.slideUp(_this.options.slideSpeed, function () {\n        /**\n         * Fires when the tab is done collapsing up.\n         * @event Accordion#up\n         */\n        _this.$element.trigger('up.zf.accordion', [$target]);\n      });\n    // });\n\n    $target.attr('aria-hidden', true)\n           .parent().removeClass('is-active');\n\n    $(`#${$target.attr('aria-labelledby')}`).attr({\n     'aria-expanded': false,\n     'aria-selected': false\n   });\n  }\n\n  /**\n   * Destroys an instance of an accordion.\n   * @fires Accordion#destroyed\n   * @function\n   */\n  destroy() {\n    this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n    this.$element.find('a').off('.zf.accordion');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nAccordion.defaults = {\n  /**\n   * Amount of time to animate the opening of an accordion pane.\n   * @option\n   * @example 250\n   */\n  slideSpeed: 250,\n  /**\n   * Allow the accordion to have multiple open panes.\n   * @option\n   * @example false\n   */\n  multiExpand: false,\n  /**\n   * Allow the accordion to close all panes.\n   * @option\n   * @example false\n   */\n  allowAllClosed: false\n};\n\n// Window exports\nFoundation.plugin(Accordion, 'Accordion');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * AccordionMenu module.\n * @module foundation.accordionMenu\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.nest\n */\n\nclass AccordionMenu {\n  /**\n   * Creates a new instance of an accordion menu.\n   * @class\n   * @fires AccordionMenu#init\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'accordion');\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'AccordionMenu');\n    Foundation.Keyboard.register('AccordionMenu', {\n      'ENTER': 'toggle',\n      'SPACE': 'toggle',\n      'ARROW_RIGHT': 'open',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'close',\n      'ESCAPE': 'closeAll'\n    });\n  }\n\n\n\n  /**\n   * Initializes the accordion menu by hiding all nested menus.\n   * @private\n   */\n  _init() {\n    this.$element.find('[data-submenu]').not('.is-active').slideUp(0);//.find('a').css('padding-left', '1rem');\n    this.$element.attr({\n      'role': 'menu',\n      'aria-multiselectable': this.options.multiOpen\n    });\n\n    this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n    this.$menuLinks.each(function(){\n      var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n          $elem = $(this),\n          $sub = $elem.children('[data-submenu]'),\n          subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n          isActive = $sub.hasClass('is-active');\n      $elem.attr({\n        'aria-controls': subId,\n        'aria-expanded': isActive,\n        'role': 'menuitem',\n        'id': linkId\n      });\n      $sub.attr({\n        'aria-labelledby': linkId,\n        'aria-hidden': !isActive,\n        'role': 'menu',\n        'id': subId\n      });\n    });\n    var initPanes = this.$element.find('.is-active');\n    if(initPanes.length){\n      var _this = this;\n      initPanes.each(function(){\n        _this.down($(this));\n      });\n    }\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the menu.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$element.find('li').each(function() {\n      var $submenu = $(this).children('[data-submenu]');\n\n      if ($submenu.length) {\n        $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function(e) {\n          e.preventDefault();\n\n          _this.toggle($submenu);\n        });\n      }\n    }).on('keydown.zf.accordionmenu', function(e){\n      var $element = $(this),\n          $elements = $element.parent('ul').children('li'),\n          $prevElement,\n          $nextElement,\n          $target = $element.children('[data-submenu]');\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(Math.max(0, i-1)).find('a').first();\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1)).find('a').first();\n\n          if ($(this).children('[data-submenu]:visible').length) { // has open sub menu\n            $nextElement = $element.find('li:first-child').find('a').first();\n          }\n          if ($(this).is(':first-child')) { // is first element of sub menu\n            $prevElement = $element.parents('li').first().find('a').first();\n          } else if ($prevElement.parents('li').first().children('[data-submenu]:visible').length) { // if previous element has open sub menu\n            $prevElement = $prevElement.parents('li').find('li:last-child').find('a').first();\n          }\n          if ($(this).is(':last-child')) { // is last element of sub menu\n            $nextElement = $element.parents('li').first().next('li').find('a').first();\n          }\n\n          return;\n        }\n      });\n\n      Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n        open: function() {\n          if ($target.is(':hidden')) {\n            _this.down($target);\n            $target.find('li').first().find('a').first().focus();\n          }\n        },\n        close: function() {\n          if ($target.length && !$target.is(':hidden')) { // close active sub of this item\n            _this.up($target);\n          } else if ($element.parent('[data-submenu]').length) { // close currently open sub\n            _this.up($element.parent('[data-submenu]'));\n            $element.parents('li').first().find('a').first().focus();\n          }\n        },\n        up: function() {\n          $prevElement.focus();\n          return true;\n        },\n        down: function() {\n          $nextElement.focus();\n          return true;\n        },\n        toggle: function() {\n          if ($element.children('[data-submenu]').length) {\n            _this.toggle($element.children('[data-submenu]'));\n          }\n        },\n        closeAll: function() {\n          _this.hideAll();\n        },\n        handled: function(preventDefault) {\n          if (preventDefault) {\n            e.preventDefault();\n          }\n          e.stopImmediatePropagation();\n        }\n      });\n    });//.attr('tabindex', 0);\n  }\n\n  /**\n   * Closes all panes of the menu.\n   * @function\n   */\n  hideAll() {\n    this.up(this.$element.find('[data-submenu]'));\n  }\n\n  /**\n   * Opens all panes of the menu.\n   * @function\n   */\n  showAll() {\n    this.down(this.$element.find('[data-submenu]'));\n  }\n\n  /**\n   * Toggles the open/close state of a submenu.\n   * @function\n   * @param {jQuery} $target - the submenu to toggle\n   */\n  toggle($target){\n    if(!$target.is(':animated')) {\n      if (!$target.is(':hidden')) {\n        this.up($target);\n      }\n      else {\n        this.down($target);\n      }\n    }\n  }\n\n  /**\n   * Opens the sub-menu defined by `$target`.\n   * @param {jQuery} $target - Sub-menu to open.\n   * @fires AccordionMenu#down\n   */\n  down($target) {\n    var _this = this;\n\n    if(!this.options.multiOpen) {\n      this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n    }\n\n    $target.addClass('is-active').attr({'aria-hidden': false})\n      .parent('.is-accordion-submenu-parent').attr({'aria-expanded': true});\n\n      //Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done opening.\n           * @event AccordionMenu#down\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n      //});\n  }\n\n  /**\n   * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n   * @param {jQuery} $target - Sub-menu to close.\n   * @fires AccordionMenu#up\n   */\n  up($target) {\n    var _this = this;\n    //Foundation.Move(this.options.slideSpeed, $target, function(){\n      $target.slideUp(_this.options.slideSpeed, function () {\n        /**\n         * Fires when the menu is done collapsing up.\n         * @event AccordionMenu#up\n         */\n        _this.$element.trigger('up.zf.accordionMenu', [$target]);\n      });\n    //});\n\n    var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n    $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n  }\n\n  /**\n   * Destroys an instance of accordion menu.\n   * @fires AccordionMenu#destroyed\n   */\n  destroy() {\n    this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n    this.$element.find('a').off('click.zf.accordionMenu');\n\n    Foundation.Nest.Burn(this.$element, 'accordion');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nAccordionMenu.defaults = {\n  /**\n   * Amount of time to animate the opening of a submenu in ms.\n   * @option\n   * @example 250\n   */\n  slideSpeed: 250,\n  /**\n   * Allow the menu to have multiple open panes.\n   * @option\n   * @example true\n   */\n  multiOpen: true\n};\n\n// Window exports\nFoundation.plugin(AccordionMenu, 'AccordionMenu');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Drilldown module.\n * @module foundation.drilldown\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.nest\n */\n\nclass Drilldown {\n  /**\n   * Creates a new instance of a drilldown menu.\n   * @class\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'drilldown');\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Drilldown');\n    Foundation.Keyboard.register('Drilldown', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close',\n      'TAB': 'down',\n      'SHIFT_TAB': 'up'\n    });\n  }\n\n  /**\n   * Initializes the drilldown by creating jQuery collections of elements\n   * @private\n   */\n  _init() {\n    this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\n    this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\n    this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\n    this.$element.attr('data-mutate', (this.$element.attr('data-drilldown') || Foundation.GetYoDigits(6, 'drilldown')));\n\n    this._prepareMenu();\n    this._registerEvents();\n\n    this._keyboardEvents();\n  }\n\n  /**\n   * prepares drilldown menu by setting attributes to links and elements\n   * sets a min height to prevent content jumping\n   * wraps the element if not already wrapped\n   * @private\n   * @function\n   */\n  _prepareMenu() {\n    var _this = this;\n    // if(!this.options.holdOpen){\n    //   this._menuLinkEvents();\n    // }\n    this.$submenuAnchors.each(function(){\n      var $link = $(this);\n      var $sub = $link.parent();\n      if(_this.options.parentLink){\n        $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n      }\n      $link.data('savedHref', $link.attr('href')).removeAttr('href').attr('tabindex', 0);\n      $link.children('[data-submenu]')\n          .attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n      _this._events($link);\n    });\n    this.$submenus.each(function(){\n      var $menu = $(this),\n          $back = $menu.find('.js-drilldown-back');\n      if(!$back.length){\n        switch (_this.options.backButtonPosition) {\n          case \"bottom\":\n            $menu.append(_this.options.backButton);\n            break;\n          case \"top\":\n            $menu.prepend(_this.options.backButton);\n            break;\n          default:\n            console.error(\"Unsupported backButtonPosition value '\" + _this.options.backButtonPosition + \"'\");\n        }\n      }\n      _this._back($menu);\n    });\n    if(!this.$element.parent().hasClass('is-drilldown')){\n      this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\n      if(this.options.animateHeight) this.$wrapper.addClass('animate-height');\n      this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\n    }\n  }\n\n  _resize() {\n    this.$wrapper.css({'max-width': 'none', 'min-height': 'none'});\n    // _getMaxDims has side effects (boo) but calling it should update all other necessary heights & widths\n    this.$wrapper.css(this._getMaxDims());\n  }\n\n  /**\n   * Adds event handlers to elements in the menu.\n   * @function\n   * @private\n   * @param {jQuery} $elem - the current menu item to add handlers to.\n   */\n  _events($elem) {\n    var _this = this;\n\n    $elem.off('click.zf.drilldown')\n    .on('click.zf.drilldown', function(e){\n      if($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')){\n        e.stopImmediatePropagation();\n        e.preventDefault();\n      }\n\n      // if(e.target !== e.currentTarget.firstElementChild){\n      //   return false;\n      // }\n      _this._show($elem.parent('li'));\n\n      if(_this.options.closeOnClick){\n        var $body = $('body');\n        $body.off('.zf.drilldown').on('click.zf.drilldown', function(e){\n          if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) { return; }\n          e.preventDefault();\n          _this._hideAll();\n          $body.off('.zf.drilldown');\n        });\n      }\n    });\n\t  this.$element.on('mutateme.zf.trigger', this._resize.bind(this));\n  }\n\n  /**\n   * Adds event handlers to the menu element.\n   * @function\n   * @private\n   */\n  _registerEvents() {\n    if(this.options.scrollTop){\n      this._bindHandler = this._scrollTop.bind(this);\n      this.$element.on('open.zf.drilldown hide.zf.drilldown closed.zf.drilldown',this._bindHandler);\n    }\n  }\n\n  /**\n   * Scroll to Top of Element or data-scroll-top-element\n   * @function\n   * @fires Drilldown#scrollme\n   */\n  _scrollTop() {\n    var _this = this;\n    var $scrollTopElement = _this.options.scrollTopElement!=''?$(_this.options.scrollTopElement):_this.$element,\n        scrollPos = parseInt($scrollTopElement.offset().top+_this.options.scrollTopOffset);\n    $('html, body').stop(true).animate({ scrollTop: scrollPos }, _this.options.animationDuration, _this.options.animationEasing,function(){\n      /**\n        * Fires after the menu has scrolled\n        * @event Drilldown#scrollme\n        */\n      if(this===$('html')[0])_this.$element.trigger('scrollme.zf.drilldown');\n    });\n  }\n\n  /**\n   * Adds keydown event listener to `li`'s in the menu.\n   * @private\n   */\n  _keyboardEvents() {\n    var _this = this;\n\n    this.$menuItems.add(this.$element.find('.js-drilldown-back > a')).on('keydown.zf.drilldown', function(e){\n\n      var $element = $(this),\n          $elements = $element.parent('li').parent('ul').children('li').children('a'),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(Math.max(0, i-1));\n          $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          return;\n        }\n      });\n\n      Foundation.Keyboard.handleKey(e, 'Drilldown', {\n        next: function() {\n          if ($element.is(_this.$submenuAnchors)) {\n            _this._show($element.parent('li'));\n            $element.parent('li').one(Foundation.transitionend($element), function(){\n              $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n            });\n            return true;\n          }\n        },\n        previous: function() {\n          _this._hide($element.parent('li').parent('ul'));\n          $element.parent('li').parent('ul').one(Foundation.transitionend($element), function(){\n            setTimeout(function() {\n              $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n            }, 1);\n          });\n          return true;\n        },\n        up: function() {\n          $prevElement.focus();\n          return true;\n        },\n        down: function() {\n          $nextElement.focus();\n          return true;\n        },\n        close: function() {\n          _this._back();\n          //_this.$menuItems.first().focus(); // focus to first element\n        },\n        open: function() {\n          if (!$element.is(_this.$menuItems)) { // not menu item means back button\n            _this._hide($element.parent('li').parent('ul'));\n            $element.parent('li').parent('ul').one(Foundation.transitionend($element), function(){\n              setTimeout(function() {\n                $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n              }, 1);\n            });\n            return true;\n          } else if ($element.is(_this.$submenuAnchors)) {\n            _this._show($element.parent('li'));\n            $element.parent('li').one(Foundation.transitionend($element), function(){\n              $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n            });\n            return true;\n          }\n        },\n        handled: function(preventDefault) {\n          if (preventDefault) {\n            e.preventDefault();\n          }\n          e.stopImmediatePropagation();\n        }\n      });\n    }); // end keyboardAccess\n  }\n\n  /**\n   * Closes all open elements, and returns to root menu.\n   * @function\n   * @fires Drilldown#closed\n   */\n  _hideAll() {\n    var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n    if(this.options.autoHeight) this.$wrapper.css({height:$elem.parent().closest('ul').data('calcHeight')});\n    $elem.one(Foundation.transitionend($elem), function(e){\n      $elem.removeClass('is-active is-closing');\n    });\n        /**\n         * Fires when the menu is fully closed.\n         * @event Drilldown#closed\n         */\n    this.$element.trigger('closed.zf.drilldown');\n  }\n\n  /**\n   * Adds event listener for each `back` button, and closes open menus.\n   * @function\n   * @fires Drilldown#back\n   * @param {jQuery} $elem - the current sub-menu to add `back` event.\n   */\n  _back($elem) {\n    var _this = this;\n    $elem.off('click.zf.drilldown');\n    $elem.children('.js-drilldown-back')\n      .on('click.zf.drilldown', function(e){\n        e.stopImmediatePropagation();\n        // console.log('mouseup on back');\n        _this._hide($elem);\n\n        // If there is a parent submenu, call show\n        let parentSubMenu = $elem.parent('li').parent('ul').parent('li');\n        if (parentSubMenu.length) {\n          _this._show(parentSubMenu);\n        }\n      });\n  }\n\n  /**\n   * Adds event listener to menu items w/o submenus to close open menus on click.\n   * @function\n   * @private\n   */\n  _menuLinkEvents() {\n    var _this = this;\n    this.$menuItems.not('.is-drilldown-submenu-parent')\n        .off('click.zf.drilldown')\n        .on('click.zf.drilldown', function(e){\n          // e.stopImmediatePropagation();\n          setTimeout(function(){\n            _this._hideAll();\n          }, 0);\n      });\n  }\n\n  /**\n   * Opens a submenu.\n   * @function\n   * @fires Drilldown#open\n   * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\n   */\n  _show($elem) {\n    if(this.options.autoHeight) this.$wrapper.css({height:$elem.children('[data-submenu]').data('calcHeight')});\n    $elem.attr('aria-expanded', true);\n    $elem.children('[data-submenu]').addClass('is-active').attr('aria-hidden', false);\n    /**\n     * Fires when the submenu has opened.\n     * @event Drilldown#open\n     */\n    this.$element.trigger('open.zf.drilldown', [$elem]);\n  };\n\n  /**\n   * Hides a submenu\n   * @function\n   * @fires Drilldown#hide\n   * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\n   */\n  _hide($elem) {\n    if(this.options.autoHeight) this.$wrapper.css({height:$elem.parent().closest('ul').data('calcHeight')});\n    var _this = this;\n    $elem.parent('li').attr('aria-expanded', false);\n    $elem.attr('aria-hidden', true).addClass('is-closing')\n    $elem.addClass('is-closing')\n         .one(Foundation.transitionend($elem), function(){\n           $elem.removeClass('is-active is-closing');\n           $elem.blur();\n         });\n    /**\n     * Fires when the submenu has closed.\n     * @event Drilldown#hide\n     */\n    $elem.trigger('hide.zf.drilldown', [$elem]);\n  }\n\n  /**\n   * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n   * Prevents content jumping.\n   * @function\n   * @private\n   */\n  _getMaxDims() {\n    var max = 0, result = {}, oneHeight = this.$menuItems[0].getBoundingClientRect().height,_this = this;\n    this.$submenus.add(this.$element).each(function(){\n      var numOfElems = $(this).children('li').length;\n      max = numOfElems > max ? numOfElems : max;\n      if(_this.options.autoHeight) {\n        $(this).data('calcHeight',numOfElems * oneHeight);\n        if (!$(this).hasClass('is-drilldown-submenu')) result['height'] = numOfElems * oneHeight;\n      }\n    });\n\n    if(!this.options.autoHeight) result['min-height'] = `${max * oneHeight}px`;\n\n    result['max-width'] = `${this.$element[0].getBoundingClientRect().width}px`;\n\n    return result;\n  }\n\n  /**\n   * Destroys the Drilldown Menu\n   * @function\n   */\n  destroy() {\n    if(this.options.scrollTop) this.$element.off('.zf.drilldown',this._bindHandler);\n    this._hideAll();\n\t  this.$element.off('mutateme.zf.trigger');\n    Foundation.Nest.Burn(this.$element, 'drilldown');\n    this.$element.unwrap()\n                 .find('.js-drilldown-back, .is-submenu-parent-item').remove()\n                 .end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu')\n                 .end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\n    this.$submenuAnchors.each(function() {\n      $(this).off('.zf.drilldown');\n    });\n    this.$element.find('a').each(function(){\n      var $link = $(this);\n      $link.removeAttr('tabindex');\n      if($link.data('savedHref')){\n        $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n      }else{ return; }\n    });\n    Foundation.unregisterPlugin(this);\n  };\n}\n\nDrilldown.defaults = {\n  /**\n   * Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n   * @option\n   * @example '<\\li><\\a>Back<\\/a><\\/li>'\n   */\n  backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\n  /**\n   * Position the back button either at the top or bottom of drilldown submenus.\n   * @option\n   * @example bottom\n   */\n  backButtonPosition: 'top',\n  /**\n   * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n   * @option\n   * @example '<\\div class=\"is-drilldown\"><\\/div>'\n   */\n  wrapper: '<div></div>',\n  /**\n   * Adds the parent link to the submenu.\n   * @option\n   * @example false\n   */\n  parentLink: false,\n  /**\n   * Allow the menu to return to root list on body click.\n   * @option\n   * @example false\n   */\n  closeOnClick: false,\n  /**\n   * Allow the menu to auto adjust height.\n   * @option\n   * @example false\n   */\n  autoHeight: false,\n  /**\n   * Animate the auto adjust height.\n   * @option\n   * @example false\n   */\n  animateHeight: false,\n  /**\n   * Scroll to the top of the menu after opening a submenu or navigating back using the menu back button\n   * @option\n   * @example false\n   */\n  scrollTop: false,\n  /**\n   * String jquery selector (for example 'body') of element to take offset().top from, if empty string the drilldown menu offset().top is taken\n   * @option\n   * @example ''\n   */\n  scrollTopElement: '',\n  /**\n   * ScrollTop offset\n   * @option\n   * @example 100\n   */\n  scrollTopOffset: 0,\n  /**\n   * Scroll animation duration\n   * @option\n   * @example 500\n   */\n  animationDuration: 500,\n  /**\n   * Scroll animation easing\n   * @option\n   * @example 'swing'\n   */\n  animationEasing: 'swing'\n  // holdOpen: false\n};\n\n// Window exports\nFoundation.plugin(Drilldown, 'Drilldown');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Dropdown module.\n * @module foundation.dropdown\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n */\n\nclass Dropdown {\n  /**\n   * Creates a new instance of a dropdown.\n   * @class\n   * @param {jQuery} element - jQuery object to make into a dropdown.\n   *        Object should be of the dropdown panel, rather than its anchor.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Dropdown');\n    Foundation.Keyboard.register('Dropdown', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n   * @function\n   * @private\n   */\n  _init() {\n    var $id = this.$element.attr('id');\n\n    this.$anchor = $(`[data-toggle=\"${$id}\"]`).length ? $(`[data-toggle=\"${$id}\"]`) : $(`[data-open=\"${$id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': $id,\n      'data-is-focus': false,\n      'data-yeti-box': $id,\n      'aria-haspopup': true,\n      'aria-expanded': false\n\n    });\n\n    if(this.options.parentClass){\n      this.$parent = this.$element.parents('.' + this.options.parentClass);\n    }else{\n      this.$parent = null;\n    }\n    this.options.positionClass = this.getPositionClass();\n    this.counter = 4;\n    this.usedPositions = [];\n    this.$element.attr({\n      'aria-hidden': 'true',\n      'data-yeti-box': $id,\n      'data-resize': $id,\n      'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n    });\n    this._events();\n  }\n\n  /**\n   * Helper function to determine current orientation of dropdown pane.\n   * @function\n   * @returns {String} position - string value of a position class.\n   */\n  getPositionClass() {\n    var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n    var horizontalPosition = /float-(\\S+)/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n    var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n\n    return position;\n  }\n\n  /**\n   * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n   * @function\n   * @private\n   * @param {String} position - position class to remove.\n   */\n  _reposition(position) {\n    this.usedPositions.push(position ? position : 'bottom');\n    //default, try switching to opposite side\n    if(!position && (this.usedPositions.indexOf('top') < 0)){\n      this.$element.addClass('top');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') < 0)){\n      this.$element.removeClass(position)\n          .addClass('right');\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.removeClass(position)\n          .addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if(!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.addClass('left');\n    }else if(position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)){\n      this.$element.removeClass(position)\n          .addClass('left');\n    }else if(position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }else if(position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)){\n      this.$element.removeClass(position);\n    }\n    //if nothing cleared, set to bottom\n    else{\n      this.$element.removeClass(position);\n    }\n    this.classChanged = true;\n    this.counter--;\n  }\n\n  /**\n   * Sets the position and orientation of the dropdown pane, checks for collisions.\n   * Recursively calls itself if a collision is detected, with a new position class.\n   * @function\n   * @private\n   */\n  _setPosition() {\n    if(this.$anchor.attr('aria-expanded') === 'false'){ return false; }\n    var position = this.getPositionClass(),\n        $eleDims = Foundation.Box.GetDimensions(this.$element),\n        $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n        _this = this,\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\n        param = (direction === 'top') ? 'height' : 'width',\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset;\n\n    if(($eleDims.width >= $eleDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.$element, this.$parent))){\n      var newWidth = $eleDims.windowDims.width,\n          parentHOffset = 0;\n      if(this.$parent){\n        var $parentDims = Foundation.Box.GetDimensions(this.$parent),\n            parentHOffset = $parentDims.offset.left;\n        if ($parentDims.width < newWidth){\n          newWidth = $parentDims.width;\n        }\n      }\n\n      this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset + parentHOffset, true)).css({\n        'width': newWidth - (this.options.hOffset * 2),\n        'height': 'auto'\n      });\n      this.classChanged = true;\n      return false;\n    }\n\n    this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n    while(!Foundation.Box.ImNotTouchingYou(this.$element, this.$parent, true) && this.counter){\n      this._reposition(position);\n      this._setPosition();\n    }\n  }\n\n  /**\n   * Adds event listeners to the element utilizing the triggers utility library.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': this._setPosition.bind(this)\n    });\n\n    if(this.options.hover){\n      this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n      .on('mouseenter.zf.dropdown', function(){\n        var bodyData = $('body').data();\n        if(typeof(bodyData.whatinput) === 'undefined' || bodyData.whatinput === 'mouse') {\n          clearTimeout(_this.timeout);\n          _this.timeout = setTimeout(function(){\n            _this.open();\n            _this.$anchor.data('hover', true);\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdown', function(){\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function(){\n          _this.close();\n          _this.$anchor.data('hover', false);\n        }, _this.options.hoverDelay);\n      });\n      if(this.options.hoverPane){\n        this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown')\n            .on('mouseenter.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function(){\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function(){\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n      }\n    }\n    this.$anchor.add(this.$element).on('keydown.zf.dropdown', function(e) {\n\n      var $target = $(this),\n        visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n      Foundation.Keyboard.handleKey(e, 'Dropdown', {\n        open: function() {\n          if ($target.is(_this.$anchor)) {\n            _this.open();\n            _this.$element.attr('tabindex', -1).focus();\n            e.preventDefault();\n          }\n        },\n        close: function() {\n          _this.close();\n          _this.$anchor.focus();\n        }\n      });\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n     var $body = $(document.body).not(this.$element),\n         _this = this;\n     $body.off('click.zf.dropdown')\n          .on('click.zf.dropdown', function(e){\n            if(_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n              return;\n            }\n            if(_this.$element.find(e.target).length) {\n              return;\n            }\n            _this.close();\n            $body.off('click.zf.dropdown');\n          });\n  }\n\n  /**\n   * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n   * @function\n   * @fires Dropdown#closeme\n   * @fires Dropdown#show\n   */\n  open() {\n    // var _this = this;\n    /**\n     * Fires to close other open dropdowns\n     * @event Dropdown#closeme\n     */\n    this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n    this.$anchor.addClass('hover')\n        .attr({'aria-expanded': true});\n    // this.$element/*.show()*/;\n    this._setPosition();\n    this.$element.addClass('is-open')\n        .attr({'aria-hidden': false});\n\n    if(this.options.autoFocus){\n      var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n      if($focusable.length){\n        $focusable.eq(0).focus();\n      }\n    }\n\n    if(this.options.closeOnClick){ this._addBodyHandler(); }\n\n    if (this.options.trapFocus) {\n      Foundation.Keyboard.trapFocus(this.$element);\n    }\n\n    /**\n     * Fires once the dropdown is visible.\n     * @event Dropdown#show\n     */\n    this.$element.trigger('show.zf.dropdown', [this.$element]);\n  }\n\n  /**\n   * Closes the open dropdown pane.\n   * @function\n   * @fires Dropdown#hide\n   */\n  close() {\n    if(!this.$element.hasClass('is-open')){\n      return false;\n    }\n    this.$element.removeClass('is-open')\n        .attr({'aria-hidden': true});\n\n    this.$anchor.removeClass('hover')\n        .attr('aria-expanded', false);\n\n    if(this.classChanged){\n      var curPositionClass = this.getPositionClass();\n      if(curPositionClass){\n        this.$element.removeClass(curPositionClass);\n      }\n      this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({height: '', width: ''});\n      this.classChanged = false;\n      this.counter = 4;\n      this.usedPositions.length = 0;\n    }\n    this.$element.trigger('hide.zf.dropdown', [this.$element]);\n\n    if (this.options.trapFocus) {\n      Foundation.Keyboard.releaseFocus(this.$element);\n    }\n  }\n\n  /**\n   * Toggles the dropdown pane's visibility.\n   * @function\n   */\n  toggle() {\n    if(this.$element.hasClass('is-open')){\n      if(this.$anchor.data('hover')) return;\n      this.close();\n    }else{\n      this.open();\n    }\n  }\n\n  /**\n   * Destroys the dropdown.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.trigger').hide();\n    this.$anchor.off('.zf.dropdown');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nDropdown.defaults = {\n  /**\n   * Class that designates bounding container of Dropdown (Default: window)\n   * @option\n   * @example 'dropdown-parent'\n   */\n  parentClass: null,\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @example 250\n   */\n  hoverDelay: 250,\n  /**\n   * Allow submenus to open on hover events\n   * @option\n   * @example false\n   */\n  hover: false,\n  /**\n   * Don't close dropdown when hovering over dropdown pane\n   * @option\n   * @example true\n   */\n  hoverPane: false,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @example 1\n   */\n  vOffset: 1,\n  /**\n   * Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @example 1\n   */\n  hOffset: 1,\n  /**\n   * Class applied to adjust open position. JS will test and fill this in.\n   * @option\n   * @example 'top'\n   */\n  positionClass: '',\n  /**\n   * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n   * @option\n   * @example false\n   */\n  trapFocus: false,\n  /**\n   * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n   * @option\n   * @example true\n   */\n  autoFocus: false,\n  /**\n   * Allows a click on the body to close the dropdown.\n   * @option\n   * @example false\n   */\n  closeOnClick: false\n}\n\n// Window exports\nFoundation.plugin(Dropdown, 'Dropdown');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * DropdownMenu module.\n * @module foundation.dropdown-menu\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.nest\n */\n\nclass DropdownMenu {\n  /**\n   * Creates a new instance of DropdownMenu.\n   * @class\n   * @fires DropdownMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n    Foundation.Nest.Feather(this.$element, 'dropdown');\n    this._init();\n\n    Foundation.registerPlugin(this, 'DropdownMenu');\n    Foundation.Keyboard.register('DropdownMenu', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'up',\n      'ARROW_DOWN': 'down',\n      'ARROW_LEFT': 'previous',\n      'ESCAPE': 'close'\n    });\n  }\n\n  /**\n   * Initializes the plugin, and calls _prepareMenu\n   * @private\n   * @function\n   */\n  _init() {\n    var subs = this.$element.find('li.is-dropdown-submenu-parent');\n    this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n    this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n    this.$tabs = this.$element.children('[role=\"menuitem\"]');\n    this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n    if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n      this.options.alignment = 'right';\n      subs.addClass('opens-left');\n    } else {\n      subs.addClass('opens-right');\n    }\n    this.changed = false;\n    this._events();\n  };\n\n  _isVertical() {\n    return this.$tabs.css('display') === 'block';\n  }\n\n  /**\n   * Adds event listeners to elements within the menu\n   * @private\n   * @function\n   */\n  _events() {\n    var _this = this,\n        hasTouch = 'ontouchstart' in window || (typeof window.ontouchstart !== 'undefined'),\n        parClass = 'is-dropdown-submenu-parent';\n\n    // used for onClick and in the keyboard handlers\n    var handleClickFn = function(e) {\n      var $elem = $(e.target).parentsUntil('ul', `.${parClass}`),\n          hasSub = $elem.hasClass(parClass),\n          hasClicked = $elem.attr('data-is-click') === 'true',\n          $sub = $elem.children('.is-dropdown-submenu');\n\n      if (hasSub) {\n        if (hasClicked) {\n          if (!_this.options.closeOnClick || (!_this.options.clickOpen && !hasTouch) || (_this.options.forceFollow && hasTouch)) { return; }\n          else {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            _this._hide($elem);\n          }\n        } else {\n          e.preventDefault();\n          e.stopImmediatePropagation();\n          _this._show($sub);\n          $elem.add($elem.parentsUntil(_this.$element, `.${parClass}`)).attr('data-is-click', true);\n        }\n      }\n    };\n\n    if (this.options.clickOpen || hasTouch) {\n      this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n    }\n    \n    // Handle Leaf element Clicks\n    if(_this.options.closeOnClickInside){\n      this.$menuItems.on('click.zf.dropdownmenu touchend.zf.dropdownmenu', function(e) {\n        var hasSub = $elem.hasClass(parClass);\n        if(!hasSub){\n          _this._hide();\n        }\n      });\n    }\n    \n    if (!this.options.disableHover) {\n      this.$menuItems.on('mouseenter.zf.dropdownmenu', function(e) {\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n\n        if (hasSub) {\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function() {\n            _this._show($elem.children('.is-dropdown-submenu'));\n          }, _this.options.hoverDelay);\n        }\n      }).on('mouseleave.zf.dropdownmenu', function(e) {\n        var $elem = $(this),\n            hasSub = $elem.hasClass(parClass);\n        if (hasSub && _this.options.autoclose) {\n          if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) { return false; }\n\n          clearTimeout(_this.delay);\n          _this.delay = setTimeout(function() {\n            _this._hide($elem);\n          }, _this.options.closingTime);\n        }\n      });\n    }\n    this.$menuItems.on('keydown.zf.dropdownmenu', function(e) {\n      var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n          isTab = _this.$tabs.index($element) > -1,\n          $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n          $prevElement,\n          $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          $prevElement = $elements.eq(i-1);\n          $nextElement = $elements.eq(i+1);\n          return;\n        }\n      });\n\n      var nextSibling = function() {\n        if (!$element.is(':last-child')) {\n          $nextElement.children('a:first').focus();\n          e.preventDefault();\n        }\n      }, prevSibling = function() {\n        $prevElement.children('a:first').focus();\n        e.preventDefault();\n      }, openSub = function() {\n        var $sub = $element.children('ul.is-dropdown-submenu');\n        if ($sub.length) {\n          _this._show($sub);\n          $element.find('li > a:first').focus();\n          e.preventDefault();\n        } else { return; }\n      }, closeSub = function() {\n        //if ($element.is(':first-child')) {\n        var close = $element.parent('ul').parent('li');\n        close.children('a:first').focus();\n        _this._hide(close);\n        e.preventDefault();\n        //}\n      };\n      var functions = {\n        open: openSub,\n        close: function() {\n          _this._hide(_this.$element);\n          _this.$menuItems.find('a:first').focus(); // focus to first element\n          e.preventDefault();\n        },\n        handled: function() {\n          e.stopImmediatePropagation();\n        }\n      };\n\n      if (isTab) {\n        if (_this._isVertical()) { // vertical menu\n          if (Foundation.rtl()) { // right aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: closeSub,\n              previous: openSub\n            });\n          } else { // left aligned\n            $.extend(functions, {\n              down: nextSibling,\n              up: prevSibling,\n              next: openSub,\n              previous: closeSub\n            });\n          }\n        } else { // horizontal menu\n          if (Foundation.rtl()) { // right aligned\n            $.extend(functions, {\n              next: prevSibling,\n              previous: nextSibling,\n              down: openSub,\n              up: closeSub\n            });\n          } else { // left aligned\n            $.extend(functions, {\n              next: nextSibling,\n              previous: prevSibling,\n              down: openSub,\n              up: closeSub\n            });\n          }\n        }\n      } else { // not tabs -> one sub\n        if (Foundation.rtl()) { // right aligned\n          $.extend(functions, {\n            next: closeSub,\n            previous: openSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        } else { // left aligned\n          $.extend(functions, {\n            next: openSub,\n            previous: closeSub,\n            down: nextSibling,\n            up: prevSibling\n          });\n        }\n      }\n      Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n\n    });\n  }\n\n  /**\n   * Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private\n   */\n  _addBodyHandler() {\n    var $body = $(document.body),\n        _this = this;\n    $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu')\n         .on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function(e) {\n           var $link = _this.$element.find(e.target);\n           if ($link.length) { return; }\n\n           _this._hide();\n           $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n         });\n  }\n\n  /**\n   * Opens a dropdown pane, and checks for collisions first.\n   * @param {jQuery} $sub - ul element that is a submenu to show\n   * @function\n   * @private\n   * @fires DropdownMenu#show\n   */\n  _show($sub) {\n    var idx = this.$tabs.index(this.$tabs.filter(function(i, el) {\n      return $(el).find($sub).length > 0;\n    }));\n    var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n    this._hide($sibs, idx);\n    $sub.css('visibility', 'hidden').addClass('js-dropdown-active')\n        .parent('li.is-dropdown-submenu-parent').addClass('is-active');\n    var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n    if (!clear) {\n      var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n          $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n      $parentLi.removeClass(`opens${oldClass}`).addClass(`opens-${this.options.alignment}`);\n      clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n      if (!clear) {\n        $parentLi.removeClass(`opens-${this.options.alignment}`).addClass('opens-inner');\n      }\n      this.changed = true;\n    }\n    $sub.css('visibility', '');\n    if (this.options.closeOnClick) { this._addBodyHandler(); }\n    /**\n     * Fires when the new dropdown pane is visible.\n     * @event DropdownMenu#show\n     */\n    this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n  }\n\n  /**\n   * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n   * @function\n   * @param {jQuery} $elem - element with a submenu to hide\n   * @param {Number} idx - index of the $tabs collection to hide\n   * @private\n   */\n  _hide($elem, idx) {\n    var $toClose;\n    if ($elem && $elem.length) {\n      $toClose = $elem;\n    } else if (idx !== undefined) {\n      $toClose = this.$tabs.not(function(i, el) {\n        return i === idx;\n      });\n    }\n    else {\n      $toClose = this.$element;\n    }\n    var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n    if (somethingToClose) {\n      $toClose.find('li.is-active').add($toClose).attr({\n        'data-is-click': false\n      }).removeClass('is-active');\n\n      $toClose.find('ul.js-dropdown-active').removeClass('js-dropdown-active');\n\n      if (this.changed || $toClose.find('opens-inner').length) {\n        var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n        $toClose.find('li.is-dropdown-submenu-parent').add($toClose)\n                .removeClass(`opens-inner opens-${this.options.alignment}`)\n                .addClass(`opens-${oldClass}`);\n        this.changed = false;\n      }\n      /**\n       * Fires when the open menus are closed.\n       * @event DropdownMenu#hide\n       */\n      this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n    }\n  }\n\n  /**\n   * Destroys the plugin.\n   * @function\n   */\n  destroy() {\n    this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click')\n        .removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n    $(document.body).off('.zf.dropdownmenu');\n    Foundation.Nest.Burn(this.$element, 'dropdown');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nDropdownMenu.defaults = {\n  /**\n   * Disallows hover events from opening submenus\n   * @option\n   * @example false\n   */\n  disableHover: false,\n  /**\n   * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n   * @option\n   * @example true\n   */\n  autoclose: true,\n  /**\n   * Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @example 50\n   */\n  hoverDelay: 50,\n  /**\n   * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n   * @option\n   * @example true\n   */\n  clickOpen: false,\n  /**\n   * Amount of time to delay closing a submenu on a mouseleave event.\n   * @option\n   * @example 500\n   */\n\n  closingTime: 500,\n  /**\n   * Position of the menu relative to what direction the submenus should open. Handled by JS.\n   * @option\n   * @example 'left'\n   */\n  alignment: 'left',\n  /**\n   * Allow clicks on the body to close any open submenus.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Allow clicks on leaf anchor links to close any open submenus.\n   * @option\n   * @example true\n   */\n  closeOnClickInside: true,\n  /**\n   * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n   * @option\n   * @example 'vertical'\n   */\n  verticalClass: 'vertical',\n  /**\n   * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n   * @option\n   * @example 'align-right'\n   */\n  rightClass: 'align-right',\n  /**\n   * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n   * @option\n   * @example false\n   */\n  forceFollow: true\n};\n\n// Window exports\nFoundation.plugin(DropdownMenu, 'DropdownMenu');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Equalizer module.\n * @module foundation.equalizer\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.timerAndImageLoader if equalizer contains images\n */\n\nclass Equalizer {\n  /**\n   * Creates a new instance of Equalizer.\n   * @class\n   * @fires Equalizer#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options){\n    this.$element = element;\n    this.options  = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Equalizer');\n  }\n\n  /**\n   * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  _init() {\n    var eqId = this.$element.attr('data-equalizer') || '';\n    var $watched = this.$element.find(`[data-equalizer-watch=\"${eqId}\"]`);\n\n    this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n    this.$element.attr('data-resize', (eqId || Foundation.GetYoDigits(6, 'eq')));\n\tthis.$element.attr('data-mutate', (eqId || Foundation.GetYoDigits(6, 'eq')));\n\n    this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n    this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n    this.isOn = false;\n    this._bindHandler = {\n      onResizeMeBound: this._onResizeMe.bind(this),\n      onPostEqualizedBound: this._onPostEqualized.bind(this)\n    };\n\n    var imgs = this.$element.find('img');\n    var tooSmall;\n    if(this.options.equalizeOn){\n      tooSmall = this._checkMQ();\n      $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n    }else{\n      this._events();\n    }\n    if((tooSmall !== undefined && tooSmall === false) || tooSmall === undefined){\n      if(imgs.length){\n        Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n      }else{\n        this._reflow();\n      }\n    }\n  }\n\n  /**\n   * Removes event listeners if the breakpoint is too small.\n   * @private\n   */\n  _pauseEvents() {\n    this.isOn = false;\n    this.$element.off({\n      '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\n      'resizeme.zf.trigger': this._bindHandler.onResizeMeBound,\n\t  'mutateme.zf.trigger': this._bindHandler.onResizeMeBound\n    });\n  }\n\n  /**\n   * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\n   * @private\n   */\n  _onResizeMe(e) {\n    this._reflow();\n  }\n\n  /**\n   * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\n   * @private\n   */\n  _onPostEqualized(e) {\n    if(e.target !== this.$element[0]){ this._reflow(); }\n  }\n\n  /**\n   * Initializes events for Equalizer.\n   * @private\n   */\n  _events() {\n    var _this = this;\n    this._pauseEvents();\n    if(this.hasNested){\n      this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\n    }else{\n      this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\n\t  this.$element.on('mutateme.zf.trigger', this._bindHandler.onResizeMeBound);\n    }\n    this.isOn = true;\n  }\n\n  /**\n   * Checks the current breakpoint to the minimum required size.\n   * @private\n   */\n  _checkMQ() {\n    var tooSmall = !Foundation.MediaQuery.is(this.options.equalizeOn);\n    if(tooSmall){\n      if(this.isOn){\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n      }\n    }else{\n      if(!this.isOn){\n        this._events();\n      }\n    }\n    return tooSmall;\n  }\n\n  /**\n   * A noop version for the plugin\n   * @private\n   */\n  _killswitch() {\n    return;\n  }\n\n  /**\n   * Calls necessary functions to update Equalizer upon DOM change\n   * @private\n   */\n  _reflow() {\n    if(!this.options.equalizeOnStack){\n      if(this._isStacked()){\n        this.$watched.css('height', 'auto');\n        return false;\n      }\n    }\n    if (this.options.equalizeByRow) {\n      this.getHeightsByRow(this.applyHeightByRow.bind(this));\n    }else{\n      this.getHeights(this.applyHeight.bind(this));\n    }\n  }\n\n  /**\n   * Manually determines if the first 2 elements are *NOT* stacked.\n   * @private\n   */\n  _isStacked() {\n    if (!this.$watched[0] || !this.$watched[1]) {\n      return true;\n    }\n    return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\n  }\n\n  /**\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Function} cb - A non-optional callback to return the heights array to.\n   * @returns {Array} heights - An array of heights of children within Equalizer container\n   */\n  getHeights(cb) {\n    var heights = [];\n    for(var i = 0, len = this.$watched.length; i < len; i++){\n      this.$watched[i].style.height = 'auto';\n      heights.push(this.$watched[i].offsetHeight);\n    }\n    cb(heights);\n  }\n\n  /**\n   * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Function} cb - A non-optional callback to return the heights array to.\n   * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n   */\n  getHeightsByRow(cb) {\n    var lastElTopOffset = (this.$watched.length ? this.$watched.first().offset().top : 0),\n        groups = [],\n        group = 0;\n    //group by Row\n    groups[group] = [];\n    for(var i = 0, len = this.$watched.length; i < len; i++){\n      this.$watched[i].style.height = 'auto';\n      //maybe could use this.$watched[i].offsetTop\n      var elOffsetTop = $(this.$watched[i]).offset().top;\n      if (elOffsetTop!=lastElTopOffset) {\n        group++;\n        groups[group] = [];\n        lastElTopOffset=elOffsetTop;\n      }\n      groups[group].push([this.$watched[i],this.$watched[i].offsetHeight]);\n    }\n\n    for (var j = 0, ln = groups.length; j < ln; j++) {\n      var heights = $(groups[j]).map(function(){ return this[1]; }).get();\n      var max         = Math.max.apply(null, heights);\n      groups[j].push(max);\n    }\n    cb(groups);\n  }\n\n  /**\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n   * @param {array} heights - An array of heights of children within Equalizer container\n   * @fires Equalizer#preequalized\n   * @fires Equalizer#postequalized\n   */\n  applyHeight(heights) {\n    var max = Math.max.apply(null, heights);\n    /**\n     * Fires before the heights are applied\n     * @event Equalizer#preequalized\n     */\n    this.$element.trigger('preequalized.zf.equalizer');\n\n    this.$watched.css('height', max);\n\n    /**\n     * Fires when the heights have been applied\n     * @event Equalizer#postequalized\n     */\n     this.$element.trigger('postequalized.zf.equalizer');\n  }\n\n  /**\n   * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n   * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n   * @fires Equalizer#preequalized\n   * @fires Equalizer#preequalizedRow\n   * @fires Equalizer#postequalizedRow\n   * @fires Equalizer#postequalized\n   */\n  applyHeightByRow(groups) {\n    /**\n     * Fires before the heights are applied\n     */\n    this.$element.trigger('preequalized.zf.equalizer');\n    for (var i = 0, len = groups.length; i < len ; i++) {\n      var groupsILength = groups[i].length,\n          max = groups[i][groupsILength - 1];\n      if (groupsILength<=2) {\n        $(groups[i][0][0]).css({'height':'auto'});\n        continue;\n      }\n      /**\n        * Fires before the heights per row are applied\n        * @event Equalizer#preequalizedRow\n        */\n      this.$element.trigger('preequalizedrow.zf.equalizer');\n      for (var j = 0, lenJ = (groupsILength-1); j < lenJ ; j++) {\n        $(groups[i][j][0]).css({'height':max});\n      }\n      /**\n        * Fires when the heights per row have been applied\n        * @event Equalizer#postequalizedRow\n        */\n      this.$element.trigger('postequalizedrow.zf.equalizer');\n    }\n    /**\n     * Fires when the heights have been applied\n     */\n     this.$element.trigger('postequalized.zf.equalizer');\n  }\n\n  /**\n   * Destroys an instance of Equalizer.\n   * @function\n   */\n  destroy() {\n    this._pauseEvents();\n    this.$watched.css('height', 'auto');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nEqualizer.defaults = {\n  /**\n   * Enable height equalization when stacked on smaller screens.\n   * @option\n   * @example true\n   */\n  equalizeOnStack: false,\n  /**\n   * Enable height equalization row by row.\n   * @option\n   * @example false\n   */\n  equalizeByRow: false,\n  /**\n   * String representing the minimum breakpoint size the plugin should equalize heights on.\n   * @option\n   * @example 'medium'\n   */\n  equalizeOn: ''\n};\n\n// Window exports\nFoundation.plugin(Equalizer, 'Equalizer');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Interchange module.\n * @module foundation.interchange\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.timerAndImageLoader\n */\n\nclass Interchange {\n  /**\n   * Creates a new instance of Interchange.\n   * @class\n   * @fires Interchange#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Interchange.defaults, options);\n    this.rules = [];\n    this.currentPath = '';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'Interchange');\n  }\n\n  /**\n   * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n   * @function\n   * @private\n   */\n  _init() {\n    this._addBreakpoints();\n    this._generateRules();\n    this._reflow();\n  }\n\n  /**\n   * Initializes events for Interchange.\n   * @function\n   * @private\n   */\n  _events() {\n    $(window).on('resize.zf.interchange', Foundation.util.throttle(() => {\n      this._reflow();\n    }, 50));\n  }\n\n  /**\n   * Calls necessary functions to update Interchange upon DOM change\n   * @function\n   * @private\n   */\n  _reflow() {\n    var match;\n\n    // Iterate through each rule, but only save the last match\n    for (var i in this.rules) {\n      if(this.rules.hasOwnProperty(i)) {\n        var rule = this.rules[i];\n        if (window.matchMedia(rule.query).matches) {\n          match = rule;\n        }\n      }\n    }\n\n    if (match) {\n      this.replace(match.path);\n    }\n  }\n\n  /**\n   * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n   * @function\n   * @private\n   */\n  _addBreakpoints() {\n    for (var i in Foundation.MediaQuery.queries) {\n      if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n        var query = Foundation.MediaQuery.queries[i];\n        Interchange.SPECIAL_QUERIES[query.name] = query.value;\n      }\n    }\n  }\n\n  /**\n   * Checks the Interchange element for the provided media query + content pairings\n   * @function\n   * @private\n   * @param {Object} element - jQuery object that is an Interchange instance\n   * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n   */\n  _generateRules(element) {\n    var rulesList = [];\n    var rules;\n\n    if (this.options.rules) {\n      rules = this.options.rules;\n    }\n    else {\n      rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n    }\n\n    for (var i in rules) {\n      if(rules.hasOwnProperty(i)) {\n        var rule = rules[i].slice(1, -1).split(', ');\n        var path = rule.slice(0, -1).join('');\n        var query = rule[rule.length - 1];\n\n        if (Interchange.SPECIAL_QUERIES[query]) {\n          query = Interchange.SPECIAL_QUERIES[query];\n        }\n\n        rulesList.push({\n          path: path,\n          query: query\n        });\n      }\n    }\n\n    this.rules = rulesList;\n  }\n\n  /**\n   * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n   * @function\n   * @param {String} path - Path to the image or HTML partial.\n   * @fires Interchange#replaced\n   */\n  replace(path) {\n    if (this.currentPath === path) return;\n\n    var _this = this,\n        trigger = 'replaced.zf.interchange';\n\n    // Replacing images\n    if (this.$element[0].nodeName === 'IMG') {\n      this.$element.attr('src', path).on('load', function() {\n        _this.currentPath = path;\n      })\n      .trigger(trigger);\n    }\n    // Replacing background images\n    else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n      this.$element.css({ 'background-image': 'url('+path+')' })\n          .trigger(trigger);\n    }\n    // Replacing HTML\n    else {\n      $.get(path, function(response) {\n        _this.$element.html(response)\n             .trigger(trigger);\n        $(response).foundation();\n        _this.currentPath = path;\n      });\n    }\n\n    /**\n     * Fires when content in an Interchange element is done being loaded.\n     * @event Interchange#replaced\n     */\n    // this.$element.trigger('replaced.zf.interchange');\n  }\n\n  /**\n   * Destroys an instance of interchange.\n   * @function\n   */\n  destroy() {\n    //TODO this.\n  }\n}\n\n/**\n * Default settings for plugin\n */\nInterchange.defaults = {\n  /**\n   * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n   * @option\n   */\n  rules: null\n};\n\nInterchange.SPECIAL_QUERIES = {\n  'landscape': 'screen and (orientation: landscape)',\n  'portrait': 'screen and (orientation: portrait)',\n  'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n};\n\n// Window exports\nFoundation.plugin(Interchange, 'Interchange');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Magellan module.\n * @module foundation.magellan\n */\n\nclass Magellan {\n  /**\n   * Creates a new instance of Magellan.\n   * @class\n   * @fires Magellan#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options  = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Magellan');\n  }\n\n  /**\n   * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n   * @private\n   */\n  _init() {\n    var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n    var _this = this;\n    this.$targets = $('[data-magellan-target]');\n    this.$links = this.$element.find('a');\n    this.$element.attr({\n      'data-resize': id,\n      'data-scroll': id,\n      'id': id\n    });\n    this.$active = $();\n    this.scrollPos = parseInt(window.pageYOffset, 10);\n\n    this._events();\n  }\n\n  /**\n   * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n   * Can be invoked if new elements are added or the size of a location changes.\n   * @function\n   */\n  calcPoints() {\n    var _this = this,\n        body = document.body,\n        html = document.documentElement;\n\n    this.points = [];\n    this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n    this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n    this.$targets.each(function(){\n      var $tar = $(this),\n          pt = Math.round($tar.offset().top - _this.options.threshold);\n      $tar.targetPoint = pt;\n      _this.points.push(pt);\n    });\n  }\n\n  /**\n   * Initializes events for Magellan.\n   * @private\n   */\n  _events() {\n    var _this = this,\n        $body = $('html, body'),\n        opts = {\n          duration: _this.options.animationDuration,\n          easing:   _this.options.animationEasing\n        };\n    $(window).one('load', function(){\n      if(_this.options.deepLinking){\n        if(location.hash){\n          _this.scrollToLoc(location.hash);\n        }\n      }\n      _this.calcPoints();\n      _this._updateActive();\n    });\n\n    this.$element.on({\n      'resizeme.zf.trigger': this.reflow.bind(this),\n      'scrollme.zf.trigger': this._updateActive.bind(this)\n    }).on('click.zf.magellan', 'a[href^=\"#\"]', function(e) {\n        e.preventDefault();\n        var arrival   = this.getAttribute('href');\n        _this.scrollToLoc(arrival);\n    });\n  }\n\n  /**\n   * Function to scroll to a given location on the page.\n   * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n   * @function\n   */\n  scrollToLoc(loc) {\n    // Do nothing if target does not exist to prevent errors\n    if (!$(loc).length) {return false;}\n    var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n    $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n  }\n\n  /**\n   * Calls necessary functions to update Magellan upon DOM change\n   * @function\n   */\n  reflow() {\n    this.calcPoints();\n    this._updateActive();\n  }\n\n  /**\n   * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n   * @private\n   * @function\n   * @fires Magellan#update\n   */\n  _updateActive(/*evt, elem, scrollPos*/) {\n    var winPos = /*scrollPos ||*/ parseInt(window.pageYOffset, 10),\n        curIdx;\n\n    if(winPos + this.winHeight === this.docHeight){ curIdx = this.points.length - 1; }\n    else if(winPos < this.points[0]){ curIdx = undefined; }\n    else{\n      var isDown = this.scrollPos < winPos,\n          _this = this,\n          curVisible = this.points.filter(function(p, i){\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n      curIdx = curVisible.length ? curVisible.length - 1 : 0;\n    }\n\n    this.$active.removeClass(this.options.activeClass);\n    this.$active = this.$links.filter('[href=\"#' + this.$targets.eq(curIdx).data('magellan-target') + '\"]').addClass(this.options.activeClass);\n\n    if(this.options.deepLinking){\n      var hash = \" \";\n      if(curIdx != undefined){\n        hash = this.$active[0].getAttribute('href');\n      }\n      if(window.history.pushState){\n        window.history.pushState(null, null, hash);\n      }else{\n        window.location.hash = hash;\n      }\n    }\n\n    this.scrollPos = winPos;\n    /**\n     * Fires when magellan is finished updating to the new active element.\n     * @event Magellan#update\n     */\n    this.$element.trigger('update.zf.magellan', [this.$active]);\n  }\n\n  /**\n   * Destroys an instance of Magellan and resets the url of the window.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.trigger .zf.magellan')\n        .find(`.${this.options.activeClass}`).removeClass(this.options.activeClass);\n\n    if(this.options.deepLinking){\n      var hash = this.$active[0].getAttribute('href');\n      window.location.hash.replace(hash, '');\n    }\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\n/**\n * Default settings for plugin\n */\nMagellan.defaults = {\n  /**\n   * Amount of time, in ms, the animated scrolling should take between locations.\n   * @option\n   * @example 500\n   */\n  animationDuration: 500,\n  /**\n   * Animation style to use when scrolling between locations.\n   * @option\n   * @example 'ease-in-out'\n   */\n  animationEasing: 'linear',\n  /**\n   * Number of pixels to use as a marker for location changes.\n   * @option\n   * @example 50\n   */\n  threshold: 50,\n  /**\n   * Class applied to the active locations link on the magellan container.\n   * @option\n   * @example 'active'\n   */\n  activeClass: 'active',\n  /**\n   * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n   * @option\n   * @example true\n   */\n  deepLinking: false,\n  /**\n   * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n   * @option\n   * @example 25\n   */\n  barOffset: 0\n}\n\n// Window exports\nFoundation.plugin(Magellan, 'Magellan');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n * @requires foundation.util.motion\n */\n\nclass OffCanvas {\n  /**\n   * Creates a new instance of an off-canvas wrapper.\n   * @class\n   * @fires OffCanvas#init\n   * @param {Object} element - jQuery object to initialize.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n    this.$lastTrigger = $();\n    this.$triggers = $();\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'OffCanvas')\n    Foundation.Keyboard.register('OffCanvas', {\n      'ESCAPE': 'close'\n    });\n\n  }\n\n  /**\n   * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n   * @function\n   * @private\n   */\n  _init() {\n    var id = this.$element.attr('id');\n\n    this.$element.attr('aria-hidden', 'true');\n\n    this.$element.addClass(`is-transition-${this.options.transition}`);\n\n    // Find triggers that affect this element and add aria-expanded to them\n    this.$triggers = $(document)\n      .find('[data-open=\"'+id+'\"], [data-close=\"'+id+'\"], [data-toggle=\"'+id+'\"]')\n      .attr('aria-expanded', 'false')\n      .attr('aria-controls', id);\n\n    // Add an overlay over the content if necessary\n    if (this.options.contentOverlay === true) {\n      var overlay = document.createElement('div');\n      var overlayPosition = $(this.$element).css(\"position\") === 'fixed' ? 'is-overlay-fixed' : 'is-overlay-absolute';\n      overlay.setAttribute('class', 'js-off-canvas-overlay ' + overlayPosition);\n      this.$overlay = $(overlay);\n      if(overlayPosition === 'is-overlay-fixed') {\n        $('body').append(this.$overlay);\n      } else {\n        this.$element.siblings('[data-off-canvas-content]').append(this.$overlay);\n      }\n    }\n\n    this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n    if (this.options.isRevealed === true) {\n      this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n      this._setMQChecker();\n    }\n    if (!this.options.transitionTime === true) {\n      this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas]')[0]).transitionDuration) * 1000;\n    }\n  }\n\n  /**\n   * Adds event handlers to the off-canvas wrapper and the exit overlay.\n   * @function\n   * @private\n   */\n  _events() {\n    this.$element.off('.zf.trigger .zf.offcanvas').on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': this.close.bind(this),\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n    });\n\n    if (this.options.closeOnClick === true) {\n      var $target = this.options.contentOverlay ? this.$overlay : $('[data-off-canvas-content]');\n      $target.on({'click.zf.offcanvas': this.close.bind(this)});\n    }\n  }\n\n  /**\n   * Applies event listener for elements that will reveal at certain breakpoints.\n   * @private\n   */\n  _setMQChecker() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      } else {\n        _this.reveal(false);\n      }\n    }).one('load.zf.offcanvas', function() {\n      if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n        _this.reveal(true);\n      }\n    });\n  }\n\n  /**\n   * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n   * @param {Boolean} isRevealed - true if element should be revealed.\n   * @function\n   */\n  reveal(isRevealed) {\n    var $closer = this.$element.find('[data-close]');\n    if (isRevealed) {\n      this.close();\n      this.isRevealed = true;\n      this.$element.attr('aria-hidden', 'false');\n      this.$element.off('open.zf.trigger toggle.zf.trigger');\n      if ($closer.length) { $closer.hide(); }\n    } else {\n      this.isRevealed = false;\n      this.$element.attr('aria-hidden', 'true');\n      this.$element.on({\n        'open.zf.trigger': this.open.bind(this),\n        'toggle.zf.trigger': this.toggle.bind(this)\n      });\n      if ($closer.length) {\n        $closer.show();\n      }\n    }\n  }\n\n  /**\n   * Stops scrolling of the body when offcanvas is open on mobile Safari and other troublesome browsers.\n   * @private\n   */\n  _stopScrolling(event) {\n  \treturn false;\n  }\n\n  /**\n   * Opens the off-canvas menu.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   * @fires OffCanvas#opened\n   */\n  open(event, trigger) {\n    if (this.$element.hasClass('is-open') || this.isRevealed) { return; }\n    var _this = this;\n\n    if (trigger) {\n      this.$lastTrigger = trigger;\n    }\n\n    if (this.options.forceTo === 'top') {\n      window.scrollTo(0, 0);\n    } else if (this.options.forceTo === 'bottom') {\n      window.scrollTo(0,document.body.scrollHeight);\n    }\n\n    /**\n     * Fires when the off-canvas menu opens.\n     * @event OffCanvas#opened\n     */\n    _this.$element.addClass('is-open')\n\n    this.$triggers.attr('aria-expanded', 'true');\n    this.$element.attr('aria-hidden', 'false')\n        .trigger('opened.zf.offcanvas');\n\n    // If `contentScroll` is set to false, add class and disable scrolling on touch devices.\n    if (this.options.contentScroll === false) {\n      $('body').addClass('is-off-canvas-open').on('touchmove', this._stopScrolling);\n    }\n\n    if (this.options.contentOverlay === true) {\n      this.$overlay.addClass('is-visible');\n    }\n\n    if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n      this.$overlay.addClass('is-closable');\n    }\n\n    if (this.options.autoFocus === true) {\n      this.$element.one(Foundation.transitionend(this.$element), function() {\n        _this.$element.find('a, button').eq(0).focus();\n      });\n    }\n\n    if (this.options.trapFocus === true) {\n      this.$element.siblings('[data-off-canvas-content]').attr('tabindex', '-1');\n      Foundation.Keyboard.trapFocus(this.$element);\n    }\n  }\n\n  /**\n   * Closes the off-canvas menu.\n   * @function\n   * @param {Function} cb - optional cb to fire after closure.\n   * @fires OffCanvas#closed\n   */\n  close(cb) {\n    if (!this.$element.hasClass('is-open') || this.isRevealed) { return; }\n\n    var _this = this;\n\n    _this.$element.removeClass('is-open');\n\n    this.$element.attr('aria-hidden', 'true')\n      /**\n       * Fires when the off-canvas menu opens.\n       * @event OffCanvas#closed\n       */\n        .trigger('closed.zf.offcanvas');\n\n    // If `contentScroll` is set to false, remove class and re-enable scrolling on touch devices.\n    if (this.options.contentScroll === false) {\n      $('body').removeClass('is-off-canvas-open').off('touchmove', this._stopScrolling);\n    }\n\n    if (this.options.contentOverlay === true) {\n      this.$overlay.removeClass('is-visible');\n    }\n\n    if (this.options.closeOnClick === true && this.options.contentOverlay === true) {\n      this.$overlay.removeClass('is-closable');\n    }\n\n    this.$triggers.attr('aria-expanded', 'false');\n\n    if (this.options.trapFocus === true) {\n      this.$element.siblings('[data-off-canvas-content]').removeAttr('tabindex');\n      Foundation.Keyboard.releaseFocus(this.$element);\n    }\n  }\n\n  /**\n   * Toggles the off-canvas menu open or closed.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   */\n  toggle(event, trigger) {\n    if (this.$element.hasClass('is-open')) {\n      this.close(event, trigger);\n    }\n    else {\n      this.open(event, trigger);\n    }\n  }\n\n  /**\n   * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n   * @function\n   * @private\n   */\n  _handleKeyboard(e) {\n    Foundation.Keyboard.handleKey(e, 'OffCanvas', {\n      close: () => {\n        this.close();\n        this.$lastTrigger.focus();\n        return true;\n      },\n      handled: () => {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    });\n  }\n\n  /**\n   * Destroys the offcanvas plugin.\n   * @function\n   */\n  destroy() {\n    this.close();\n    this.$element.off('.zf.trigger .zf.offcanvas');\n    this.$overlay.off('.zf.offcanvas');\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nOffCanvas.defaults = {\n  /**\n   * Allow the user to click outside of the menu to close it.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n\n  /**\n   * Adds an overlay on top of `[data-off-canvas-content]`.\n   * @option\n   * @example true\n   */\n  contentOverlay: true,\n\n  /**\n   * Enable/disable scrolling of the main content when an off canvas panel is open.\n   * @option\n   * @example true\n   */\n  contentScroll: true,\n\n  /**\n   * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n   * @option\n   * @example 500\n   */\n  transitionTime: 0,\n\n  /**\n   * Type of transition for the offcanvas menu. Options are 'push', 'detached' or 'slide'.\n   * @option\n   * @example push\n   */\n  transition: 'push',\n\n  /**\n   * Force the page to scroll to top or bottom on open.\n   * @option\n   * @example top\n   */\n  forceTo: null,\n\n  /**\n   * Allow the offcanvas to remain open for certain breakpoints.\n   * @option\n   * @example false\n   */\n  isRevealed: false,\n\n  /**\n   * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n   * @option\n   * @example reveal-for-large\n   */\n  revealOn: null,\n\n  /**\n   * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n   * @option\n   * @example true\n   */\n  autoFocus: true,\n\n  /**\n   * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n   * @option\n   * TODO improve the regex testing for this.\n   * @example reveal-for-large\n   */\n  revealClass: 'reveal-for-',\n\n  /**\n   * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n   * @option\n   * @example true\n   */\n  trapFocus: false\n}\n\n// Window exports\nFoundation.plugin(OffCanvas, 'OffCanvas');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Orbit module.\n * @module foundation.orbit\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.timerAndImageLoader\n * @requires foundation.util.touch\n */\n\nclass Orbit {\n  /**\n  * Creates a new instance of an orbit carousel.\n  * @class\n  * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n  * @param {Object} options - Overrides to the default plugin settings.\n  */\n  constructor(element, options){\n    this.$element = element;\n    this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Orbit');\n    Foundation.Keyboard.register('Orbit', {\n      'ltr': {\n        'ARROW_RIGHT': 'next',\n        'ARROW_LEFT': 'previous'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'next',\n        'ARROW_RIGHT': 'previous'\n      }\n    });\n  }\n\n  /**\n  * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n  * @function\n  * @private\n  */\n  _init() {\n    // @TODO: consider discussion on PR #9278 about DOM pollution by changeSlide\n    this._reset();\n\n    this.$wrapper = this.$element.find(`.${this.options.containerClass}`);\n    this.$slides = this.$element.find(`.${this.options.slideClass}`);\n\n    var $images = this.$element.find('img'),\n        initActive = this.$slides.filter('.is-active'),\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'orbit');\n\n    this.$element.attr({\n      'data-resize': id,\n      'id': id\n    });\n\n    if (!initActive.length) {\n      this.$slides.eq(0).addClass('is-active');\n    }\n\n    if (!this.options.useMUI) {\n      this.$slides.addClass('no-motionui');\n    }\n\n    if ($images.length) {\n      Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n    } else {\n      this._prepareForOrbit();//hehe\n    }\n\n    if (this.options.bullets) {\n      this._loadBullets();\n    }\n\n    this._events();\n\n    if (this.options.autoPlay && this.$slides.length > 1) {\n      this.geoSync();\n    }\n\n    if (this.options.accessible) { // allow wrapper to be focusable to enable arrow navigation\n      this.$wrapper.attr('tabindex', 0);\n    }\n  }\n\n  /**\n  * Creates a jQuery collection of bullets, if they are being used.\n  * @function\n  * @private\n  */\n  _loadBullets() {\n    this.$bullets = this.$element.find(`.${this.options.boxOfBullets}`).find('button');\n  }\n\n  /**\n  * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n  * @function\n  */\n  geoSync() {\n    var _this = this;\n    this.timer = new Foundation.Timer(\n      this.$element,\n      {\n        duration: this.options.timerDelay,\n        infinite: false\n      },\n      function() {\n        _this.changeSlide(true);\n      });\n    this.timer.start();\n  }\n\n  /**\n  * Sets wrapper and slide heights for the orbit.\n  * @function\n  * @private\n  */\n  _prepareForOrbit() {\n    var _this = this;\n    this._setWrapperHeight();\n  }\n\n  /**\n  * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n  * @function\n  * @private\n  * @param {Function} cb - a callback function to fire when complete.\n  */\n  _setWrapperHeight(cb) {//rewrite this to `for` loop\n    var max = 0, temp, counter = 0, _this = this;\n\n    this.$slides.each(function() {\n      temp = this.getBoundingClientRect().height;\n      $(this).attr('data-slide', counter);\n\n      if (_this.$slides.filter('.is-active')[0] !== _this.$slides.eq(counter)[0]) {//if not the active slide, set css position and display property\n        $(this).css({'position': 'relative', 'display': 'none'});\n      }\n      max = temp > max ? temp : max;\n      counter++;\n    });\n\n    if (counter === this.$slides.length) {\n      this.$wrapper.css({'height': max}); //only change the wrapper height property once.\n      if(cb) {cb(max);} //fire callback with max height dimension.\n    }\n  }\n\n  /**\n  * Sets the max-height of each slide.\n  * @function\n  * @private\n  */\n  _setSlideHeight(height) {\n    this.$slides.each(function() {\n      $(this).css('max-height', height);\n    });\n  }\n\n  /**\n  * Adds event listeners to basically everything within the element.\n  * @function\n  * @private\n  */\n  _events() {\n    var _this = this;\n\n    //***************************************\n    //**Now using custom event - thanks to:**\n    //**      Yohai Ararat of Toronto      **\n    //***************************************\n    //\n    this.$element.off('.resizeme.zf.trigger').on({\n      'resizeme.zf.trigger': this._prepareForOrbit.bind(this)\n    })\n    if (this.$slides.length > 1) {\n\n      if (this.options.swipe) {\n        this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit')\n        .on('swipeleft.zf.orbit', function(e){\n          e.preventDefault();\n          _this.changeSlide(true);\n        }).on('swiperight.zf.orbit', function(e){\n          e.preventDefault();\n          _this.changeSlide(false);\n        });\n      }\n      //***************************************\n\n      if (this.options.autoPlay) {\n        this.$slides.on('click.zf.orbit', function() {\n          _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n          _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n        });\n\n        if (this.options.pauseOnHover) {\n          this.$element.on('mouseenter.zf.orbit', function() {\n            _this.timer.pause();\n          }).on('mouseleave.zf.orbit', function() {\n            if (!_this.$element.data('clickedOn')) {\n              _this.timer.start();\n            }\n          });\n        }\n      }\n\n      if (this.options.navButtons) {\n        var $controls = this.$element.find(`.${this.options.nextClass}, .${this.options.prevClass}`);\n        $controls.attr('tabindex', 0)\n        //also need to handle enter/return and spacebar key presses\n        .on('click.zf.orbit touchend.zf.orbit', function(e){\n\t  e.preventDefault();\n          _this.changeSlide($(this).hasClass(_this.options.nextClass));\n        });\n      }\n\n      if (this.options.bullets) {\n        this.$bullets.on('click.zf.orbit touchend.zf.orbit', function() {\n          if (/is-active/g.test(this.className)) { return false; }//if this is active, kick out of function.\n          var idx = $(this).data('slide'),\n          ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n          $slide = _this.$slides.eq(idx);\n\n          _this.changeSlide(ltr, $slide, idx);\n        });\n      }\n\n      if (this.options.accessible) {\n        this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function(e) {\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Orbit', {\n            next: function() {\n              _this.changeSlide(true);\n            },\n            previous: function() {\n              _this.changeSlide(false);\n            },\n            handled: function() { // if bullet is focused, make sure focus moves\n              if ($(e.target).is(_this.$bullets)) {\n                _this.$bullets.filter('.is-active').focus();\n              }\n            }\n          });\n        });\n      }\n    }\n  }\n\n  /**\n   * Resets Orbit so it can be reinitialized\n   */\n  _reset() {\n    // Don't do anything if there are no slides (first run)\n    if (typeof this.$slides == 'undefined') {\n      return;\n    }\n\n    if (this.$slides.length > 1) {\n      // Remove old events\n      this.$element.off('.zf.orbit').find('*').off('.zf.orbit')\n\n      // Restart timer if autoPlay is enabled\n      if (this.options.autoPlay) {\n        this.timer.restart();\n      }\n\n      // Reset all sliddes\n      this.$slides.each(function(el) {\n        $(el).removeClass('is-active is-active is-in')\n          .removeAttr('aria-live')\n          .hide();\n      });\n\n      // Show the first slide\n      this.$slides.first().addClass('is-active').show();\n\n      // Triggers when the slide has finished animating\n      this.$element.trigger('slidechange.zf.orbit', [this.$slides.first()]);\n\n      // Select first bullet if bullets are present\n      if (this.options.bullets) {\n        this._updateBullets(0);\n      }\n    }\n  }\n\n  /**\n  * Changes the current slide to a new one.\n  * @function\n  * @param {Boolean} isLTR - flag if the slide should move left to right.\n  * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n  * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n  * @fires Orbit#slidechange\n  */\n  changeSlide(isLTR, chosenSlide, idx) {\n    if (!this.$slides) {return; } // Don't freak out if we're in the middle of cleanup\n    var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n    if (/mui/g.test($curSlide[0].className)) { return false; } //if the slide is currently animating, kick out of the function\n\n    var $firstSlide = this.$slides.first(),\n    $lastSlide = this.$slides.last(),\n    dirIn = isLTR ? 'Right' : 'Left',\n    dirOut = isLTR ? 'Left' : 'Right',\n    _this = this,\n    $newSlide;\n\n    if (!chosenSlide) { //most of the time, this will be auto played or clicked from the navButtons.\n      $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n      (this.options.infiniteWrap ? $curSlide.next(`.${this.options.slideClass}`).length ? $curSlide.next(`.${this.options.slideClass}`) : $firstSlide : $curSlide.next(`.${this.options.slideClass}`))//pick next slide if moving left to right\n      :\n      (this.options.infiniteWrap ? $curSlide.prev(`.${this.options.slideClass}`).length ? $curSlide.prev(`.${this.options.slideClass}`) : $lastSlide : $curSlide.prev(`.${this.options.slideClass}`));//pick prev slide if moving right to left\n    } else {\n      $newSlide = chosenSlide;\n    }\n\n    if ($newSlide.length) {\n      /**\n      * Triggers before the next slide starts animating in and only if a next slide has been found.\n      * @event Orbit#beforeslidechange\n      */\n      this.$element.trigger('beforeslidechange.zf.orbit', [$curSlide, $newSlide]);\n\n      if (this.options.bullets) {\n        idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n        this._updateBullets(idx);\n      }\n\n      if (this.options.useMUI && !this.$element.is(':hidden')) {\n        Foundation.Motion.animateIn(\n          $newSlide.addClass('is-active').css({'position': 'absolute', 'top': 0}),\n          this.options[`animInFrom${dirIn}`],\n          function(){\n            $newSlide.css({'position': 'relative', 'display': 'block'})\n            .attr('aria-live', 'polite');\n        });\n\n        Foundation.Motion.animateOut(\n          $curSlide.removeClass('is-active'),\n          this.options[`animOutTo${dirOut}`],\n          function(){\n            $curSlide.removeAttr('aria-live');\n            if(_this.options.autoPlay && !_this.timer.isPaused){\n              _this.timer.restart();\n            }\n            //do stuff?\n          });\n      } else {\n        $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n        $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n        if (this.options.autoPlay && !this.timer.isPaused) {\n          this.timer.restart();\n        }\n      }\n    /**\n    * Triggers when the slide has finished animating in.\n    * @event Orbit#slidechange\n    */\n      this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n    }\n  }\n\n  /**\n  * Updates the active state of the bullets, if displayed.\n  * @function\n  * @private\n  * @param {Number} idx - the index of the current slide.\n  */\n  _updateBullets(idx) {\n    var $oldBullet = this.$element.find(`.${this.options.boxOfBullets}`)\n    .find('.is-active').removeClass('is-active').blur(),\n    span = $oldBullet.find('span:last').detach(),\n    $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n  }\n\n  /**\n  * Destroys the carousel and hides the element.\n  * @function\n  */\n  destroy() {\n    this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nOrbit.defaults = {\n  /**\n  * Tells the JS to look for and loadBullets.\n  * @option\n  * @example true\n  */\n  bullets: true,\n  /**\n  * Tells the JS to apply event listeners to nav buttons\n  * @option\n  * @example true\n  */\n  navButtons: true,\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-in-right'\n  */\n  animInFromRight: 'slide-in-right',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-out-right'\n  */\n  animOutToRight: 'slide-out-right',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-in-left'\n  *\n  */\n  animInFromLeft: 'slide-in-left',\n  /**\n  * motion-ui animation class to apply\n  * @option\n  * @example 'slide-out-left'\n  */\n  animOutToLeft: 'slide-out-left',\n  /**\n  * Allows Orbit to automatically animate on page load.\n  * @option\n  * @example true\n  */\n  autoPlay: true,\n  /**\n  * Amount of time, in ms, between slide transitions\n  * @option\n  * @example 5000\n  */\n  timerDelay: 5000,\n  /**\n  * Allows Orbit to infinitely loop through the slides\n  * @option\n  * @example true\n  */\n  infiniteWrap: true,\n  /**\n  * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n  * @option\n  * @example true\n  */\n  swipe: true,\n  /**\n  * Allows the timing function to pause animation on hover.\n  * @option\n  * @example true\n  */\n  pauseOnHover: true,\n  /**\n  * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n  * @option\n  * @example true\n  */\n  accessible: true,\n  /**\n  * Class applied to the container of Orbit\n  * @option\n  * @example 'orbit-container'\n  */\n  containerClass: 'orbit-container',\n  /**\n  * Class applied to individual slides.\n  * @option\n  * @example 'orbit-slide'\n  */\n  slideClass: 'orbit-slide',\n  /**\n  * Class applied to the bullet container. You're welcome.\n  * @option\n  * @example 'orbit-bullets'\n  */\n  boxOfBullets: 'orbit-bullets',\n  /**\n  * Class applied to the `next` navigation button.\n  * @option\n  * @example 'orbit-next'\n  */\n  nextClass: 'orbit-next',\n  /**\n  * Class applied to the `previous` navigation button.\n  * @option\n  * @example 'orbit-previous'\n  */\n  prevClass: 'orbit-previous',\n  /**\n  * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n  * @option\n  * @example true\n  */\n  useMUI: true\n};\n\n// Window exports\nFoundation.plugin(Orbit, 'Orbit');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.accordionMenu\n * @requires foundation.util.drilldown\n * @requires foundation.util.dropdown-menu\n */\n\nclass ResponsiveMenu {\n  /**\n   * Creates a new instance of a responsive menu.\n   * @class\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.rules = this.$element.data('responsive-menu');\n    this.currentMq = null;\n    this.currentPlugin = null;\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveMenu');\n  }\n\n  /**\n   * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private\n   */\n  _init() {\n    // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n    if (typeof this.rules === 'string') {\n      let rulesTree = {};\n\n      // Parse rules from \"classes\" pulled from data attribute\n      let rules = this.rules.split(' ');\n\n      // Iterate through every rule found\n      for (let i = 0; i < rules.length; i++) {\n        let rule = rules[i].split('-');\n        let ruleSize = rule.length > 1 ? rule[0] : 'small';\n        let rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n        if (MenuPlugins[rulePlugin] !== null) {\n          rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n        }\n      }\n\n      this.rules = rulesTree;\n    }\n\n    if (!$.isEmptyObject(this.rules)) {\n      this._checkMediaQueries();\n    }\n    // Add data-mutate since children may need it.\n    this.$element.attr('data-mutate', (this.$element.attr('data-mutate') || Foundation.GetYoDigits(6, 'responsive-menu')));\n  }\n\n  /**\n   * Initializes events for the Menu.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    $(window).on('changed.zf.mediaquery', function() {\n      _this._checkMediaQueries();\n    });\n    // $(window).on('resize.zf.ResponsiveMenu', function() {\n    //   _this._checkMediaQueries();\n    // });\n  }\n\n  /**\n   * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private\n   */\n  _checkMediaQueries() {\n    var matchedMq, _this = this;\n    // Iterate through each rule and find the last matching rule\n    $.each(this.rules, function(key) {\n      if (Foundation.MediaQuery.atLeast(key)) {\n        matchedMq = key;\n      }\n    });\n\n    // No match? No dice\n    if (!matchedMq) return;\n\n    // Plugin already initialized? We good\n    if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n    // Remove existing plugin-specific CSS classes\n    $.each(MenuPlugins, function(key, value) {\n      _this.$element.removeClass(value.cssClass);\n    });\n\n    // Add the CSS class for the new plugin\n    this.$element.addClass(this.rules[matchedMq].cssClass);\n\n    // Create an instance of the new plugin\n    if (this.currentPlugin) this.currentPlugin.destroy();\n    this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n  }\n\n  /**\n   * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function\n   */\n  destroy() {\n    this.currentPlugin.destroy();\n    $(window).off('.zf.ResponsiveMenu');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nResponsiveMenu.defaults = {};\n\n// The plugin matches the plugin classes with these plugin instances.\nvar MenuPlugins = {\n  dropdown: {\n    cssClass: 'dropdown',\n    plugin: Foundation._plugins['dropdown-menu'] || null\n  },\n drilldown: {\n    cssClass: 'drilldown',\n    plugin: Foundation._plugins['drilldown'] || null\n  },\n  accordion: {\n    cssClass: 'accordion-menu',\n    plugin: Foundation._plugins['accordion-menu'] || null\n  }\n};\n\n// Window exports\nFoundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery\n */\n\nclass ResponsiveToggle {\n  /**\n   * Creates a new instance of Tab Bar.\n   * @class\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'ResponsiveToggle');\n  }\n\n  /**\n   * Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private\n   */\n  _init() {\n    var targetID = this.$element.data('responsive-toggle');\n    if (!targetID) {\n      console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n    }\n\n    this.$targetMenu = $(`#${targetID}`);\n    this.$toggler = this.$element.find('[data-toggle]');\n    this.options = $.extend({}, this.options, this.$targetMenu.data());\n\n    // If they were set, parse the animation classes\n    if(this.options.animate) {\n      let input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n\n    this._update();\n  }\n\n  /**\n   * Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this._updateMqHandler = this._update.bind(this);\n\n    $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n    this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n  }\n\n  /**\n   * Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private\n   */\n  _update() {\n    // Mobile\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      this.$element.show();\n      this.$targetMenu.hide();\n    }\n\n    // Desktop\n    else {\n      this.$element.hide();\n      this.$targetMenu.show();\n    }\n  }\n\n  /**\n   * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled\n   */\n  toggleMenu() {\n    if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n      if(this.options.animate) {\n        if (this.$targetMenu.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$targetMenu, this.animationIn, () => {\n            /**\n             * Fires when the element attached to the tab bar toggles.\n             * @event ResponsiveToggle#toggled\n             */\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          });\n        }\n        else {\n          Foundation.Motion.animateOut(this.$targetMenu, this.animationOut, () => {\n            /**\n             * Fires when the element attached to the tab bar toggles.\n             * @event ResponsiveToggle#toggled\n             */\n            this.$element.trigger('toggled.zf.responsiveToggle');\n          });\n        }\n      }\n      else {\n        this.$targetMenu.toggle(0);\n\n        /**\n         * Fires when the element attached to the tab bar toggles.\n         * @event ResponsiveToggle#toggled\n         */\n        this.$element.trigger('toggled.zf.responsiveToggle');\n      }\n    }\n  };\n\n  destroy() {\n    this.$element.off('.zf.responsiveToggle');\n    this.$toggler.off('.zf.responsiveToggle');\n\n    $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nResponsiveToggle.defaults = {\n  /**\n   * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @example 'medium'\n   */\n  hideFor: 'medium',\n\n  /**\n   * To decide if the toggle should be animated or not.\n   * @option\n   * @example false\n   */\n  animate: false\n};\n\n// Window exports\nFoundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations\n */\n\nclass Reveal {\n  /**\n   * Creates a new instance of Reveal.\n   * @class\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n    this._init();\n\n    Foundation.registerPlugin(this, 'Reveal');\n    Foundation.Keyboard.register('Reveal', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ESCAPE': 'close',\n    });\n  }\n\n  /**\n   * Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private\n   */\n  _init() {\n    this.id = this.$element.attr('id');\n    this.isActive = false;\n    this.cached = {mq: Foundation.MediaQuery.current};\n    this.isMobile = mobileSniff();\n\n    this.$anchor = $(`[data-open=\"${this.id}\"]`).length ? $(`[data-open=\"${this.id}\"]`) : $(`[data-toggle=\"${this.id}\"]`);\n    this.$anchor.attr({\n      'aria-controls': this.id,\n      'aria-haspopup': true,\n      'tabindex': 0\n    });\n\n    if (this.options.fullScreen || this.$element.hasClass('full')) {\n      this.options.fullScreen = true;\n      this.options.overlay = false;\n    }\n    if (this.options.overlay && !this.$overlay) {\n      this.$overlay = this._makeOverlay(this.id);\n    }\n\n    this.$element.attr({\n        'role': 'dialog',\n        'aria-hidden': true,\n        'data-yeti-box': this.id,\n        'data-resize': this.id\n    });\n\n    if(this.$overlay) {\n      this.$element.detach().appendTo(this.$overlay);\n    } else {\n      this.$element.detach().appendTo($(this.options.appendTo));\n      this.$element.addClass('without-overlay');\n    }\n    this._events();\n    if (this.options.deepLink && window.location.hash === ( `#${this.id}`)) {\n      $(window).one('load.zf.reveal', this.open.bind(this));\n    }\n  }\n\n  /**\n   * Creates an overlay div to display behind the modal.\n   * @private\n   */\n  _makeOverlay(id) {\n    var $overlay = $('<div></div>')\n                    .addClass('reveal-overlay')\n                    .appendTo(this.options.appendTo);\n    return $overlay;\n  }\n\n  /**\n   * Updates position of modal\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n   * @private\n   */\n  _updatePosition() {\n    var width = this.$element.outerWidth();\n    var outerWidth = $(window).width();\n    var height = this.$element.outerHeight();\n    var outerHeight = $(window).height();\n    var left, top;\n    if (this.options.hOffset === 'auto') {\n      left = parseInt((outerWidth - width) / 2, 10);\n    } else {\n      left = parseInt(this.options.hOffset, 10);\n    }\n    if (this.options.vOffset === 'auto') {\n      if (height > outerHeight) {\n        top = parseInt(Math.min(100, outerHeight / 10), 10);\n      } else {\n        top = parseInt((outerHeight - height) / 4, 10);\n      }\n    } else {\n      top = parseInt(this.options.vOffset, 10);\n    }\n    this.$element.css({top: top + 'px'});\n    // only worry about left if we don't have an overlay or we havea  horizontal offset,\n    // otherwise we're perfectly in the middle\n    if(!this.$overlay || (this.options.hOffset !== 'auto')) {\n      this.$element.css({left: left + 'px'});\n      this.$element.css({margin: '0px'});\n    }\n\n  }\n\n  /**\n   * Adds event handlers for the modal.\n   * @private\n   */\n  _events() {\n    var _this = this;\n\n    this.$element.on({\n      'open.zf.trigger': this.open.bind(this),\n      'close.zf.trigger': (event, $element) => {\n        if ((event.target === _this.$element[0]) ||\n            ($(event.target).parents('[data-closable]')[0] === $element)) { // only close reveal when it's explicitly called\n          return this.close.apply(this);\n        }\n      },\n      'toggle.zf.trigger': this.toggle.bind(this),\n      'resizeme.zf.trigger': function() {\n        _this._updatePosition();\n      }\n    });\n\n    if (this.$anchor.length) {\n      this.$anchor.on('keydown.zf.reveal', function(e) {\n        if (e.which === 13 || e.which === 32) {\n          e.stopPropagation();\n          e.preventDefault();\n          _this.open();\n        }\n      });\n    }\n\n    if (this.options.closeOnClick && this.options.overlay) {\n      this.$overlay.off('.zf.reveal').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] ||\n          $.contains(_this.$element[0], e.target) ||\n            !$.contains(document, e.target)) {\n              return;\n        }\n        _this.close();\n      });\n    }\n    if (this.options.deepLink) {\n      $(window).on(`popstate.zf.reveal:${this.id}`, this._handleState.bind(this));\n    }\n  }\n\n  /**\n   * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n   * @private\n   */\n  _handleState(e) {\n    if(window.location.hash === ( '#' + this.id) && !this.isActive){ this.open(); }\n    else{ this.close(); }\n  }\n\n\n  /**\n   * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open\n   */\n  open() {\n    if (this.options.deepLink) {\n      var hash = `#${this.id}`;\n\n      if (window.history.pushState) {\n        window.history.pushState(null, null, hash);\n      } else {\n        window.location.hash = hash;\n      }\n    }\n\n    this.isActive = true;\n\n    // Make elements invisible, but remove display: none so we can get size and positioning\n    this.$element\n        .css({ 'visibility': 'hidden' })\n        .show()\n        .scrollTop(0);\n    if (this.options.overlay) {\n      this.$overlay.css({'visibility': 'hidden'}).show();\n    }\n\n    this._updatePosition();\n\n    this.$element\n      .hide()\n      .css({ 'visibility': '' });\n\n    if(this.$overlay) {\n      this.$overlay.css({'visibility': ''}).hide();\n      if(this.$element.hasClass('fast')) {\n        this.$overlay.addClass('fast');\n      } else if (this.$element.hasClass('slow')) {\n        this.$overlay.addClass('slow');\n      }\n    }\n\n\n    if (!this.options.multipleOpened) {\n      /**\n       * Fires immediately before the modal opens.\n       * Closes any other modals that are currently open\n       * @event Reveal#closeme\n       */\n      this.$element.trigger('closeme.zf.reveal', this.id);\n    }\n\n    var _this = this;\n\n    function addRevealOpenClasses() {\n      if (_this.isMobile) {\n        if(!_this.originalScrollPos) {\n          _this.originalScrollPos = window.pageYOffset;\n        }\n        $('html, body').addClass('is-reveal-open');\n      }\n      else {\n        $('body').addClass('is-reveal-open');\n      }\n    }\n    // Motion UI method of reveal\n    if (this.options.animationIn) {\n      function afterAnimation(){\n        _this.$element\n          .attr({\n            'aria-hidden': false,\n            'tabindex': -1\n          })\n          .focus();\n        addRevealOpenClasses();\n        Foundation.Keyboard.trapFocus(_this.$element);\n      }\n      if (this.options.overlay) {\n        Foundation.Motion.animateIn(this.$overlay, 'fade-in');\n      }\n      Foundation.Motion.animateIn(this.$element, this.options.animationIn, () => {\n        if(this.$element) { // protect against object having been removed\n          this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n          afterAnimation();\n        }\n      });\n    }\n    // jQuery method of reveal\n    else {\n      if (this.options.overlay) {\n        this.$overlay.show(0);\n      }\n      this.$element.show(this.options.showDelay);\n    }\n\n    // handle accessibility\n    this.$element\n      .attr({\n        'aria-hidden': false,\n        'tabindex': -1\n      })\n      .focus();\n    Foundation.Keyboard.trapFocus(this.$element);\n\n    /**\n     * Fires when the modal has successfully opened.\n     * @event Reveal#open\n     */\n    this.$element.trigger('open.zf.reveal');\n\n    addRevealOpenClasses();\n\n    setTimeout(() => {\n      this._extraHandlers();\n    }, 0);\n  }\n\n  /**\n   * Adds extra event handlers for the body and window if necessary.\n   * @private\n   */\n  _extraHandlers() {\n    var _this = this;\n    if(!this.$element) { return; } // If we're in the middle of cleanup, don't freak out\n    this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n    if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n      $('body').on('click.zf.reveal', function(e) {\n        if (e.target === _this.$element[0] ||\n          $.contains(_this.$element[0], e.target) ||\n            !$.contains(document, e.target)) { return; }\n        _this.close();\n      });\n    }\n\n    if (this.options.closeOnEsc) {\n      $(window).on('keydown.zf.reveal', function(e) {\n        Foundation.Keyboard.handleKey(e, 'Reveal', {\n          close: function() {\n            if (_this.options.closeOnEsc) {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          }\n        });\n      });\n    }\n\n    // lock focus within modal while tabbing\n    this.$element.on('keydown.zf.reveal', function(e) {\n      var $target = $(this);\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Reveal', {\n        open: function() {\n          if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n            setTimeout(function() { // set focus back to anchor if close button has been activated\n              _this.$anchor.focus();\n            }, 1);\n          } else if ($target.is(_this.focusableElements)) { // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n            _this.open();\n          }\n        },\n        close: function() {\n          if (_this.options.closeOnEsc) {\n            _this.close();\n            _this.$anchor.focus();\n          }\n        },\n        handled: function(preventDefault) {\n          if (preventDefault) {\n            e.preventDefault();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Closes the modal.\n   * @function\n   * @fires Reveal#closed\n   */\n  close() {\n    if (!this.isActive || !this.$element.is(':visible')) {\n      return false;\n    }\n    var _this = this;\n\n    // Motion UI method of hiding\n    if (this.options.animationOut) {\n      if (this.options.overlay) {\n        Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n      }\n      else {\n        finishUp();\n      }\n\n      Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n    }\n    // jQuery method of hiding\n    else {\n      if (this.options.overlay) {\n        this.$overlay.hide(0, finishUp);\n      }\n      else {\n        finishUp();\n      }\n\n      this.$element.hide(this.options.hideDelay);\n    }\n\n    // Conditionals to remove extra event listeners added on open\n    if (this.options.closeOnEsc) {\n      $(window).off('keydown.zf.reveal');\n    }\n\n    if (!this.options.overlay && this.options.closeOnClick) {\n      $('body').off('click.zf.reveal');\n    }\n\n    this.$element.off('keydown.zf.reveal');\n\n    function finishUp() {\n      if (_this.isMobile) {\n        $('html, body').removeClass('is-reveal-open');\n        if(_this.originalScrollPos) {\n          $('body').scrollTop(_this.originalScrollPos);\n          _this.originalScrollPos = null;\n        }\n      }\n      else {\n        $('body').removeClass('is-reveal-open');\n      }\n\n\n      Foundation.Keyboard.releaseFocus(_this.$element);\n\n      _this.$element.attr('aria-hidden', true);\n\n      /**\n      * Fires when the modal is done closing.\n      * @event Reveal#closed\n      */\n      _this.$element.trigger('closed.zf.reveal');\n    }\n\n    /**\n    * Resets the modal content\n    * This prevents a running video to keep going in the background\n    */\n    if (this.options.resetOnClose) {\n      this.$element.html(this.$element.html());\n    }\n\n    this.isActive = false;\n     if (_this.options.deepLink) {\n       if (window.history.replaceState) {\n         window.history.replaceState('', document.title, window.location.href.replace(`#${this.id}`, ''));\n       } else {\n         window.location.hash = '';\n       }\n     }\n  }\n\n  /**\n   * Toggles the open/closed state of a modal.\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.close();\n    } else {\n      this.open();\n    }\n  };\n\n  /**\n   * Destroys an instance of a modal.\n   * @function\n   */\n  destroy() {\n    if (this.options.overlay) {\n      this.$element.appendTo($(this.options.appendTo)); // move $element outside of $overlay to prevent error unregisterPlugin()\n      this.$overlay.hide().off().remove();\n    }\n    this.$element.hide().off();\n    this.$anchor.off('.zf');\n    $(window).off(`.zf.reveal:${this.id}`);\n\n    Foundation.unregisterPlugin(this);\n  };\n}\n\nReveal.defaults = {\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @example 'slide-in-left'\n   */\n  animationIn: '',\n  /**\n   * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @example 'slide-out-right'\n   */\n  animationOut: '',\n  /**\n   * Time, in ms, to delay the opening of a modal after a click if no animation used.\n   * @option\n   * @example 10\n   */\n  showDelay: 0,\n  /**\n   * Time, in ms, to delay the closing of a modal after a click if no animation used.\n   * @option\n   * @example 10\n   */\n  hideDelay: 0,\n  /**\n   * Allows a click on the body/overlay to close the modal.\n   * @option\n   * @example true\n   */\n  closeOnClick: true,\n  /**\n   * Allows the modal to close if the user presses the `ESCAPE` key.\n   * @option\n   * @example true\n   */\n  closeOnEsc: true,\n  /**\n   * If true, allows multiple modals to be displayed at once.\n   * @option\n   * @example false\n   */\n  multipleOpened: false,\n  /**\n   * Distance, in pixels, the modal should push down from the top of the screen.\n   * @option\n   * @example auto\n   */\n  vOffset: 'auto',\n  /**\n   * Distance, in pixels, the modal should push in from the side of the screen.\n   * @option\n   * @example auto\n   */\n  hOffset: 'auto',\n  /**\n   * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n   * @option\n   * @example false\n   */\n  fullScreen: false,\n  /**\n   * Percentage of screen height the modal should push up from the bottom of the view.\n   * @option\n   * @example 10\n   */\n  btmOffsetPct: 10,\n  /**\n   * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n   * @option\n   * @example true\n   */\n  overlay: true,\n  /**\n   * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n   * @option\n   * @example false\n   */\n  resetOnClose: false,\n  /**\n   * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n   * @option\n   * @example false\n   */\n  deepLink: false,\n    /**\n   * Allows the modal to append to custom div.\n   * @option\n   * @example false\n   */\n  appendTo: \"body\"\n\n};\n\n// Window exports\nFoundation.plugin(Reveal, 'Reveal');\n\nfunction iPhoneSniff() {\n  return /iP(ad|hone|od).*OS/.test(window.navigator.userAgent);\n}\n\nfunction androidSniff() {\n  return /Android/.test(window.navigator.userAgent);\n}\n\nfunction mobileSniff() {\n  return iPhoneSniff() || androidSniff();\n}\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch\n */\n\nclass Slider {\n  /**\n   * Creates a new instance of a slider control.\n   * @class\n   * @param {jQuery} element - jQuery object to make into a slider control.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Slider');\n    Foundation.Keyboard.register('Slider', {\n      'ltr': {\n        'ARROW_RIGHT': 'increase',\n        'ARROW_UP': 'increase',\n        'ARROW_DOWN': 'decrease',\n        'ARROW_LEFT': 'decrease',\n        'SHIFT_ARROW_RIGHT': 'increase_fast',\n        'SHIFT_ARROW_UP': 'increase_fast',\n        'SHIFT_ARROW_DOWN': 'decrease_fast',\n        'SHIFT_ARROW_LEFT': 'decrease_fast'\n      },\n      'rtl': {\n        'ARROW_LEFT': 'increase',\n        'ARROW_RIGHT': 'decrease',\n        'SHIFT_ARROW_LEFT': 'increase_fast',\n        'SHIFT_ARROW_RIGHT': 'decrease_fast'\n      }\n    });\n  }\n\n  /**\n   * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private\n   */\n  _init() {\n    this.inputs = this.$element.find('input');\n    this.handles = this.$element.find('[data-slider-handle]');\n\n    this.$handle = this.handles.eq(0);\n    this.$input = this.inputs.length ? this.inputs.eq(0) : $(`#${this.$handle.attr('aria-controls')}`);\n    this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n    var isDbl = false,\n        _this = this;\n    if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n      this.options.disabled = true;\n      this.$element.addClass(this.options.disabledClass);\n    }\n    if (!this.inputs.length) {\n      this.inputs = $().add(this.$input);\n      this.options.binding = true;\n    }\n\n    this._setInitAttr(0);\n\n    if (this.handles[1]) {\n      this.options.doubleSided = true;\n      this.$handle2 = this.handles.eq(1);\n      this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $(`#${this.$handle2.attr('aria-controls')}`);\n\n      if (!this.inputs[1]) {\n        this.inputs = this.inputs.add(this.$input2);\n      }\n      isDbl = true;\n\n      // this.$handle.triggerHandler('click.zf.slider');\n      this._setInitAttr(1);\n    }\n\n    // Set handle positions\n    this.setHandles();\n\n    this._events();\n  }\n\n  setHandles() {\n    if(this.handles[1]) {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true, () => {\n        this._setHandlePos(this.$handle2, this.inputs.eq(1).val(), true);\n      });\n    } else {\n      this._setHandlePos(this.$handle, this.inputs.eq(0).val(), true);\n    }\n  }\n\n  _reflow() {\n    this.setHandles();\n  }\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)\n  */\n  _pctOfBar(value) {\n    var pctOfBar = percent(value - this.options.start, this.options.end - this.options.start)\n\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    }\n\n    return pctOfBar.toFixed(2)\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value\n  */\n  _value(pctOfBar) {\n    switch(this.options.positionValueFunction) {\n    case \"pow\":\n      pctOfBar = this._powTransform(pctOfBar);\n      break;\n    case \"log\":\n      pctOfBar = this._logTransform(pctOfBar);\n      break;\n    }\n    var value = (this.options.end - this.options.start) * pctOfBar + this.options.start;\n\n    return value\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function\n  */\n  _logTransform(value) {\n    return baseLog(this.options.nonLinearBase, ((value*(this.options.nonLinearBase-1))+1))\n  }\n\n  /**\n  * @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function\n  */\n  _powTransform(value) {\n    return (Math.pow(this.options.nonLinearBase, value) - 1) / (this.options.nonLinearBase - 1)\n  }\n\n  /**\n   * Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   * @fires Slider#changed\n   */\n  _setHandlePos($hndl, location, noInvert, cb) {\n    // don't move if the slider has been disabled since its initialization\n    if (this.$element.hasClass(this.options.disabledClass)) {\n      return;\n    }\n    //might need to alter that slightly for bars that will have odd number selections.\n    location = parseFloat(location);//on input change events, convert string to number...grumble.\n\n    // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n    if (location < this.options.start) { location = this.options.start; }\n    else if (location > this.options.end) { location = this.options.end; }\n\n    var isDbl = this.options.doubleSided;\n\n    if (isDbl) { //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n      if (this.handles.index($hndl) === 0) {\n        var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n        location = location >= h2Val ? h2Val - this.options.step : location;\n      } else {\n        var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n        location = location <= h1Val ? h1Val + this.options.step : location;\n      }\n    }\n\n    //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n    //for click and drag events, it's weird due to the scale(-1, 1) css property\n    if (this.options.vertical && !noInvert) {\n      location = this.options.end - location;\n    }\n\n    var _this = this,\n        vert = this.options.vertical,\n        hOrW = vert ? 'height' : 'width',\n        lOrT = vert ? 'top' : 'left',\n        handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n        elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = this._pctOfBar(location),\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n    var css = {};\n\n    this._setValues($hndl, location);\n\n    // TODO update to calculate based on values set to respective inputs??\n    if (isDbl) {\n      var isLeftHndl = this.handles.index($hndl) === 0,\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n          //percentage w/h of the handle compared to the slider bar\n          handlePct =  ~~(percent(handleDim, elemDim) * 100);\n      //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n      if (isLeftHndl) {\n        //left or top percentage value to apply to the fill bar.\n        css[lOrT] = `${movement}%`;\n        //calculate the new min-height/width for the fill bar.\n        dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n        //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n        //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n        if (cb && typeof cb === 'function') { cb(); }//this is only needed for the initialization of 2 handled sliders\n      } else {\n        //just caching the value of the left/bottom handle's left/top property\n        var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n        //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n        //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n        dim = movement - (isNaN(handlePos) ? (this.options.initialStart - this.options.start)/((this.options.end-this.options.start)/100) : handlePos) + handlePct;\n      }\n      // assign the min-height/width to our css object\n      css[`min-${hOrW}`] = `${dim}%`;\n    }\n\n    this.$element.one('finished.zf.animate', function() {\n                    /**\n                     * Fires when the handle is done moving.\n                     * @event Slider#moved\n                     */\n                    _this.$element.trigger('moved.zf.slider', [$hndl]);\n                });\n\n    //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n    var moveTime = this.$element.data('dragging') ? 1000/60 : this.options.moveTime;\n\n    Foundation.Move(moveTime, $hndl, function() {\n      // adjusting the left/top property of the handle, based on the percentage calculated above\n      // if movement isNaN, that is because the slider is hidden and we cannot determine handle width,\n      // fall back to next best guess.\n      if (isNaN(movement)) {\n        $hndl.css(lOrT, `${pctOfBar * 100}%`);\n      }\n      else {\n        $hndl.css(lOrT, `${movement}%`);\n      }\n\n      if (!_this.options.doubleSided) {\n        //if single-handled, a simple method to expand the fill bar\n        _this.$fill.css(hOrW, `${pctOfBar * 100}%`);\n      } else {\n        //otherwise, use the css object we created above\n        _this.$fill.css(css);\n      }\n    });\n\n\n    /**\n     * Fires when the value has not been change for a given time.\n     * @event Slider#changed\n     */\n    clearTimeout(_this.timeout);\n    _this.timeout = setTimeout(function(){\n      _this.$element.trigger('changed.zf.slider', [$hndl]);\n    }, _this.options.changedDelay);\n  }\n\n  /**\n   * Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.\n   */\n  _setInitAttr(idx) {\n    var initVal = (idx === 0 ? this.options.initialStart : this.options.initialEnd)\n    var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n    this.inputs.eq(idx).attr({\n      'id': id,\n      'max': this.options.end,\n      'min': this.options.start,\n      'step': this.options.step\n    });\n    this.inputs.eq(idx).val(initVal);\n    this.handles.eq(idx).attr({\n      'role': 'slider',\n      'aria-controls': id,\n      'aria-valuemax': this.options.end,\n      'aria-valuemin': this.options.start,\n      'aria-valuenow': initVal,\n      'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n      'tabindex': 0\n    });\n  }\n\n  /**\n   * Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.\n   */\n  _setValues($handle, val) {\n    var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n    this.inputs.eq(idx).val(val);\n    $handle.attr('aria-valuenow', val);\n  }\n\n  /**\n   * Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n   */\n  _handleEvent(e, $handle, val) {\n    var value, hasVal;\n    if (!val) {//click or drag events\n      e.preventDefault();\n      var _this = this,\n          vertical = this.options.vertical,\n          param = vertical ? 'height' : 'width',\n          direction = vertical ? 'top' : 'left',\n          eventOffset = vertical ? e.pageY : e.pageX,\n          halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n          barDim = this.$element[0].getBoundingClientRect()[param],\n          windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n\n      var elemOffset = this.$element.offset()[direction];\n\n      // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n      // best way to guess this is simulated is if clientY == pageY\n      if (e.clientY === e.pageY) { eventOffset = eventOffset + windowScroll; }\n      var eventFromBar = eventOffset - elemOffset;\n      var barXY;\n      if (eventFromBar < 0) {\n        barXY = 0;\n      } else if (eventFromBar > barDim) {\n        barXY = barDim;\n      } else {\n        barXY = eventFromBar;\n      }\n      var offsetPct = percent(barXY, barDim);\n\n      value = this._value(offsetPct);\n\n      // turn everything around for RTL, yay math!\n      if (Foundation.rtl() && !this.options.vertical) {value = this.options.end - value;}\n\n      value = _this._adjustValue(null, value);\n      //boolean flag for the setHandlePos fn, specifically for vertical sliders\n      hasVal = false;\n\n      if (!$handle) {//figure out which handle it is, pass it to the next function.\n        var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n            secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n      }\n\n    } else {//change event on input\n      value = this._adjustValue(null, val);\n      hasVal = true;\n    }\n\n    this._setHandlePos($handle, value, hasVal);\n  }\n\n  /**\n   * Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy\n   */\n  _adjustValue($handle, value) {\n    var val,\n      step = this.options.step,\n      div = parseFloat(step/2),\n      left, prev_val, next_val;\n    if (!!$handle) {\n      val = parseFloat($handle.attr('aria-valuenow'));\n    }\n    else {\n      val = value;\n    }\n    left = val % step;\n    prev_val = val - left;\n    next_val = prev_val + step;\n    if (left === 0) {\n      return val;\n    }\n    val = val >= prev_val + div ? next_val : prev_val;\n    return val;\n  }\n\n  /**\n   * Adds event listeners to the slider elements.\n   * @function\n   * @private\n   */\n  _events() {\n    this._eventsForHandle(this.$handle);\n    if(this.handles[1]) {\n      this._eventsForHandle(this.$handle2);\n    }\n  }\n\n\n  /**\n   * Adds event listeners a particular handle\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.\n   */\n  _eventsForHandle($handle) {\n    var _this = this,\n        curHandle,\n        timer;\n\n      this.inputs.off('change.zf.slider').on('change.zf.slider', function(e) {\n        var idx = _this.inputs.index($(this));\n        _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n      });\n\n      if (this.options.clickSelect) {\n        this.$element.off('click.zf.slider').on('click.zf.slider', function(e) {\n          if (_this.$element.data('dragging')) { return false; }\n\n          if (!$(e.target).is('[data-slider-handle]')) {\n            if (_this.options.doubleSided) {\n              _this._handleEvent(e);\n            } else {\n              _this._handleEvent(e, _this.$handle);\n            }\n          }\n        });\n      }\n\n    if (this.options.draggable) {\n      this.handles.addTouch();\n\n      var $body = $('body');\n      $handle\n        .off('mousedown.zf.slider')\n        .on('mousedown.zf.slider', function(e) {\n          $handle.addClass('is-dragging');\n          _this.$fill.addClass('is-dragging');//\n          _this.$element.data('dragging', true);\n\n          curHandle = $(e.currentTarget);\n\n          $body.on('mousemove.zf.slider', function(e) {\n            e.preventDefault();\n            _this._handleEvent(e, curHandle);\n\n          }).on('mouseup.zf.slider', function(e) {\n            _this._handleEvent(e, curHandle);\n\n            $handle.removeClass('is-dragging');\n            _this.$fill.removeClass('is-dragging');\n            _this.$element.data('dragging', false);\n\n            $body.off('mousemove.zf.slider mouseup.zf.slider');\n          });\n      })\n      // prevent events triggered by touch\n      .on('selectstart.zf.slider touchmove.zf.slider', function(e) {\n        e.preventDefault();\n      });\n    }\n\n    $handle.off('keydown.zf.slider').on('keydown.zf.slider', function(e) {\n      var _$handle = $(this),\n          idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n          oldValue = parseFloat(_this.inputs.eq(idx).val()),\n          newValue;\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Slider', {\n        decrease: function() {\n          newValue = oldValue - _this.options.step;\n        },\n        increase: function() {\n          newValue = oldValue + _this.options.step;\n        },\n        decrease_fast: function() {\n          newValue = oldValue - _this.options.step * 10;\n        },\n        increase_fast: function() {\n          newValue = oldValue + _this.options.step * 10;\n        },\n        handled: function() { // only set handle pos when event was handled specially\n          e.preventDefault();\n          _this._setHandlePos(_$handle, newValue, true);\n        }\n      });\n      /*if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }*/\n    });\n  }\n\n  /**\n   * Destroys the slider plugin.\n   */\n  destroy() {\n    this.handles.off('.zf.slider');\n    this.inputs.off('.zf.slider');\n    this.$element.off('.zf.slider');\n\n    clearTimeout(this.timeout);\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nSlider.defaults = {\n  /**\n   * Minimum value for the slider scale.\n   * @option\n   * @example 0\n   */\n  start: 0,\n  /**\n   * Maximum value for the slider scale.\n   * @option\n   * @example 100\n   */\n  end: 100,\n  /**\n   * Minimum value change per change event.\n   * @option\n   * @example 1\n   */\n  step: 1,\n  /**\n   * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @example 0\n   */\n  initialStart: 0,\n  /**\n   * Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @example 100\n   */\n  initialEnd: 100,\n  /**\n   * Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @example false\n   */\n  binding: false,\n  /**\n   * Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @example true\n   */\n  clickSelect: true,\n  /**\n   * Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @example false\n   */\n  vertical: false,\n  /**\n   * Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @example true\n   */\n  draggable: true,\n  /**\n   * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @example false\n   */\n  disabled: false,\n  /**\n   * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @example false\n   */\n  doubleSided: false,\n  /**\n   * Potential future feature.\n   */\n  // steps: 100,\n  /**\n   * Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @example 2\n   */\n  decimal: 2,\n  /**\n   * Time delay for dragged elements.\n   */\n  // dragDelay: 0,\n  /**\n   * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @example 200\n   */\n  moveTime: 200,//update this if changing the transition time in the sass\n  /**\n   * Class applied to disabled sliders.\n   * @option\n   * @example 'disabled'\n   */\n  disabledClass: 'disabled',\n  /**\n   * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @example false\n   */\n  invertVertical: false,\n  /**\n   * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n   * @option\n   * @example 500\n   */\n  changedDelay: 500,\n  /**\n  * Basevalue for non-linear sliders\n  * @option\n  * @example 5\n  */\n  nonLinearBase: 5,\n  /**\n  * Basevalue for non-linear sliders, possible values are: 'linear', 'pow' & 'log'. Pow and Log use the nonLinearBase setting.\n  * @option\n  * @example 'linear'\n  */\n  positionValueFunction: 'linear',\n};\n\nfunction percent(frac, num) {\n  return (frac / num);\n}\nfunction absPosition($handle, dir, clickPos, param) {\n  return Math.abs(($handle.position()[dir] + ($handle[param]() / 2)) - clickPos);\n}\nfunction baseLog(base, value) {\n  return Math.log(value)/Math.log(base)\n}\n\n// Window exports\nFoundation.plugin(Slider, 'Slider');\n\n}(jQuery);\n\n","'use strict';\n\n!function($) {\n\n/**\n * Sticky module.\n * @module foundation.sticky\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n */\n\nclass Sticky {\n  /**\n   * Creates a new instance of a sticky thing.\n   * @class\n   * @param {jQuery} element - jQuery object to make sticky.\n   * @param {Object} options - options object passed when creating the element programmatically.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n    this._init();\n\n    Foundation.registerPlugin(this, 'Sticky');\n  }\n\n  /**\n   * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n   * @function\n   * @private\n   */\n  _init() {\n    var $parent = this.$element.parent('[data-sticky-container]'),\n        id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n        _this = this;\n\n    if (!$parent.length) {\n      this.wasWrapped = true;\n    }\n    this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n    this.$container.addClass(this.options.containerClass);\n\n    this.$element.addClass(this.options.stickyClass)\n                 .attr({'data-resize': id});\n\n    this.scrollCount = this.options.checkEvery;\n    this.isStuck = false;\n    $(window).one('load.zf.sticky', function(){\n      //We calculate the container height to have correct values for anchor points offset calculation.\n      _this.containerHeight = _this.$element.css(\"display\") == \"none\" ? 0 : _this.$element[0].getBoundingClientRect().height;\n      _this.$container.css('height', _this.containerHeight);\n      _this.elemHeight = _this.containerHeight;\n      if(_this.options.anchor !== ''){\n        _this.$anchor = $('#' + _this.options.anchor);\n      }else{\n        _this._parsePoints();\n      }\n\n      _this._setSizes(function(){\n        var scroll = window.pageYOffset;\n        _this._calc(false, scroll);\n        //Unstick the element will ensure that proper classes are set.\n        if (!_this.isStuck) {\n          _this._removeSticky((scroll >= _this.topPoint) ? false : true);\n        }\n      });\n      _this._events(id.split('-').reverse().join('-'));\n    });\n  }\n\n  /**\n   * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n   * @function\n   * @private\n   */\n  _parsePoints() {\n    var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n        btm = this.options.btmAnchor== \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n        pts = [top, btm],\n        breaks = {};\n    for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n      var pt;\n      if (typeof pts[i] === 'number') {\n        pt = pts[i];\n      } else {\n        var place = pts[i].split(':'),\n            anchor = $(`#${place[0]}`);\n\n        pt = anchor.offset().top;\n        if (place[1] && place[1].toLowerCase() === 'bottom') {\n          pt += anchor[0].getBoundingClientRect().height;\n        }\n      }\n      breaks[i] = pt;\n    }\n\n\n    this.points = breaks;\n    return;\n  }\n\n  /**\n   * Adds event handlers for the scrolling element.\n   * @private\n   * @param {String} id - psuedo-random id for unique scroll event listener.\n   */\n  _events(id) {\n    var _this = this,\n        scrollListener = this.scrollListener = `scroll.zf.${id}`;\n    if (this.isOn) { return; }\n    if (this.canStick) {\n      this.isOn = true;\n      $(window).off(scrollListener)\n               .on(scrollListener, function(e) {\n                 if (_this.scrollCount === 0) {\n                   _this.scrollCount = _this.options.checkEvery;\n                   _this._setSizes(function() {\n                     _this._calc(false, window.pageYOffset);\n                   });\n                 } else {\n                   _this.scrollCount--;\n                   _this._calc(false, window.pageYOffset);\n                 }\n              });\n    }\n\n    this.$element.off('resizeme.zf.trigger')\n                 .on('resizeme.zf.trigger', function(e, el) {\n                     _this._setSizes(function() {\n                       _this._calc(false);\n                       if (_this.canStick) {\n                         if (!_this.isOn) {\n                           _this._events(id);\n                         }\n                       } else if (_this.isOn) {\n                         _this._pauseListeners(scrollListener);\n                       }\n                     });\n    });\n  }\n\n  /**\n   * Removes event handlers for scroll and change events on anchor.\n   * @fires Sticky#pause\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n   */\n  _pauseListeners(scrollListener) {\n    this.isOn = false;\n    $(window).off(scrollListener);\n\n    /**\n     * Fires when the plugin is paused due to resize event shrinking the view.\n     * @event Sticky#pause\n     * @private\n     */\n     this.$element.trigger('pause.zf.sticky');\n  }\n\n  /**\n   * Called on every `scroll` event and on `_init`\n   * fires functions based on booleans and cached values\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n   */\n  _calc(checkSizes, scroll) {\n    if (checkSizes) { this._setSizes(); }\n\n    if (!this.canStick) {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n      return false;\n    }\n\n    if (!scroll) { scroll = window.pageYOffset; }\n\n    if (scroll >= this.topPoint) {\n      if (scroll <= this.bottomPoint) {\n        if (!this.isStuck) {\n          this._setSticky();\n        }\n      } else {\n        if (this.isStuck) {\n          this._removeSticky(false);\n        }\n      }\n    } else {\n      if (this.isStuck) {\n        this._removeSticky(true);\n      }\n    }\n  }\n\n  /**\n   * Causes the $element to become stuck.\n   * Adds `position: fixed;`, and helper classes.\n   * @fires Sticky#stuckto\n   * @function\n   * @private\n   */\n  _setSticky() {\n    var _this = this,\n        stickTo = this.options.stickTo,\n        mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n        css = {};\n\n    css[mrgn] = `${this.options[mrgn]}em`;\n    css[stickTo] = 0;\n    css[notStuckTo] = 'auto';\n    this.isStuck = true;\n    this.$element.removeClass(`is-anchored is-at-${notStuckTo}`)\n                 .addClass(`is-stuck is-at-${stickTo}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become `position: fixed;`\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n                  * @event Sticky#stuckto\n                  */\n                 .trigger(`sticky.zf.stuckto:${stickTo}`);\n    this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function() {\n      _this._setSizes();\n    });\n  }\n\n  /**\n   * Causes the $element to become unstuck.\n   * Removes `position: fixed;`, and helper classes.\n   * Adds other helper classes.\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n   * @fires Sticky#unstuckfrom\n   * @private\n   */\n  _removeSticky(isTop) {\n    var stickTo = this.options.stickTo,\n        stickToTop = stickTo === 'top',\n        css = {},\n        anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n        mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n        notStuckTo = stickToTop ? 'bottom' : 'top',\n        topOrBottom = isTop ? 'top' : 'bottom';\n\n    css[mrgn] = 0;\n\n    css['bottom'] = 'auto';\n    if(isTop) {\n      css['top'] = 0;\n    } else {\n      css['top'] = anchorPt;\n    }\n\n    this.isStuck = false;\n    this.$element.removeClass(`is-stuck is-at-${stickTo}`)\n                 .addClass(`is-anchored is-at-${topOrBottom}`)\n                 .css(css)\n                 /**\n                  * Fires when the $element has become anchored.\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n                  * @event Sticky#unstuckfrom\n                  */\n                 .trigger(`sticky.zf.unstuckfrom:${topOrBottom}`);\n  }\n\n  /**\n   * Sets the $element and $container sizes for plugin.\n   * Calls `_setBreakPoints`.\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n   * @private\n   */\n  _setSizes(cb) {\n    this.canStick = Foundation.MediaQuery.is(this.options.stickyOn);\n    if (!this.canStick) {\n      if (cb && typeof cb === 'function') { cb(); }\n    }\n    var _this = this,\n        newElemWidth = this.$container[0].getBoundingClientRect().width,\n        comp = window.getComputedStyle(this.$container[0]),\n        pdngl = parseInt(comp['padding-left'], 10),\n        pdngr = parseInt(comp['padding-right'], 10);\n\n    if (this.$anchor && this.$anchor.length) {\n      this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n    } else {\n      this._parsePoints();\n    }\n\n    this.$element.css({\n      'max-width': `${newElemWidth - pdngl - pdngr}px`\n    });\n\n    var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n    if (this.$element.css(\"display\") == \"none\") {\n      newContainerHeight = 0;\n    }\n    this.containerHeight = newContainerHeight;\n    this.$container.css({\n      height: newContainerHeight\n    });\n    this.elemHeight = newContainerHeight;\n\n    if (!this.isStuck) {\n      if (this.$element.hasClass('is-at-bottom')) {\n        var anchorPt = (this.points ? this.points[1] - this.$container.offset().top : this.anchorHeight) - this.elemHeight;\n        this.$element.css('top', anchorPt);\n      }\n    }\n\n    this._setBreakPoints(newContainerHeight, function() {\n      if (cb && typeof cb === 'function') { cb(); }\n    });\n  }\n\n  /**\n   * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n   * @param {Function} cb - optional callback function to be called on completion.\n   * @private\n   */\n  _setBreakPoints(elemHeight, cb) {\n    if (!this.canStick) {\n      if (cb && typeof cb === 'function') { cb(); }\n      else { return false; }\n    }\n    var mTop = emCalc(this.options.marginTop),\n        mBtm = emCalc(this.options.marginBottom),\n        topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n        bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n    if (this.options.stickTo === 'top') {\n      topPoint -= mTop;\n      bottomPoint -= (elemHeight + mTop);\n    } else if (this.options.stickTo === 'bottom') {\n      topPoint -= (winHeight - (elemHeight + mBtm));\n      bottomPoint -= (winHeight - mBtm);\n    } else {\n      //this would be the stickTo: both option... tricky\n    }\n\n    this.topPoint = topPoint;\n    this.bottomPoint = bottomPoint;\n\n    if (cb && typeof cb === 'function') { cb(); }\n  }\n\n  /**\n   * Destroys the current sticky element.\n   * Resets the element to the top position first.\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n   * @function\n   */\n  destroy() {\n    this._removeSticky(true);\n\n    this.$element.removeClass(`${this.options.stickyClass} is-anchored is-at-top`)\n                 .css({\n                   height: '',\n                   top: '',\n                   bottom: '',\n                   'max-width': ''\n                 })\n                 .off('resizeme.zf.trigger');\n    if (this.$anchor && this.$anchor.length) {\n      this.$anchor.off('change.zf.sticky');\n    }\n    $(window).off(this.scrollListener);\n\n    if (this.wasWrapped) {\n      this.$element.unwrap();\n    } else {\n      this.$container.removeClass(this.options.containerClass)\n                     .css({\n                       height: ''\n                     });\n    }\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nSticky.defaults = {\n  /**\n   * Customizable container template. Add your own classes for styling and sizing.\n   * @option\n   * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n   */\n  container: '<div data-sticky-container></div>',\n  /**\n   * Location in the view the element sticks to.\n   * @option\n   * @example 'top'\n   */\n  stickTo: 'top',\n  /**\n   * If anchored to a single element, the id of that element.\n   * @option\n   * @example 'exampleId'\n   */\n  anchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the top anchor.\n   * @option\n   * @example 'exampleId:top'\n   */\n  topAnchor: '',\n  /**\n   * If using more than one element as anchor points, the id of the bottom anchor.\n   * @option\n   * @example 'exampleId:bottom'\n   */\n  btmAnchor: '',\n  /**\n   * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginTop: 1,\n  /**\n   * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n   * @option\n   * @example 1\n   */\n  marginBottom: 1,\n  /**\n   * Breakpoint string that is the minimum screen size an element should become sticky.\n   * @option\n   * @example 'medium'\n   */\n  stickyOn: 'medium',\n  /**\n   * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n   * @option\n   * @example 'sticky'\n   */\n  stickyClass: 'sticky',\n  /**\n   * Class applied to sticky container. Foundation defaults to `sticky-container`.\n   * @option\n   * @example 'sticky-container'\n   */\n  containerClass: 'sticky-container',\n  /**\n   * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n   * @option\n   * @example 50\n   */\n  checkEvery: -1\n};\n\n/**\n * Helper function to calculate em values\n * @param Number {em} - number of em's to calculate into pixels\n */\nfunction emCalc(em) {\n  return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n}\n\n// Window exports\nFoundation.plugin(Sticky, 'Sticky');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.timerAndImageLoader if tabs contain images\n */\n\nclass Tabs {\n  /**\n   * Creates a new instance of tabs.\n   * @class\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n    this._init();\n    Foundation.registerPlugin(this, 'Tabs');\n    Foundation.Keyboard.register('Tabs', {\n      'ENTER': 'open',\n      'SPACE': 'open',\n      'ARROW_RIGHT': 'next',\n      'ARROW_UP': 'previous',\n      'ARROW_DOWN': 'next',\n      'ARROW_LEFT': 'previous'\n      // 'TAB': 'next',\n      // 'SHIFT_TAB': 'previous'\n    });\n  }\n\n  /**\n   * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private\n   */\n  _init() {\n    var _this = this;\n\n    this.$element.attr({'role': 'tablist'});\n    this.$tabTitles = this.$element.find(`.${this.options.linkClass}`);\n    this.$tabContent = $(`[data-tabs-content=\"${this.$element[0].id}\"]`);\n\n    this.$tabTitles.each(function(){\n      var $elem = $(this),\n          $link = $elem.find('a'),\n          isActive = $elem.hasClass(`${_this.options.linkActiveClass}`),\n          hash = $link[0].hash.slice(1),\n          linkId = $link[0].id ? $link[0].id : `${hash}-label`,\n          $tabContent = $(`#${hash}`);\n\n      $elem.attr({'role': 'presentation'});\n\n      $link.attr({\n        'role': 'tab',\n        'aria-controls': hash,\n        'aria-selected': isActive,\n        'id': linkId\n      });\n\n      $tabContent.attr({\n        'role': 'tabpanel',\n        'aria-hidden': !isActive,\n        'aria-labelledby': linkId\n      });\n\n      if(isActive && _this.options.autoFocus){\n        $(window).load(function() {\n          $('html, body').animate({ scrollTop: $elem.offset().top }, _this.options.deepLinkSmudgeDelay, () => {\n            $link.focus();\n          });\n        });\n      }\n\n      //use browser to open a tab, if it exists in this tabset\n      if (_this.options.deepLink) {\n        var anchor = window.location.hash;\n        //need a hash and a relevant anchor in this tabset\n        if(anchor.length) {\n          var $link = $elem.find('[href=\"'+anchor+'\"]');\n          if ($link.length) {\n            _this.selectTab($(anchor));\n\n            //roll up a little to show the titles\n            if (_this.options.deepLinkSmudge) {\n              $(window).load(function() {\n                var offset = $elem.offset();\n                $('html, body').animate({ scrollTop: offset.top }, _this.options.deepLinkSmudgeDelay);\n              });\n            }\n\n            /**\n              * Fires when the zplugin has deeplinked at pageload\n              * @event Tabs#deeplink\n              */\n             $elem.trigger('deeplink.zf.tabs', [$link, $(anchor)]);\n           }\n        }\n      }\n    });\n\n    if(this.options.matchHeight) {\n      var $images = this.$tabContent.find('img');\n\n      if ($images.length) {\n        Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n      } else {\n        this._setHeight();\n      }\n    }\n\n    this._events();\n  }\n\n  /**\n   * Adds event handlers for items within the tabs.\n   * @private\n   */\n  _events() {\n    this._addKeyHandler();\n    this._addClickHandler();\n    this._setHeightMqHandler = null;\n\n    if (this.options.matchHeight) {\n      this._setHeightMqHandler = this._setHeight.bind(this);\n\n      $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n    }\n  }\n\n  /**\n   * Adds click handlers for items within the tabs.\n   * @private\n   */\n  _addClickHandler() {\n    var _this = this;\n\n    this.$element\n      .off('click.zf.tabs')\n      .on('click.zf.tabs', `.${this.options.linkClass}`, function(e){\n        e.preventDefault();\n        e.stopPropagation();\n        _this._handleTabChange($(this));\n      });\n  }\n\n  /**\n   * Adds keyboard event handlers for items within the tabs.\n   * @private\n   */\n  _addKeyHandler() {\n    var _this = this;\n\n    this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function(e){\n      if (e.which === 9) return;\n\n\n      var $element = $(this),\n        $elements = $element.parent('ul').children('li'),\n        $prevElement,\n        $nextElement;\n\n      $elements.each(function(i) {\n        if ($(this).is($element)) {\n          if (_this.options.wrapOnKeys) {\n            $prevElement = i === 0 ? $elements.last() : $elements.eq(i-1);\n            $nextElement = i === $elements.length -1 ? $elements.first() : $elements.eq(i+1);\n          } else {\n            $prevElement = $elements.eq(Math.max(0, i-1));\n            $nextElement = $elements.eq(Math.min(i+1, $elements.length-1));\n          }\n          return;\n        }\n      });\n\n      // handle keyboard event with keyboard util\n      Foundation.Keyboard.handleKey(e, 'Tabs', {\n        open: function() {\n          $element.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($element);\n        },\n        previous: function() {\n          $prevElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($prevElement);\n        },\n        next: function() {\n          $nextElement.find('[role=\"tab\"]').focus();\n          _this._handleTabChange($nextElement);\n        },\n        handled: function() {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      });\n    });\n  }\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\n   * @param {jQuery} $target - Tab to open.\n   * @fires Tabs#change\n   * @function\n   */\n  _handleTabChange($target) {\n\n    /**\n     * Check for active class on target. Collapse if exists.\n     */\n    if ($target.hasClass(`${this.options.linkActiveClass}`)) {\n        if(this.options.activeCollapse) {\n            this._collapseTab($target);\n\n           /**\n            * Fires when the zplugin has successfully collapsed tabs.\n            * @event Tabs#collapse\n            */\n            this.$element.trigger('collapse.zf.tabs', [$target]);\n        }\n        return;\n    }\n\n    var $oldTab = this.$element.\n          find(`.${this.options.linkClass}.${this.options.linkActiveClass}`),\n          $tabLink = $target.find('[role=\"tab\"]'),\n          hash = $tabLink[0].hash,\n          $targetContent = this.$tabContent.find(hash);\n\n    //close old tab\n    this._collapseTab($oldTab);\n\n    //open new tab\n    this._openTab($target);\n\n    //either replace or update browser history\n    if (this.options.deepLink) {\n      var anchor = $target.find('a').attr('href');\n\n      if (this.options.updateHistory) {\n        history.pushState({}, '', anchor);\n      } else {\n        history.replaceState({}, '', anchor);\n      }\n    }\n\n    /**\n     * Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change\n     */\n    this.$element.trigger('change.zf.tabs', [$target, $targetContent]);\n\n    //fire to children a mutation event\n    $targetContent.find(\"[data-mutate]\").trigger(\"mutateme.zf.trigger\");\n  }\n\n  /**\n   * Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to Open.\n   * @function\n   */\n  _openTab($target) {\n      var $tabLink = $target.find('[role=\"tab\"]'),\n          hash = $tabLink[0].hash,\n          $targetContent = this.$tabContent.find(hash);\n\n      $target.addClass(`${this.options.linkActiveClass}`);\n\n      $tabLink.attr({'aria-selected': 'true'});\n\n      $targetContent\n        .addClass(`${this.options.panelActiveClass}`)\n        .attr({'aria-hidden': 'false'});\n  }\n\n  /**\n   * Collapses `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to Open.\n   * @function\n   */\n  _collapseTab($target) {\n    var $target_anchor = $target\n      .removeClass(`${this.options.linkActiveClass}`)\n      .find('[role=\"tab\"]')\n      .attr({ 'aria-selected': 'false' });\n\n    $(`#${$target_anchor.attr('aria-controls')}`)\n      .removeClass(`${this.options.panelActiveClass}`)\n      .attr({ 'aria-hidden': 'true' });\n  }\n\n  /**\n   * Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @function\n   */\n  selectTab(elem) {\n    var idStr;\n\n    if (typeof elem === 'object') {\n      idStr = elem[0].id;\n    } else {\n      idStr = elem;\n    }\n\n    if (idStr.indexOf('#') < 0) {\n      idStr = `#${idStr}`;\n    }\n\n    var $target = this.$tabTitles.find(`[href=\"${idStr}\"]`).parent(`.${this.options.linkClass}`);\n\n    this._handleTabChange($target);\n  };\n  /**\n   * Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * @function\n   * @private\n   */\n  _setHeight() {\n    var max = 0;\n    this.$tabContent\n      .find(`.${this.options.panelClass}`)\n      .css('height', '')\n      .each(function() {\n        var panel = $(this),\n            isActive = panel.hasClass(`${this.options.panelActiveClass}`);\n\n        if (!isActive) {\n          panel.css({'visibility': 'hidden', 'display': 'block'});\n        }\n\n        var temp = this.getBoundingClientRect().height;\n\n        if (!isActive) {\n          panel.css({\n            'visibility': '',\n            'display': ''\n          });\n        }\n\n        max = temp > max ? temp : max;\n      })\n      .css('height', `${max}px`);\n  }\n\n  /**\n   * Destroys an instance of an tabs.\n   * @fires Tabs#destroyed\n   */\n  destroy() {\n    this.$element\n      .find(`.${this.options.linkClass}`)\n      .off('.zf.tabs').hide().end()\n      .find(`.${this.options.panelClass}`)\n      .hide();\n\n    if (this.options.matchHeight) {\n      if (this._setHeightMqHandler != null) {\n         $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n      }\n    }\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nTabs.defaults = {\n  /**\n   * Allows the window to scroll to content of pane specified by hash anchor\n   * @option\n   * @example false\n   */\n  deepLink: false,\n\n  /**\n   * Adjust the deep link scroll to make sure the top of the tab panel is visible\n   * @option\n   * @example false\n   */\n  deepLinkSmudge: false,\n\n  /**\n   * Animation time (ms) for the deep link adjustment\n   * @option\n   * @example 300\n   */\n  deepLinkSmudgeDelay: 300,\n\n  /**\n   * Update the browser history with the open tab\n   * @option\n   * @example false\n   */\n  updateHistory: false,\n\n  /**\n   * Allows the window to scroll to content of active pane on load if set to true.\n   * Not recommended if more than one tab panel per page.\n   * @option\n   * @example false\n   */\n  autoFocus: false,\n\n  /**\n   * Allows keyboard input to 'wrap' around the tab links.\n   * @option\n   * @example true\n   */\n  wrapOnKeys: true,\n\n  /**\n   * Allows the tab content panes to match heights if set to true.\n   * @option\n   * @example false\n   */\n  matchHeight: false,\n\n  /**\n   * Allows active tabs to collapse when clicked.\n   * @option\n   * @example false\n   */\n  activeCollapse: false,\n\n  /**\n   * Class applied to `li`'s in tab link list.\n   * @option\n   * @example 'tabs-title'\n   */\n  linkClass: 'tabs-title',\n\n  /**\n   * Class applied to the active `li` in tab link list.\n   * @option\n   * @example 'is-active'\n   */\n  linkActiveClass: 'is-active',\n\n  /**\n   * Class applied to the content containers.\n   * @option\n   * @example 'tabs-panel'\n   */\n  panelClass: 'tabs-panel',\n\n  /**\n   * Class applied to the active content container.\n   * @option\n   * @example 'is-active'\n   */\n  panelActiveClass: 'is-active'\n};\n\n// Window exports\nFoundation.plugin(Tabs, 'Tabs');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n */\n\nclass Toggler {\n  /**\n   * Creates a new instance of Toggler.\n   * @class\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Toggler.defaults, element.data(), options);\n    this.className = '';\n\n    this._init();\n    this._events();\n\n    Foundation.registerPlugin(this, 'Toggler');\n  }\n\n  /**\n   * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private\n   */\n  _init() {\n    var input;\n    // Parse animation classes if they were set\n    if (this.options.animate) {\n      input = this.options.animate.split(' ');\n\n      this.animationIn = input[0];\n      this.animationOut = input[1] || null;\n    }\n    // Otherwise, parse toggle class\n    else {\n      input = this.$element.data('toggler');\n      // Allow for a . at the beginning of the string\n      this.className = input[0] === '.' ? input.slice(1) : input;\n    }\n\n    // Add ARIA attributes to triggers\n    var id = this.$element[0].id;\n    $(`[data-open=\"${id}\"], [data-close=\"${id}\"], [data-toggle=\"${id}\"]`)\n      .attr('aria-controls', id);\n    // If the target is hidden, add aria-hidden\n    this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n  }\n\n  /**\n   * Initializes events for the toggle trigger.\n   * @function\n   * @private\n   */\n  _events() {\n    this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n  }\n\n  /**\n   * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off\n   */\n  toggle() {\n    this[ this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n  }\n\n  _toggleClass() {\n    this.$element.toggleClass(this.className);\n\n    var isOn = this.$element.hasClass(this.className);\n    if (isOn) {\n      /**\n       * Fires if the target element has the class after a toggle.\n       * @event Toggler#on\n       */\n      this.$element.trigger('on.zf.toggler');\n    }\n    else {\n      /**\n       * Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off\n       */\n      this.$element.trigger('off.zf.toggler');\n    }\n\n    this._updateARIA(isOn);\n  }\n\n  _toggleAnimate() {\n    var _this = this;\n\n    if (this.$element.is(':hidden')) {\n      Foundation.Motion.animateIn(this.$element, this.animationIn, function() {\n        _this._updateARIA(true);\n        this.trigger('on.zf.toggler');\n      });\n    }\n    else {\n      Foundation.Motion.animateOut(this.$element, this.animationOut, function() {\n        _this._updateARIA(false);\n        this.trigger('off.zf.toggler');\n      });\n    }\n  }\n\n  _updateARIA(isOn) {\n    this.$element.attr('aria-expanded', isOn ? true : false);\n  }\n\n  /**\n   * Destroys the instance of Toggler on the element.\n   * @function\n   */\n  destroy() {\n    this.$element.off('.zf.toggler');\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nToggler.defaults = {\n  /**\n   * Tells the plugin if the element should animated when toggled.\n   * @option\n   * @example false\n   */\n  animate: false\n};\n\n// Window exports\nFoundation.plugin(Toggler, 'Toggler');\n\n}(jQuery);\n","'use strict';\n\n!function($) {\n\n/**\n * Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n */\n\nclass Tooltip {\n  /**\n   * Creates a new instance of a Tooltip.\n   * @class\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.\n   */\n  constructor(element, options) {\n    this.$element = element;\n    this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n    this.isActive = false;\n    this.isClick = false;\n    this._init();\n\n    Foundation.registerPlugin(this, 'Tooltip');\n  }\n\n  /**\n   * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n   * @private\n   */\n  _init() {\n    var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n    this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n    this.options.tipText = this.options.tipText || this.$element.attr('title');\n    this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n    if (this.options.allowHtml) {\n      this.template.appendTo(document.body)\n        .html(this.options.tipText)\n        .hide();\n    } else {\n      this.template.appendTo(document.body)\n        .text(this.options.tipText)\n        .hide();\n    }\n\n    this.$element.attr({\n      'title': '',\n      'aria-describedby': elemId,\n      'data-yeti-box': elemId,\n      'data-toggle': elemId,\n      'data-resize': elemId\n    }).addClass(this.options.triggerClass);\n\n    //helper variables to track movement on collisions\n    this.usedPositions = [];\n    this.counter = 4;\n    this.classChanged = false;\n\n    this._events();\n  }\n\n  /**\n   * Grabs the current positioning class, if present, and returns the value or an empty string.\n   * @private\n   */\n  _getPositionClass(element) {\n    if (!element) { return ''; }\n    // var position = element.attr('class').match(/top|left|right/g);\n    var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n    return position;\n  };\n  /**\n   * builds the tooltip element, adds attributes, and returns the template.\n   * @private\n   */\n  _buildTemplate(id) {\n    var templateClasses = (`${this.options.tooltipClass} ${this.options.positionClass} ${this.options.templateClasses}`).trim();\n    var $template =  $('<div></div>').addClass(templateClasses).attr({\n      'role': 'tooltip',\n      'aria-hidden': true,\n      'data-is-active': false,\n      'data-is-focus': false,\n      'id': id\n    });\n    return $template;\n  }\n\n  /**\n   * Function that gets called if a collision event is detected.\n   * @param {String} position - positioning class to try\n   * @private\n   */\n  _reposition(position) {\n    this.usedPositions.push(position ? position : 'bottom');\n\n    //default, try switching to opposite side\n    if (!position && (this.usedPositions.indexOf('top') < 0)) {\n      this.template.addClass('top');\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') < 0)) {\n      this.template.removeClass(position);\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') < 0)) {\n      this.template.removeClass(position)\n          .addClass('right');\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') < 0)) {\n      this.template.removeClass(position)\n          .addClass('left');\n    }\n\n    //if default change didn't work, try bottom or left first\n    else if (!position && (this.usedPositions.indexOf('top') > -1) && (this.usedPositions.indexOf('left') < 0)) {\n      this.template.addClass('left');\n    } else if (position === 'top' && (this.usedPositions.indexOf('bottom') > -1) && (this.usedPositions.indexOf('left') < 0)) {\n      this.template.removeClass(position)\n          .addClass('left');\n    } else if (position === 'left' && (this.usedPositions.indexOf('right') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\n      this.template.removeClass(position);\n    } else if (position === 'right' && (this.usedPositions.indexOf('left') > -1) && (this.usedPositions.indexOf('bottom') < 0)) {\n      this.template.removeClass(position);\n    }\n    //if nothing cleared, set to bottom\n    else {\n      this.template.removeClass(position);\n    }\n    this.classChanged = true;\n    this.counter--;\n  }\n\n  /**\n   * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\n   * @private\n   */\n  _setPosition() {\n    var position = this._getPositionClass(this.template),\n        $tipDims = Foundation.Box.GetDimensions(this.template),\n        $anchorDims = Foundation.Box.GetDimensions(this.$element),\n        direction = (position === 'left' ? 'left' : ((position === 'right') ? 'left' : 'top')),\n        param = (direction === 'top') ? 'height' : 'width',\n        offset = (param === 'height') ? this.options.vOffset : this.options.hOffset,\n        _this = this;\n\n    if (($tipDims.width >= $tipDims.windowDims.width) || (!this.counter && !Foundation.Box.ImNotTouchingYou(this.template))) {\n      this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n      // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n        'width': $anchorDims.windowDims.width - (this.options.hOffset * 2),\n        'height': 'auto'\n      });\n      return false;\n    }\n\n    this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element,'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n    while(!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n      this._reposition(position);\n      this._setPosition();\n    }\n  }\n\n  /**\n   * reveals the tooltip, and fires an event to close any other open tooltips on the page\n   * @fires Tooltip#closeme\n   * @fires Tooltip#show\n   * @function\n   */\n  show() {\n    if (this.options.showOn !== 'all' && !Foundation.MediaQuery.is(this.options.showOn)) {\n      // console.error('The screen is too small to display this tooltip');\n      return false;\n    }\n\n    var _this = this;\n    this.template.css('visibility', 'hidden').show();\n    this._setPosition();\n\n    /**\n     * Fires to close all other open tooltips on the page\n     * @event Closeme#tooltip\n     */\n    this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n\n    this.template.attr({\n      'data-is-active': true,\n      'aria-hidden': false\n    });\n    _this.isActive = true;\n    // console.log(this.template);\n    this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function() {\n      //maybe do stuff?\n    });\n    /**\n     * Fires when the tooltip is shown\n     * @event Tooltip#show\n     */\n    this.$element.trigger('show.zf.tooltip');\n  }\n\n  /**\n   * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n   * @fires Tooltip#hide\n   * @function\n   */\n  hide() {\n    // console.log('hiding', this.$element.data('yeti-box'));\n    var _this = this;\n    this.template.stop().attr({\n      'aria-hidden': true,\n      'data-is-active': false\n    }).fadeOut(this.options.fadeOutDuration, function() {\n      _this.isActive = false;\n      _this.isClick = false;\n      if (_this.classChanged) {\n        _this.template\n             .removeClass(_this._getPositionClass(_this.template))\n             .addClass(_this.options.positionClass);\n\n       _this.usedPositions = [];\n       _this.counter = 4;\n       _this.classChanged = false;\n      }\n    });\n    /**\n     * fires when the tooltip is hidden\n     * @event Tooltip#hide\n     */\n    this.$element.trigger('hide.zf.tooltip');\n  }\n\n  /**\n   * adds event listeners for the tooltip and its anchor\n   * TODO combine some of the listeners like focus and mouseenter, etc.\n   * @private\n   */\n  _events() {\n    var _this = this;\n    var $template = this.template;\n    var isFocus = false;\n\n    if (!this.options.disableHover) {\n\n      this.$element\n      .on('mouseenter.zf.tooltip', function(e) {\n        if (!_this.isActive) {\n          _this.timeout = setTimeout(function() {\n            _this.show();\n          }, _this.options.hoverDelay);\n        }\n      })\n      .on('mouseleave.zf.tooltip', function(e) {\n        clearTimeout(_this.timeout);\n        if (!isFocus || (_this.isClick && !_this.options.clickOpen)) {\n          _this.hide();\n        }\n      });\n    }\n\n    if (this.options.clickOpen) {\n      this.$element.on('mousedown.zf.tooltip', function(e) {\n        e.stopImmediatePropagation();\n        if (_this.isClick) {\n          //_this.hide();\n          // _this.isClick = false;\n        } else {\n          _this.isClick = true;\n          if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n            _this.show();\n          }\n        }\n      });\n    } else {\n      this.$element.on('mousedown.zf.tooltip', function(e) {\n        e.stopImmediatePropagation();\n        _this.isClick = true;\n      });\n    }\n\n    if (!this.options.disableForTouch) {\n      this.$element\n      .on('tap.zf.tooltip touchend.zf.tooltip', function(e) {\n        _this.isActive ? _this.hide() : _this.show();\n      });\n    }\n\n    this.$element.on({\n      // 'toggle.zf.trigger': this.toggle.bind(this),\n      // 'close.zf.trigger': this.hide.bind(this)\n      'close.zf.trigger': this.hide.bind(this)\n    });\n\n    this.$element\n      .on('focus.zf.tooltip', function(e) {\n        isFocus = true;\n        if (_this.isClick) {\n          // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n          // a real focus, otherwise on hover and come back we get bad behavior\n          if(!_this.options.clickOpen) { isFocus = false; }\n          return false;\n        } else {\n          _this.show();\n        }\n      })\n\n      .on('focusout.zf.tooltip', function(e) {\n        isFocus = false;\n        _this.isClick = false;\n        _this.hide();\n      })\n\n      .on('resizeme.zf.trigger', function() {\n        if (_this.isActive) {\n          _this._setPosition();\n        }\n      });\n  }\n\n  /**\n   * adds a toggle method, in addition to the static show() & hide() functions\n   * @function\n   */\n  toggle() {\n    if (this.isActive) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Destroys an instance of tooltip, removes template element from the view.\n   * @function\n   */\n  destroy() {\n    this.$element.attr('title', this.template.text())\n                 .off('.zf.trigger .zf.tooltip')\n                 .removeClass('has-tip top right left')\n                 .removeAttr('aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box');\n\n    this.template.remove();\n\n    Foundation.unregisterPlugin(this);\n  }\n}\n\nTooltip.defaults = {\n  disableForTouch: false,\n  /**\n   * Time, in ms, before a tooltip should open on hover.\n   * @option\n   * @example 200\n   */\n  hoverDelay: 200,\n  /**\n   * Time, in ms, a tooltip should take to fade into view.\n   * @option\n   * @example 150\n   */\n  fadeInDuration: 150,\n  /**\n   * Time, in ms, a tooltip should take to fade out of view.\n   * @option\n   * @example 150\n   */\n  fadeOutDuration: 150,\n  /**\n   * Disables hover events from opening the tooltip if set to true\n   * @option\n   * @example false\n   */\n  disableHover: false,\n  /**\n   * Optional addtional classes to apply to the tooltip template on init.\n   * @option\n   * @example 'my-cool-tip-class'\n   */\n  templateClasses: '',\n  /**\n   * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n   * @option\n   * @example 'tooltip'\n   */\n  tooltipClass: 'tooltip',\n  /**\n   * Class applied to the tooltip anchor element.\n   * @option\n   * @example 'has-tip'\n   */\n  triggerClass: 'has-tip',\n  /**\n   * Minimum breakpoint size at which to open the tooltip.\n   * @option\n   * @example 'small'\n   */\n  showOn: 'small',\n  /**\n   * Custom template to be used to generate markup for tooltip.\n   * @option\n   * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n   */\n  template: '',\n  /**\n   * Text displayed in the tooltip template on open.\n   * @option\n   * @example 'Some cool space fact here.'\n   */\n  tipText: '',\n  touchCloseText: 'Tap to close.',\n  /**\n   * Allows the tooltip to remain open if triggered with a click or touch event.\n   * @option\n   * @example true\n   */\n  clickOpen: true,\n  /**\n   * Additional positioning classes, set by the JS\n   * @option\n   * @example 'top'\n   */\n  positionClass: '',\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the Y axis.\n   * @option\n   * @example 10\n   */\n  vOffset: 10,\n  /**\n   * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n   * @option\n   * @example 12\n   */\n  hOffset: 12,\n    /**\n   * Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\n   * allowing HTML may open yourself up to XSS attacks.\n   * @option\n   * @example false\n   */\n  allowHtml: false\n};\n\n/**\n * TODO utilize resize event trigger\n */\n\n// Window exports\nFoundation.plugin(Tooltip, 'Tooltip');\n\n}(jQuery);\n","// Connect Reveal\n$('#connect').hide();\n$( \".toggleConnect\" ).click(function() {\n  $('.close').fadeIn('slow');\n  $('html').addClass( \"connectFixed\" );\n  $('#connect .left-panel').show();\n  $('#connect .right-panel').show();\n  $('#connect').fadeIn(function() {\n    $('#connect .left-panel').addClass(\"visible\");\n    $('#connect .right-panel').addClass(\"visible\");\n  });\n});\n$( \".close\" ).click(function() {\n  $('#connect .left-panel').removeClass(\"visible\");\n  $('#connect .right-panel').removeClass(\"visible\");\n  $('#connect').fadeOut(function() {\n    $('html').removeClass( \"connectFixed\" );\n  });\n});\n","// Mobile Nav\nvar lastScrollTop = 0;\n$(window).scroll(function(event){\n   var st = $(this).scrollTop();\n\n   if (st > lastScrollTop){\n     if(st > 150) {\n      $(\"#main-nav\").addClass('peek-hide');\n      $(\"#logoTag\").addClass('peek-hide');\n     }\n   } else {\n     var offset = lastScrollTop - st;\n     if (offset > 2) {\n       $(\"#main-nav\").removeClass('peek-hide');\n       $(\"#logoTag\").removeClass('peek-hide');\n       $(\"#main-nav\").addClass('peek');\n       $(\"#logoTag\").addClass('peek');\n     }\n   }\n   lastScrollTop = st;\n});\n\n// Where the magic happens\n$( \".nav-toggle\" ).click(function(e) {\n  $(this).toggleClass( \"active\" );\n\n  $('.full-nav').toggleClass(\"visible\");\n  $('body').toggleClass( \"navFixed\" );\n\n});\n$(window).resize(function(){\n  if ($(window).width() >= 640){\n    $('.nav-toggle').removeClass( \"active\" );\n    $('body').removeClass( \"navFixed\" );\n    $('.full-nav').removeClass(\"visible\");\n    $('.logo').removeClass( \"black\" );\n  }\n});\n","$(function() {\n  $('a[href*=\\\\#]:not([href=\\\\#])').click(function() {\n    if (location.pathname.replace(/^\\//,'') == this.pathname.replace(/^\\//,'') && location.hostname == this.hostname) {\n      var target = $(this.hash);\n      target = target.length ? target : $('[name=' + this.hash.slice(1) +']');\n      if (target.length) {\n        $('html,body').animate({\n          scrollTop: target.offset().top\n        }, 1000);\n        return false;\n      }\n    }\n  });\n});\n","// Some jquery to add some styling to the markdown parsed html on showcase pages\n// Find imgs in a paragraph tag and wrap them in a row\n$( \"#contentBody p\" ).has( \"img\" ).wrap( '<div class=\"row expanded collapse flex-wrap\" />');\n// Remove the wrapping p tag\n$( \".flex-wrap p\" ).has( \"img\" ).contents().unwrap();\n\nvar rowWrap = '<div class=\"row align-center content\"><div class=\"small-11 medium-10 large-9 columns content-col\"></div></div>';\nvar firstChild = $('#contentBody').children().first();\n\nfirstChild.not(\".flex-wrap\").nextUntil('.flex-wrap').addBack().wrapAll(rowWrap);\n\n$(\".flex-wrap\").each(function(i) {\n  $(this).nextUntil('.flex-wrap').wrapAll(rowWrap);\n  $(this).has( \"a\" ).find(\"a\").wrap( \"<div class='columns'></div>\" );\n  $(this).has( \"img\" ).find(\"img\").wrap( \"<div class='columns'></div>\" );\n  $(this).has( \"a\" ).find(\"a .columns\").contents().unwrap();\n});\n$(\".youtube-video\").addClass(\"flex-video widescreen\");\n\n// IMG Captions\n$(\".columns img\").each(function() {\n  var imageCaption = $(this).attr(\"title\");\n  if (imageCaption) {\n    $(\"<h6>\" + imageCaption + \"</h6>\").insertBefore(this);\n  }\n});\n","var controller = new ScrollMagic.Controller();\n\n$('.statement-pop').each(function(){\n  var currentStatement = this;\n  var trigger = currentStatement.closest('section');\n\n  var tween_statement = TweenMax\n  .fromTo(currentStatement, 1, {\n    transform: 'translate(0px, 60px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  })\n  .setTween(tween_statement)\n  // .addIndicators({name: \"Pop\"})\n  .addTo(controller);\n});\n\n$('.hint').each(function(){\n  var currentHint = this;\n  var trigger = currentHint.closest('section');\n\n  var tween_hint = TweenMax\n  .fromTo(currentHint, 1, {\n    transform: 'translate(0px, -60px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  })\n  .setTween(tween_hint)\n  // .addIndicators({name: \"Hint\", indent: 120})\n  .addTo(controller);\n});\n\n$('.drawicon').each(function(){\n  var currentDrawicon = this;\n  var trigger = currentDrawicon.closest('section');\n\n  var tween_drawicon = TweenMax\n  .fromTo(currentDrawicon, 1, {\n    transform: 'translate(0px, -90px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  })\n  .setTween(tween_drawicon)\n  // .addIndicators({name: \"Hint\", indent: 120})\n  .addTo(controller);\n});\n\n$('.talk h2').each(function(){\n  var currentTalkHead = this;\n  var trigger = currentTalkHead.closest('section');\n\n  var tween_talk = TweenMax\n  .fromTo(currentTalkHead, 1, {\n    transform: 'translate(0px, -60px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"500\"\n  })\n  .setTween(tween_talk)\n  // .addIndicators({name: \"talk\"})\n  .addTo(controller);\n});\n\n// Img reveal\n$('.flex-wrap img').each(function(){\n  var currentImg = this;\n  var trigger = currentImg;\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"190%\"\n  })\n  //.setTween(tween_img)\n  .setClassToggle(currentImg, 'reveal')\n  // .addIndicators({name: \"talk\"})\n  .addTo(controller);\n});\n\n$('.parallax').each(function(){\n  var currentParallax = this;\n  var trigger = currentParallax.closest('section');\n\n  var tween_parallax = TweenMax\n  .fromTo(currentParallax, 1, {\n    transform: 'translate(0px, -75px) scale(1.5)'\n  }, {\n    transform: 'translate(0px, 75px) scale(1.5)', ease: Linear.easeNone\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: trigger,\n    triggerHook: \"onEnter\",\n    duration: \"200%\"\n  })\n  .setTween(tween_parallax)\n  // .addIndicators({name: \"parallax\"})\n  .addTo(controller);\n});\n","//Tweens\nvar tween_header = new TimelineMax()\n  .fromTo('#header .overlay', 1, {\n    opacity: 0\n  }, {\n    opacity: 1\n  })\n  .fromTo('#headline', 1, {\n    transform: \"translate(0, 0)\",\n    opacity: 1\n  }, {\n    transform: \"translate(0, 150px)\",\n    opacity: 0\n  }, 0)\n  .fromTo('#subtitle', 1, {\n    transform: 'translate(0px, 0px)',\n    opacity: 1\n  }, {\n    transform: 'translate(0px, 150px)',\n    opacity: 0\n  }, 0)\n;\n\nvar header = new ScrollMagic.Scene({\n  triggerElement: '#header',\n  triggerHook: \"onLeave\",\n  duration: \"200%\"\n})\n.setTween(tween_header)\n// .addIndicators({name: \"overlay\"})\n.addTo(controller);\n\n// NAV PARALLAX\n// var headerNavParallax = new ScrollMagic.Scene({\n//   triggerElement: '#main',\n//   triggerHook: \"onLeave\",\n//   offset: 100\n// })\n// .setClassToggle(\"#main-nav\", 'fixed')\n// .addIndicators({name: \"navLax\"})\n// .addTo(controller);\n//\n// var headerNavParallax = new ScrollMagic.Scene({\n//   triggerElement: '#main',\n//   triggerHook: \"onLeave\",\n//   offset: 100\n// })\n// .setClassToggle(\"#logoTag\", 'fixed')\n// .addIndicators({name: \"navLax\"})\n// .addTo(controller);\n","// Tweens\n//heart\nif($(\"body\").hasClass(\"Process\")) {\n  var tween_heart = TweenMax\n  .staggerFromTo('#heart .columns', 2, {\n    transform: 'translate(0px, 100px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#heart\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  })\n  .setTween(tween_heart)\n  // .addIndicators({name: \"heart\"})\n  .addTo(controller);\n\n  //services\n  var tween_services = new TimelineMax()\n  .staggerFromTo('.Process #services li:nth-child(odd)', 2, {\n    transform: 'translate(-50px, 0px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \".Process #services\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  })\n  .setTween(tween_services)\n  // .addIndicators({name: \"services\"})\n  .addTo(controller);\n\n  var tween_services = new TimelineMax()\n  .staggerFromTo('.Process #services li:nth-child(even)', 2, {\n    transform: 'translate(50px, 0px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \".Process #services\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  })\n  .setTween(tween_services)\n  // .addIndicators({name: \"services\"})\n  .addTo(controller);\n\n  // location\n  var tween_location = TweenMax\n  .staggerFromTo('#location .columns', 2, {\n    transform: 'translate(0px, 100px)'\n  }, {\n    transform: 'translate(0px, 0px)', ease: Back.easeOut\n  }, 0.5);\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#location\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  })\n  .setTween(tween_location)\n  // .addIndicators({name: \"Northwest\"})\n  .addTo(controller);\n\n  //bio pic\n  var tween_bio = TweenMax\n  .fromTo('.bio', 1, {\n    transform: 'translate(0px, -40px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  });\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#whois\",\n    triggerHook: \"onEnter\",\n    duration: \"150%\"\n  })\n  .setTween(tween_bio)\n  // .addIndicators({name: \"bio\"})\n  .addTo(controller);\n\n  // Instagram\n  var tween_instagram = new TimelineMax()\n  .staggerFromTo('.sl-pop div', 2, {\n    transform: 'translate(0px, 100px)'\n  }, {\n    transform: 'translate(0px, 0px)'\n  }, 0.33)\n;\n\n  var scene = new ScrollMagic.Scene({\n    triggerElement: \"#instagram\",\n    triggerHook: \"onEnter\",\n    duration: \"100%\"\n  })\n  .setTween(tween_instagram)\n  // .addIndicators({name: \"instagram\"})\n  .addTo(controller);\n\n  $('.type-row').each(function(){\n    var currentHint = this;\n    var trigger = currentHint.closest('article');\n\n    var tween_pull = TweenMax\n    .fromTo(currentHint, 1, {\n      transform: 'translate(0px, 100px)'\n    }, {\n      transform: 'translate(0px, 0px)'\n    });\n\n    var scene = new ScrollMagic.Scene({\n      triggerElement: trigger,\n      triggerHook: \"onEnter\",\n      duration: \"100%\"\n    })\n    .setTween(tween_pull)\n    // .addIndicators({name: \"Pull\", indent: 120})\n    .addTo(controller);\n  });\n\n}\n","if($(\"body\").hasClass(\"Showcase\")) {\n\n  // var tween_case = new TimelineMax()\n  // .to('#caseContainer', 0.5, {\n  //   z: -150\n  // })\n  // .to(\"#caseContainer\", 1,   {x: \"-33.33%\"})\t// move in to first panel\n  // .to(\"#caseContainer\", 0.5, {z: 0})\t\t\t\t// move back to origin in 3D space\n  // // animate to third panel\n  // .to(\"#caseContainer\", 0.5, {z: -150, delay: 1})\n  // .to(\"#caseContainer\", 1,   {x: \"-66.66%\"})\n  // .to(\"#caseContainer\", 0.5, {z: 0});\n  //\n  // var scene = new ScrollMagic.Scene({\n  //   triggerElement: \"#pinContainer\",\n  //   triggerHook: \"onLeave\",\n  //   duration: \"500%\"\n  // })\n  // .setPin(\"#pinContainer\")\n  // .setTween(tween_case)\n  // // .addIndicators({name: \"swipe\", indent: 120})\n  // .addTo(controller);\n}\n"]}